{"version":3,"file":"static/js/804.488f28f7.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","graphql/create.js","graphql/delete.js","views/app-views/sub_school/form.js","views/app-views/sub_school/table.js","views/app-views/sub_school/index.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const CREATE_SCHOOL = gql `\r\n    mutation createSchool($name: String, $nameMgl: String) {\r\n      createSchool(name: $name, nameMgl: $nameMgl) {\r\n        school {\r\n          id\r\n          name\r\n          nameMgl\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nexport const CREATE_SUB_SCHOOL = gql `\r\n    mutation createSubSchool($name: String, $nameMgl: String, $school: Int!){\r\n      createSubSchool(name: $name, nameMgl: $nameMgl, school: $school) {\r\n        subSchool {\r\n          id\r\n          name\r\n          nameMgl \r\n          school {\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nexport const REGISTER = gql `\r\n    mutation register($email: String!, $username: String!, $isTeacher: Boolean!, $isStudent: Boolean!, $password1: String!, $password2: String!){\r\n      register(email: $email, username: $username, isTeacher: $isTeacher, isStudent: $isStudent, password1: $password1, password2: $password2) {\r\n          success\r\n          errors\r\n          token\r\n      } \r\n    }\r\n\r\n`;\r\n\r\nexport const CREATE_TEACHER = gql `\r\n    mutation createTeacher($address: String, $birthCity: Int, $birthDistrict: Int, $birthdate: String, $degree: Int,\r\n                            $familyName: String, $joinBefore: String, $joinDate: String, $name: String, $phone: String, $phone2: String,\r\n                            $registerNo: String, $school: Int, $sex: String, $status: Int, $subSchool: Int, $teacherCode: String!,\r\n                            $username: String!, $password: String!, $email: String!, $access: String!\r\n                            # $user: Int\r\n                            ) {\r\n      createTeacher(address: $address, birthCity: $birthCity, birthDistrict: $birthDistrict, birthdate: $birthdate, degree: $degree,\r\n                             familyName: $familyName, joinBefore: $joinBefore, joinDate: $joinDate, name: $name, phone: $phone, phone2: $phone2, \r\n                            registerNo: $registerNo, school: $school, sex: $sex, status: $status, subSchool: $subSchool, \r\n                            teacherCode: $teacherCode, access: $access,\r\n                            username: $username, password: $password, email: $email\r\n                            # user: $user \r\n                            ) {\r\n        teacher {\r\n          id\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nexport const CREATE_EMPLOYEE = gql `\r\n    mutation createEmployee(\r\n                $address: String\r\n                $birthCity: Int\r\n                $birthDistrict: Int\r\n                $birthdate: String\r\n                $email: String!\r\n                $employeeCode: String!\r\n                $familyName: String\r\n                $group: Int\r\n                $name: String\r\n                $password: String!\r\n                $phone: String\r\n                $phone2: String\r\n                $photo: Upload\r\n                $registerNo: String\r\n                $sex: String\r\n                $status: Int\r\n                $compartment: Int\r\n                $username: String!\r\n              ) {\r\n      createEmployee(\r\n                address: $address\r\n                birthCity: $birthCity\r\n                birthDistrict: $birthDistrict\r\n                birthdate: $birthdate\r\n                email: $email\r\n                employeeCode: $employeeCode\r\n                familyName: $familyName\r\n                group: $group\r\n                name: $name\r\n                password: $password\r\n                phone: $phone\r\n                phone2: $phone2\r\n                photo: $photo\r\n                compartment: $compartment\r\n                registerNo: $registerNo\r\n                sex: $sex\r\n                status: $status\r\n                username: $username\r\n          ) {\r\n          employee {\r\n          id\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nexport const CREATE_STUDENT = gql `\r\n    mutation createStudent($activity: Int, $address: String, $birthCity: Int, $birthDistrict: Int, $birthdate: String,\r\n                            $classes: Int, $classtime: Int, $familyName: String, $joinDate: String,\r\n                            $joinSchoolyear: String, $name: String, $nationality: String, $phone: String, $program: Int, \r\n                            $registerNo: String, $religion: String, $school: Int, $section: Int, $sex: String, $state: String, $status: Int, \r\n                            $statusExtra: Int, $surname: String, $studentCode: String,\r\n                            $username: String!, $password: String!) {\r\n      createStudent(activity: $activity, address: $address, birthCity: $birthCity, birthDistrict: $birthDistrict, birthdate: $birthdate, \r\n                    classes: $classes, familyName: $familyName, joinDate: $joinDate, name: $name, phone: $phone, \r\n                    registerNo: $registerNo, religion: $religion, school: $school, sex: $sex, status: $status,\r\n                    surname: $surname, studentCode: $studentCode, classtime: $classtime, joinSchoolyear: $joinSchoolyear, \r\n                    nationality: $nationality, program: $program, section: $section, state: $state, statusExtra: $statusExtra,\r\n                    username: $username, password: $password, email: \"test@test.mn\") {\r\n        student {\r\n          id\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nexport const CREATE_SECTION = gql `\r\n  mutation createSection($classes: Int, $maxStudentNum: Int, $program: Int, $teacher: Int,  $school: Int, $section: String) {\r\n    createSection(classes: $classes, program: $program, school: $school, section: $section, maxStudentNum: $maxStudentNum, teacher: $teacher) {\r\n      section {\r\n        section\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const CREATE_CLASSES = gql `\r\n  mutation createClasses($activity: Int, $classes: String,\r\n                          $program: Int, $school: Int, $status: String) {\r\n    createClasses(activity: $activity, classes: $classes,\r\n                  program: $program, school: $school, status: $status) {\r\n      classes {\r\n        classes\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const CREATE_PROGRAM = gql `\r\n    mutation createProgram($program: String, $programMgl: String,  \r\n                           $status: String, $maxStudentNum: Int, $school: Int, $subSchool: Int) {\r\n      createProgram(program: $program, programMgl: $programMgl,  \r\n                    status: $status, maxStudentNum: $maxStudentNum, school: $school, subSchool: $subSchool) {\r\n        program {\r\n          id\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nexport const CREATE_SUBJECT = gql `\r\n  mutation createSubject($credit: String, $subject: String, $content: String, $school: Int, $subSchool: Int) {\r\n    createSubject(credit: $credit, subject: $subject, school: $school, content: $content, subSchool: $subSchool) {\r\n      subject {\r\n        credit\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const CREATE_PROGRAM_SUBJECT = gql `\r\n  mutation createProgramSubject($program: Int, $subject: Int) {\r\n    createProgramSubject(program: $program, subject: $subject) {\r\n      programSubjectType {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_ROUTINE_STUDENT = gql `\r\n  mutation createRoutineStudent ($routine: Int, $studentCode: String, $section: Int) {\r\n    createRoutineStudent (routine: $routine, studentCode: $studentCode, section: $section) {\r\n      routineStudent {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const CREATE_PARENT = gql `\r\n    mutation createParent ($address: String, $familyName: String, $name: String, $phone: String, $profession: String, $student: Int) {\r\n        createParent (address: $address, familyName: $familyName, name: $name, phone: $phone, profession: $profession, student: $student) {\r\n            parent {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_EVENT_TYPE = gql `\r\n    mutation createEventType ($color: String, $name: String) {\r\n        createEventType (color: $color, name: $name) {\r\n            eventType {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_EVENT = gql`\r\n    mutation createEvent ($content: String, $description: String, $endAt: String, $eventType: Int, $startAt: String, $title: String) {\r\n        createEvent (content: $content, description: $description, endAt: $endAt, eventType: $eventType, startAt: $startAt, title: $title) {\r\n            event {\r\n                title\r\n            }\r\n        }\r\n    }\r\n`;","import { gql } from '@apollo/client'\r\n\r\nexport const DELETE_CITY = gql `\r\n    mutation deleteCity($id: ID!){\r\n        deleteCity(id: $id){\r\n            city{\r\n              name\r\n              code\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_USER = gql `\r\n    mutation deleteAccount($username: String) {\r\n        deleteAccount(username: $username) {\r\n            account {\r\n                username\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_TEACHER = gql `\r\n    mutation deleteTeacher($id: ID!){\r\n      deleteTeacher(id: $id){\r\n            teacher{\r\n              name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_EMPLOYEES = gql `\r\n  mutation deleteEmployee($id: ID){\r\n    deleteEmployee(id: $id){\r\n      employee{\r\n        name\r\n      }\r\n    }\r\n  }\r\n  `;\r\n\r\nexport const DELETE_SUBJECT = gql `\r\n  mutation deleteSubject ($id: ID) {\r\n    deleteSubject (id: $id) {\r\n      subject {\r\n        credit\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_STUDENT = gql `\r\n    mutation deleteStudent($id: ID!){\r\n      deleteStudent(id: $id){\r\n            student{\r\n              surname\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_SUB_SCHOOL = gql `\r\n  mutation deleteSubSchool($id: ID){\r\n    deleteSubSchool(id: $id){\r\n      subSchool{\r\n        name\r\n      }\r\n    }\r\n}\r\n`\r\n\r\nexport const DELETE_SCHOOL = gql `\r\n  mutation deleteSchool($id: ID!){\r\n    deleteSchool(id: $id){\r\n      school{\r\n        name\r\n      }\r\n    }\r\n}\r\n`\r\n\r\nexport const DELETE_SECTION = gql `\r\n  mutation deleteSection($id: ID){\r\n    deleteSection(id: $id){\r\n      section{\r\n        section\r\n      }\r\n    }\r\n}\r\n`\r\n\r\nexport const DELETE_CLASS = gql `\r\n  mutation deleteClasses($id: ID!){\r\n    deleteClasses(id: $id){\r\n      classes{\r\n        classes\r\n      }\r\n    }\r\n}\r\n`\r\n\r\nexport const DELETE_PROGRAM = gql `\r\n    mutation deleteProgram($id: ID!){\r\n        deleteProgram(id: $id){\r\n            program{\r\n                program\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_ROUTINE = gql `\r\n    mutation deleteRoutine ($id: ID) {\r\n        deleteRoutine (id: $id) {\r\n            routine {\r\n                createdAt\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_PARENT = gql `\r\n    mutation deleteParent ($id: ID) {\r\n        deleteParent (id: $id) {\r\n            parent {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_EVENT_TYPE = gql `\r\n    mutation deleteEventType ($id: ID) {\r\n        deleteEventType (id: $id) {\r\n            eventType {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_EVENT = gql`\r\n    mutation deleteEvent ($id: ID) {\r\n        deleteEvent (id: $id) {\r\n            event {\r\n                title\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { Form, Input, message, Spin, Select } from 'antd';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { ALL_SUB_SCHOOLS, ALL_SCHOOLS } from 'graphql/all'\r\nimport { CREATE_SUB_SCHOOL } from 'graphql/create'\r\nimport { UPDATE_SUB_SCHOOL } from 'graphql/update'\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nconst { Option } = Select;\r\n\r\nfunction SchoolForm ({editData, formType, setIsModalVisible, setReFill, setTableLoading}) {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const [createSubSchool, { loading: createLoading }] = useMutation(CREATE_SUB_SCHOOL, {\r\n\t\trefetchQueries: [ALL_SUB_SCHOOLS,\r\n\t\t\t'allSubSchools'\r\n\t\t],\r\n\t\tonCompleted: createData => {\r\n            message.success('Амжилттай хадгаллаа');\r\n            setReFill(true);\r\n            setIsModalVisible(false);\r\n            form.resetFields();\r\n\t\t}\r\n\t});\r\n\r\n    const [updateSubSchool, { loading: updateLoading }] = useMutation(UPDATE_SUB_SCHOOL, {\r\n        refetchQueries: [ALL_SUB_SCHOOLS, \r\n            'allSubSchools'\r\n        ],\r\n        onCompleted: data => {\r\n            message.success('Амжилттай хадгаллаа');\r\n            setReFill(true);\r\n            setIsModalVisible(false);\r\n            form.resetFields();\r\n            setTableLoading(true);\r\n        }\r\n    })\r\n\r\n    const { data, loading } = useQuery(ALL_SCHOOLS);\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n        if(formType === \"edit\") {\r\n            const newData ={\r\n\t\t\t\tname: editData.name,\r\n\t\t\t\tnameMgl: editData.nameMgl,\r\n\t\t\t\tschool: editData.school.id,\r\n\t\t\t\tkey: editData.id,\r\n\t\t\t}\r\n            form.setFieldsValue(newData);\r\n        } else if(formType === \"create\") {\r\n            form.resetFields();\r\n        }\r\n    }, [editData, form, formType]);\r\n\r\n    const onFinish = values => {\r\n        if (formType === \"edit\") {\r\n            values.id = editData?.key\r\n            updateSubSchool({ variables: values });\r\n        } else {\r\n            createSubSchool({ variables: { name: values.name, nameMgl: values.nameMgl, school: values.school } });\r\n        }\r\n    };\r\n\r\n    if (loading) return <IntlMessage id=\"main.loading\" />;\r\n\r\n    return (\r\n        <Spin spinning={createLoading || updateLoading} tip={<IntlMessage id=\"main.submitting\" />}>\r\n            <Form  \r\n                id=\"SchoolForm\"\r\n                                layout={'vertical'}\r\n                form={form}\r\n                name=\"control-hooks\" \r\n                onFinish={onFinish}\r\n            >\r\n                <Form.Item name=\"name\" label={<IntlMessage id=\"name\" />} rules={[\r\n                    { \r\n                        required: true,\r\n                        message: <IntlMessage id=\"form.required\" />\r\n                    }\r\n                ]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"nameMgl\" label={<IntlMessage id=\"nameMgl\" />} rules={[\r\n                    { \r\n                        required: true,\r\n                        message: <IntlMessage id=\"form.required\" />\r\n                    }\r\n                ]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                \r\n                <Form.Item name=\"school\" label={<IntlMessage id=\"school\" />} rules={[\r\n                    { \r\n                        required: true,\r\n                        message: <IntlMessage id=\"form.required\" />\r\n                    }\r\n                ]}>\r\n                    <Select\r\n                        placeholder={<IntlMessage id=\"school\" />}\r\n                    >\r\n                        {data?.allSchools.map((school, index) => (  \r\n                            <Option key={index} value={school.id}>{school.name}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n            </Form>\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport default SchoolForm","import React, { useState, useEffect } from 'react'\r\nimport { Card, Table, Input, Modal, message, Spin, Button } from 'antd';\r\nimport { DeleteTwoTone, SearchOutlined, EditTwoTone, PlusCircleOutlined } from '@ant-design/icons';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport utils from 'utils';\r\nimport SchoolForm from './form';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport { ALL_SUB_SCHOOLS } from 'graphql/all';\r\nimport { DELETE_SUB_SCHOOL } from 'graphql/delete';\r\n\r\nfunction  AllSubSchoolTable (props) {\r\n\r\n\tconst { loading, data: subSchoolData } = useQuery(ALL_SUB_SCHOOLS, {\r\n\t});\r\n    \r\n\tconst [list, setList] = useState(undefined);\r\n\tconst [reFill, setReFill] = useState(true);\r\n\tconst [tableLoading, setTableLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n\t\tfunction fillList () {\r\n\t\t\tconst newData = subSchoolData?.allSubSchools.map((data) => ({\r\n\t\t\t\tname: data.name,\r\n\t\t\t\tnameMgl: data.nameMgl,\r\n\t\t\t\tschool: data.school,\r\n\t\t\t\tschoolId: data.school.id,\r\n\t\t\t\tkey: data.id,\r\n\t\t\t}));\r\n\t\t\tsetList(newData);\r\n\t\t\tsetReFill(false);\r\n\t\t\tsetTableLoading(false)\r\n\t\t}\r\n        if(loading === false && subSchoolData){\r\n\t\t\tfillList()\r\n        }\r\n    }, [loading, subSchoolData, reFill])\r\n\r\n\tconst [editData, setEditData] = useState([]);\r\n\tconst [formType, setFormType] = useState(\"\");\r\n\r\n\tconst editRow = row => {\r\n\t\tsetEditData(row);\r\n\t\tsetFormType(\"edit\")\r\n\t\tsetIsModalVisible(true);\r\n\t};\r\n\r\n\tconst { confirm } = Modal;\r\n\r\n\tconst [deleteSubSchool] = useMutation(DELETE_SUB_SCHOOL, {\r\n\t\trefetchQueries: [ALL_SUB_SCHOOLS,\r\n\t\t\t'allSubSchool'\r\n\t\t],\r\n\t\tonCompleted: data => {\r\n            setReFill(true);\r\n            message.success('Амжилттай устлаа');\r\n\t\t}\r\n\t});\r\n\t\r\n\tfunction deleteRow(row) {\r\n\t\tconfirm({\r\n\t\t  title: 'Устгах уу?',\r\n\t\t  okText: 'Устгах',\r\n\t\t  okType: 'danger',\r\n\t\t  cancelText: 'Болих',\r\n\t\t  onOk() {\r\n\t\t\tdeleteSubSchool({ variables: { id: row.key } }); \r\n\t\t  },\r\n\t\t});\r\n\t}\r\n\r\n\tconst tableColumns = [\r\n\t\t{\r\n\t\t\ttitle: <IntlMessage id=\"name\" />,\r\n\t\t\tkey: 'name',\r\n\t\t\twidth: '30%',\r\n\t\t\tdataIndex: 'name',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'name')\r\n\t\t},\r\n\t\t{\r\n            title: <IntlMessage id=\"nameMgl\" />,\r\n\t\t\tkey: 'nameMgl',\r\n\t\t\twidth: '30%',\r\n            dataIndex: 'nameMgl', \r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'nameMgl')\r\n\t\t},\r\n\t\t{\r\n            title: <IntlMessage id=\"school\" />,\r\n            dataIndex: ['school', 'name'], \r\n\t\t\tkey: 'school',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'school.name'),\r\n\t\t}\r\n\t];\r\n\r\n\tif (props.permissions.edit === true || props.permissions.destroy === true) {\r\n\t\ttableColumns.push(\r\n\t\t\t{\r\n\t\t\t\ttitle: <IntlMessage id=\"main.action\" />,\r\n\t\t\t\tkey: 'actions',\r\n\t\t\t\tdataIndex: 'actions',\r\n\t\t\t\twidth: '15vw',\r\n\t\t\t\trender: (_, elm) => (\r\n\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t{ props.permissions.edit === true &&\r\n\t\t\t\t\t\t\t<Button size=\"small\" onClick={() => editRow(elm)} type=\"text\" icon={<EditTwoTone twoToneColor=\"#ffdb00\"/>} > <IntlMessage id='edit' /></Button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{ props.permissions.destroy === true &&\r\n\t\t\t\t\t\t\t<Button size=\"small\" onClick={() => deleteRow(elm)} type=\"text\" icon={<DeleteTwoTone twoToneColor=\"#f42f2f\"/>} > <IntlMessage id=\"delete\"/></Button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const showModal = () => {\r\n\t\tsetFormType(\"create\")\r\n      \tsetIsModalVisible(true);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n      \tsetIsModalVisible(false);\r\n    };\r\n\r\n\tconst onSearch = e => {\r\n\t\tconst value = e.currentTarget.value\r\n\t\tif (!e.currentTarget.value) {\r\n\t\t\tsetReFill(true)\r\n\t\t} \r\n\t\tconst searchArray = list;\r\n\t\tconst data = utils.wildCardSearch(searchArray, value)\r\n\t\tsetList(data)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal \r\n\t\t\t\tforceRender \r\n                title={formType === 'edit' ? <IntlMessage id=\"edit\" /> : <IntlMessage id=\"add_new\" /> }\r\n\t\t\t\tvisible={isModalVisible} \r\n\t\t\t\tokText={<IntlMessage id=\"main.okText\" />}\r\n\t\t\t\tcancelText={<IntlMessage id=\"main.cancelText\" />}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\tokButtonProps={{form:'SchoolForm', key: 'submit', htmlType: 'submit'}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SchoolForm \r\n\t\t\t\t\t\tsetTableLoading={setTableLoading} \r\n\t\t\t\t\t\tsetReFill={setReFill} \r\n\t\t\t\t\t\teditData={editData} \r\n\t\t\t\t\t\tformType={formType} \r\n\t\t\t\t\t\tsetIsModalVisible={setIsModalVisible}\r\n\t\t\t\t\t/>\r\n\t\t\t</Modal>\r\n\t\t\t<Card>\r\n\t\t\t\t<Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n\t\t\t\t\t<Flex className=\"mb-1\" mobileFlex={false}>\r\n\t\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\r\n\t\t\t\t\t\t\t<Input placeholder={'Хайх'} prefix={<SearchOutlined />} onChange={e => onSearch(e)}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t\t{ props.permissions.create === true && \r\n\t\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\r\n\t\t\t\t\t\t\t<Button onClick={showModal} type=\"primary\" icon={<PlusCircleOutlined />} block> <IntlMessage id=\"add_new\" /></Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<Spin spinning={tableLoading}>\r\n\t\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t\t<Table \r\n\t\t\t\t\t\t\tcolumns={tableColumns} \r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tdataSource={list} \r\n\t\t\t\t\t\t\trowKey='key'  \r\n\t\t\t\t\t\t\tbordered\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Spin>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t\t\r\n\t)\r\n}\r\n\r\nexport default AllSubSchoolTable\r\n","import React from \"react\";\r\nimport AllSubSchoolTable from './table';\r\nimport { CheckPer } from 'hooks/checkPermission';\r\nimport Loading from \"components/shared-components/Loading\";\r\n\r\nconst Index = (props) => {\r\n\r\n    const create = CheckPer('add_sub_school');\r\n    const edit = CheckPer('change_sub_school');\r\n    const destroy = CheckPer('delete_sub_school');\r\n\r\n    const permissions = {\r\n        create: create,\r\n        edit: edit,\r\n        destroy: destroy\r\n    }\r\n\r\n    if (Object.values(permissions).indexOf('loading') > -1) {\r\n        return <Loading cover=\"content\" />\r\n    }\r\n\r\n    return (\r\n        <AllSubSchoolTable title={props.title} permissions={permissions} />\r\n    )\r\n}\r\n\r\nexport default Index;\r\n"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","CREATE_SCHOOL","gql","CREATE_SUB_SCHOOL","CREATE_TEACHER","CREATE_EMPLOYEE","CREATE_STUDENT","CREATE_SECTION","CREATE_CLASSES","CREATE_PROGRAM","CREATE_SUBJECT","CREATE_PARENT","CREATE_EVENT_TYPE","CREATE_EVENT","DELETE_TEACHER","DELETE_EMPLOYEES","DELETE_SUBJECT","DELETE_STUDENT","DELETE_SUB_SCHOOL","DELETE_SCHOOL","DELETE_SECTION","DELETE_CLASS","DELETE_PROGRAM","DELETE_ROUTINE","DELETE_PARENT","DELETE_EVENT_TYPE","DELETE_EVENT","Option","Select","editData","formType","setIsModalVisible","setReFill","setTableLoading","Form","form","useMutation","refetchQueries","ALL_SUB_SCHOOLS","onCompleted","createData","message","resetFields","createSubSchool","createLoading","loading","UPDATE_SUB_SCHOOL","data","updateSubSchool","updateLoading","useQuery","ALL_SCHOOLS","useEffect","newData","name","nameMgl","school","id","key","setFieldsValue","IntlMessage","spinning","tip","layout","onFinish","values","variables","label","rules","required","placeholder","allSchools","map","index","value","subSchoolData","useState","undefined","list","setList","reFill","tableLoading","allSubSchools","schoolId","fillList","setEditData","setFormType","confirm","Modal","deleteSubSchool","tableColumns","title","width","dataIndex","sorter","a","b","utils","permissions","edit","destroy","push","render","_","elm","size","onClick","type","icon","EditTwoTone","twoToneColor","row","okText","okType","cancelText","onOk","DeleteTwoTone","isModalVisible","forceRender","visible","onCancel","okButtonProps","htmlType","prefix","SearchOutlined","onChange","e","currentTarget","searchArray","onSearch","create","PlusCircleOutlined","block","columns","dataSource","rowKey","bordered","CheckPer","Object","indexOf","Loading","cover"],"sourceRoot":""}