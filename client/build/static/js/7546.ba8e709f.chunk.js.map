{"version":3,"file":"static/js/7546.ba8e709f.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","graphql/lesson.js","components/shared-components/EllipsisDropdown/index.js","views/app-views/online-lesson/lessons.js","views/app-views/online-lesson/index.js","../node_modules/@ant-design/icons-svg/es/asn/DeleteTwoTone.js","../node_modules/@ant-design/icons/es/icons/DeleteTwoTone.js","../node_modules/@ant-design/icons-svg/es/asn/EditTwoTone.js","../node_modules/@ant-design/icons/es/icons/EditTwoTone.js","../node_modules/@apollo/src/react/hooks/useMutation.ts","../node_modules/@heroicons/react/outline/esm/CalendarIcon.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const ALL_ONLINE_TYPE = gql `\r\n    query allOnlineTypes {\r\n        allOnlineTypes {\r\n            id\r\n            name\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nexport const ALL_ONLINE_FILE = gql `\r\n    query allOnlineFiles ($folder: Int){\r\n        allOnlineFiles (folder: $folder){\r\n            id\r\n            file\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_FOLDERS = gql `\r\n    query allFolders ($folder: Int){\r\n        allFolders(folder: $folder){\r\n            id\r\n            name\r\n        }\r\n    }\r\n    `\r\n\r\nexport const CREATE_ONLINE_FILE = gql `\r\n    mutation createOnlineFile($file: Upload!, $folder: Int) {\r\n        createOnlineFile(file: $file, folder: $folder) {\r\n            onlineFile {\r\n                id\r\n                file\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_ONLINE_FILE_FOLDER = gql `\r\n    mutation createOnlineFileFolder($name: String, $subFolder: Int){\r\n        createOnlineFileFolder(name: $name, subFolder: $subFolder){\r\n            onlineFileFolder{\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_ONLINE_FILE = gql `\r\n    mutation deleteOnlineFile ($id: ID) {\r\n        deleteOnlineFile (id: $id) {\r\n            onlineFile {\r\n                file\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_ONLINE_FILE_FOLDER = gql`\r\n    mutation deleteOnlineFileFolder ($id: Int){\r\n        deleteOnlineFileFolder (id: $id){\r\n            onlineFileFolder {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_ONLINE_LESSON = gql`\r\n    mutation createOnlineLesson ($description: String, $schoolyear: Int, $status: String) {\r\n        createOnlineLesson (description: $description, schoolyear: $schoolyear, status: $status) {\r\n            onlineLesson {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_ONLINE_LESSON = gql`\r\n    mutation updateOnlineLesson ($description: String, $id: ID, $schoolyear: Int, $status: String) {\r\n        updateOnlineLesson (description: $description, id: $id, schoolyear: $schoolyear, status: $status) {\r\n            onlineLesson {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_ONLINE_LESSON = gql`\r\n    query allOnlineLessonsPagination ($page: Int, $perPage: Int) {\r\n        allOnlineLessonsPagination (page: $page, perPage: $perPage) {\r\n            page\r\n            perPage\r\n            pageCount\r\n            totalCount\r\n            records{\r\n                id\r\n                schoolyear {\r\n                    id\r\n                    schoolyear\r\n                }\r\n                description\r\n                createdAt\r\n                status\r\n                createUserid {\r\n                    isTeacher\r\n                    teacher {\r\n                        name\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LESSON_BY_ID = gql `\r\n    query onlineLessonById ($id: Int!) {\r\n        onlineLessonById (id: $id) {\r\n            id\r\n            schoolyear {\r\n                schoolyear\r\n                id\r\n            }\r\n            description\r\n            status\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_ONLINE_LESSON = gql `\r\n    mutation deleteOnlineLesson ($id: ID) {\r\n        deleteOnlineLesson (id: $id) {\r\n            onlineLesson {\r\n                status\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_SUB_LESSON_BY_LESSON = gql `\r\n    query allOnlineSubByLesson ($onlineLesson: Int!) {\r\n        allOnlineSubByLesson (onlineLesson: $onlineLesson) {\r\n            id\r\n            title\r\n            description\r\n            createUserid {\r\n                isTeacher\r\n                teacher {\r\n                    name\r\n                }\r\n            }\r\n            onlineType {\r\n                id\r\n                name\r\n            }\r\n            onlineSubFileSet {\r\n                onlineFile {\r\n                    id\r\n                    file\r\n                }\r\n            }\r\n            status\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_SUB_LESSON = gql`\r\n    mutation createOnlineSub ($description: String, $onlineLesson: Int, $status: String, $title: String, $onlineType: Int) {\r\n        createOnlineSub (description: $description, onlineLesson: $onlineLesson, status: $status, title: $title, onlineType: $onlineType) {\r\n            onlineSub {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_SUB_LESSON = gql `\r\n    mutation updateOnlineSub ( $description: String, $id: ID, $onlineLesson: Int, $status: String, $title: String, $onlineType: Int) {\r\n        updateOnlineSub (description: $description, id: $id, onlineLesson: $onlineLesson, status: $status, title: $title, onlineType: $onlineType) {\r\n            onlineSub {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_SUB_LESSON = gql `\r\n    mutation deleteOnlineSub ($id: ID) {\r\n        deleteOnlineSub (id: $id) {\r\n            onlineSub {\r\n                title\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SUB_BY_ID = gql `\r\n    query onlineSubById ($id: Int!) {\r\n        onlineSubById (id: $id) {\r\n            title\r\n            description\r\n            onlineSubFileSet {\r\n                onlineFile {\r\n                    id\r\n                    file\r\n                }\r\n            }\r\n            onlineType {\r\n                id\r\n                name\r\n            }\r\n            onlineAttendanceSet {\r\n                student {\r\n                    id\r\n                    studentCode\r\n                    name\r\n                    familyName\r\n                }\r\n            }\r\n            status\r\n            createdAt\r\n        }\r\n    } \r\n`;\r\n\r\nexport const CREATE_ONLINE_STUDENT = gql `\r\n    mutation createOnlineStudent ($onlineLesson: Int, $studentCode: String, $section: Int) {\r\n        createOnlineStudent (onlineLesson: $onlineLesson, studentCode: $studentCode, section: $section) {\r\n            onlineStudent {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_ONLINE_STUDENT = gql `\r\n    mutation deleteOnlineStudent ($id: ID) {\r\n        deleteOnlineStudent (id: $id) {\r\n            onlineStudent {\r\n                student {\r\n                    name\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_ONLINE_STUDENT_BY_LESSON = gql `\r\n    query allOnlineStudentByLesson ($onlineLesson: Int!) {\r\n        allOnlineStudentByLesson (onlineLesson: $onlineLesson) {\r\n            id\r\n            student {\r\n                id\r\n                familyName\r\n                name\r\n                studentCode\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_ONLINE_SUB_FILES = gql`\r\n    query allOnlineSubFiles ($onlineSub: Int) {\r\n        allOnlineSubFiles (onlineSub: $onlineSub) {\r\n            id\r\n            onlineFile {\r\n                id\r\n                file\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_ONLINE_SUB_FILE = gql`\r\n    mutation createOnlineSubFile ($onlineFile: Int, $onlineSub: Int) {\r\n        createOnlineSubFile (onlineFile: $onlineFile, onlineSub: $onlineSub) {\r\n            onlineSubFile {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_ONLINE_SUB_FILE = gql`\r\n    mutation deleteOnlineSubFile ($id: Int) {\r\n        deleteOnlineSubFile (id: $id) {\r\n            onlineSubFile {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`","import React from 'react'\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown overlay={props.menu} placement={props.placement} trigger={['click']}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu/>\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","import React, { lazy, useState } from 'react'\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { Button, Modal, message, Pagination } from 'antd';\r\nimport { DeleteTwoTone, PlusCircleOutlined, EditTwoTone } from '@ant-design/icons';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { ALL_ONLINE_LESSON, DELETE_ONLINE_LESSON } from 'graphql/lesson';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport { CalendarIcon } from '@heroicons/react/outline';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport userImage from 'assets/image/user.png'\r\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\r\n\r\nconst LessonForm = lazy(() => import('./lesson-form'));\r\n\r\nconst Lessons = ({ permissions }) => {\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [perPage, setPerPage] = useState(10)\r\n\r\n    const { confirm } = Modal;\r\n\r\n    const { loading, refetch, data, error } = useQuery(ALL_ONLINE_LESSON, {\r\n        variables: { page: page, perPage: perPage }\r\n    });\r\n\r\n    const [deleteLesson] = useMutation(DELETE_ONLINE_LESSON, {\r\n        onCompleted: data => {\r\n            refetch();\r\n            message.success('Амжилттай устлаа');\r\n        }\r\n    });\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [editData, setEditData] = useState([]);\r\n    const [formType, setFormType] = useState(\"\");\r\n\r\n    const showModal = () => {\r\n        setFormType(\"create\")\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const editRow = values => {\r\n        setEditData(values);\r\n        setFormType(\"edit\")\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const deleteModal = value => {\r\n        confirm({\r\n            title: 'Устгах уу?',\r\n            okText: 'Устгах',\r\n            okType: 'danger',\r\n            cancelText: 'Болих',\r\n            onOk() {\r\n                deleteLesson({ variables: { id: value } });\r\n            },\r\n        });\r\n    }\r\n\r\n    const onPageChange = (page, pageSize) => {\r\n        setPage(page)\r\n        setPerPage(pageSize)\r\n    }\r\n\r\n    const dropdownMenu = row => (\r\n        <div className='w-full flex flex-col space-y-2 bg-background p-2 rounded-2' onClick={e => (e && e.stopPropagation) && e.stopPropagation()}>\r\n            {permissions.edit === true &&\r\n                <Button onClick={() => editRow(row)}>\r\n                    <EditTwoTone twoToneColor={'#ffdb00'} />\r\n                </Button>\r\n            }\r\n            {/* {permissions.view_student === true &&\r\n                <Link\r\n                    to={`/app/online-lesson-students/${row.id}`}\r\n                >\r\n                    <Button>\r\n                        <UsergroupAddOutlined />\r\n                    </Button>\r\n                </Link>\r\n            } */}\r\n            {permissions.destroy === true &&\r\n                <Button onClick={() => deleteModal(row.id)} >\r\n                    <DeleteTwoTone twoToneColor={'#f42f2f'} />\r\n                </Button>\r\n            }\r\n        </div>\r\n    );\r\n\r\n    if (loading) {\r\n        return <Loading />\r\n    }\r\n\r\n    if (error) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {permissions.create === true &&\r\n                <>\r\n                    <Modal\r\n                        forceRender\r\n                        width={'80vw'}\r\n                        visible={isModalVisible}\r\n                        okText={<IntlMessage id=\"main.okText\" />}\r\n                        cancelText={<IntlMessage id=\"main.cancelText\" />}\r\n                        onCancel={handleCancel}\r\n                        okButtonProps={{ form: 'LessonForm', key: 'submit', htmlType: 'submit' }}\r\n                    >\r\n                        <LessonForm formType={formType} setIsModalVisible={setIsModalVisible} editData={editData} refetch={refetch} />\r\n                    </Modal>\r\n                    <Flex justifyContent=\"end\" alignItems=\"center\" className=\"py-2\">\r\n                        <div>\r\n                            <Button\r\n                                style={{ float: 'right' }}\r\n                                size='small'\r\n                                type=\"primary\"\r\n                                onClick={() => showModal()}\r\n                            >\r\n                                <PlusCircleOutlined />  <IntlMessage id=\"add_new\" />\r\n                            </Button>\r\n                        </div>\r\n                    </Flex>\r\n                </>\r\n            }\r\n\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-6 w-full mt-4\">\r\n                {data.allOnlineLessonsPagination.records.map((lesson, index) => (\r\n                    <Link\r\n                        to={`${APP_PREFIX_PATH}/online-lesson/${lesson.id}`}\r\n                        key={index}\r\n                        className={`border-regular border-1 pt-[20px] px-[25px] pb-[25px] bg-white rounded-10 bg-cover bg-center`}\r\n                    >\r\n                        {Object.values(permissions).some(val => val === true) &&\r\n                            <div className=\"flex items-center justify-end\">\r\n                                <EllipsisDropdown menu={dropdownMenu(lesson)} />\r\n                            </div>\r\n                        }\r\n                        <div>\r\n                            <Scrollbars className='h-48'>\r\n                                <p className={`mb-[20px] leading-[1.786] whitespace-pre-line`}>\r\n                                    {lesson.description}\r\n                                </p>\r\n                            </Scrollbars>\r\n                        </div>\r\n                        <div className=\"flex flex-wrap items-center justify-between\">\r\n                            <div className=\"flex items-center gap-[15px]\">\r\n                                <img className=\"w-[30px] h-[30px] rounded-full\" src={userImage} alt=\"\" />\r\n                                <span className={`text-[15px] font-medium `}>{lesson.createUserid.teacher?.name}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-[15px]\">\r\n                                <CalendarIcon className='h-7 text-emind' />\r\n                                <p>{moment(lesson.createdAt).format('YYYY-MM-DD')}</p>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n            {data.allOnlineLessonsPagination.pageCount > 0 && (\r\n                <Pagination\r\n                    className='text-right mt-4'\r\n                    total={data.allOnlineLessonsPagination.totalCount}\r\n                    onChange={onPageChange}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Lessons\r\n","import React from \"react\";\r\nimport Lessons from './lessons';\r\nimport { CheckPer } from 'hooks/checkPermission';\r\nimport Loading from \"components/shared-components/Loading\";\r\n\r\nconst Index = (props) => {\r\n\r\n    const create = CheckPer('add_online_lesson');\r\n    const edit = CheckPer('change_online_lesson');\r\n    const destroy = CheckPer('delete_online_lesson');\r\n    const create_sub = CheckPer('add_online_sub');\r\n    const view_student = CheckPer('view_online_student');\r\n\r\n    const permissions = {\r\n        create: create,\r\n        create_sub: create_sub,\r\n        edit: edit,\r\n        destroy: destroy,\r\n        view_student: view_student\r\n    }\r\n\r\n    if (Object.values(permissions).indexOf('loading') > -1) {\r\n        return <Loading cover=\"content\" />\r\n    }\r\n\r\n    return (\r\n        <Lessons title={props.title} permissions={permissions} />\r\n    )\r\n}\r\n\r\nexport default Index;","// This icon file is generated automatically.\nvar DeleteTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M292.7 840h438.6l24.2-512h-487z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M864 256H736v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zm-504-72h304v72H360v-72zm371.3 656H292.7l-24.2-512h487l-24.2 512z\", \"fill\": primaryColor } }] }; }, \"name\": \"delete\", \"theme\": \"twotone\" };\nexport default DeleteTwoTone;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteTwoToneSvg from \"@ant-design/icons-svg/es/asn/DeleteTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\nvar DeleteTwoTone = function DeleteTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DeleteTwoToneSvg\n  }));\n};\nDeleteTwoTone.displayName = 'DeleteTwoTone';\nexport default /*#__PURE__*/React.forwardRef(DeleteTwoTone);","// This icon file is generated automatically.\nvar EditTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M761.1 288.3L687.8 215 325.1 577.6l-15.6 89 88.9-15.7z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32zm-622.3-84c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89z\", \"fill\": primaryColor } }] }; }, \"name\": \"edit\", \"theme\": \"twotone\" };\nexport default EditTwoTone;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditTwoToneSvg from \"@ant-design/icons-svg/es/asn/EditTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\nvar EditTwoTone = function EditTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EditTwoToneSvg\n  }));\n};\nEditTwoTone.displayName = 'EditTwoTone';\nexport default /*#__PURE__*/React.forwardRef(EditTwoTone);","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\nimport {\n  MutationFunctionOptions,\n  MutationHookOptions,\n  MutationResult,\n  MutationTuple,\n} from '../types/types';\n\nimport {\n  ApolloCache,\n  DefaultContext,\n  mergeOptions,\n  OperationVariables,\n} from '../../core';\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport { ApolloError } from '../../errors';\nimport { useApolloClient } from './useApolloClient';\n\nexport function useMutation<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n>(\n  mutation: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: MutationHookOptions<TData, TVariables, TContext, TCache>,\n): MutationTuple<TData, TVariables, TContext, TCache> {\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  const [result, setResult] = useState<Omit<MutationResult, 'reset'>>({\n    called: false,\n    loading: false,\n    client,\n  });\n\n  const ref = useRef({\n    result,\n    mutationId: 0,\n    isMounted: true,\n    client,\n    mutation,\n    options,\n  });\n\n  // TODO: Trying to assign these in a useEffect or useLayoutEffect breaks\n  // higher-order components.\n  {\n    Object.assign(ref.current, { client, options, mutation });\n  }\n\n  const execute = useCallback((\n    executeOptions: MutationFunctionOptions<\n      TData,\n      TVariables,\n      TContext,\n      TCache\n    > = {}\n  ) => {\n    const {client, options, mutation} = ref.current;\n    const baseOptions = { ...options, mutation };\n    if (!ref.current.result.loading && !baseOptions.ignoreResults && ref.current.isMounted) {\n      setResult(ref.current.result = {\n        loading: true,\n        error: void 0,\n        data: void 0,\n        called: true,\n        client,\n      });\n    }\n\n    const mutationId = ++ref.current.mutationId;\n    const clientOptions = mergeOptions(\n      baseOptions,\n      executeOptions as any,\n    );\n\n    return client.mutate(clientOptions).then((response) => {\n      const { data, errors } = response;\n      const error =\n        errors && errors.length > 0\n          ? new ApolloError({ graphQLErrors: errors })\n          : void 0;\n\n      if (\n        mutationId === ref.current.mutationId &&\n        !clientOptions.ignoreResults\n      ) {\n        const result = {\n          called: true,\n          loading: false,\n          data,\n          error,\n          client,\n        };\n\n        if (ref.current.isMounted && !equal(ref.current.result, result)) {\n          setResult(ref.current.result = result);\n        }\n      }\n      ref.current.options?.onCompleted?.(response.data!, clientOptions);\n      executeOptions.onCompleted?.(response.data!, clientOptions);\n      return response;\n    }).catch((error) => {\n      if (\n        mutationId === ref.current.mutationId &&\n        ref.current.isMounted\n      ) {\n        const result = {\n          loading: false,\n          error,\n          data: void 0,\n          called: true,\n          client,\n        };\n\n        if (!equal(ref.current.result, result)) {\n          setResult(ref.current.result = result);\n        }\n      }\n\n      if (ref.current.options?.onError || clientOptions.onError) {\n        ref.current.options?.onError?.(error, clientOptions);\n        executeOptions.onError?.(error, clientOptions);\n        // TODO(brian): why are we returning this here???\n        return { data: void 0, errors: error };\n      }\n\n      throw error;\n    });\n  }, []);\n\n  const reset = useCallback(() => {\n    if (ref.current.isMounted) {\n      setResult({ called: false, loading: false, client });\n    }\n  }, []);\n\n  useEffect(() => {\n    ref.current.isMounted = true;\n\n    return () => {\n      ref.current.isMounted = false;\n    };\n  }, []);\n\n  return [execute, { reset, ...result }];\n}\n","import * as React from \"react\";\n\nfunction CalendarIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(CalendarIcon);\nexport default ForwardRef;"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","ALL_ONLINE_TYPE","gql","ALL_ONLINE_FILE","ALL_FOLDERS","CREATE_ONLINE_FILE","CREATE_ONLINE_FILE_FOLDER","DELETE_ONLINE_FILE","DELETE_ONLINE_FILE_FOLDER","CREATE_ONLINE_LESSON","UPDATE_ONLINE_LESSON","ALL_ONLINE_LESSON","LESSON_BY_ID","DELETE_ONLINE_LESSON","ALL_SUB_LESSON_BY_LESSON","CREATE_SUB_LESSON","UPDATE_SUB_LESSON","DELETE_SUB_LESSON","SUB_BY_ID","CREATE_ONLINE_STUDENT","DELETE_ONLINE_STUDENT","ALL_ONLINE_STUDENT_BY_LESSON","CREATE_ONLINE_SUB_FILE","EllipsisDropdown","overlay","menu","placement","trigger","EllipsisOutlined","LessonForm","lazy","permissions","useState","page","setPage","perPage","setPerPage","confirm","Modal","useQuery","variables","loading","refetch","data","error","useMutation","onCompleted","message","deleteLesson","isModalVisible","setIsModalVisible","editData","setEditData","formType","setFormType","dropdownMenu","row","onClick","e","stopPropagation","edit","EditTwoTone","twoToneColor","destroy","value","id","title","okText","okType","cancelText","onOk","DeleteTwoTone","Loading","create","forceRender","width","visible","IntlMessage","onCancel","okButtonProps","form","key","htmlType","style","float","size","type","PlusCircleOutlined","allOnlineLessonsPagination","records","map","lesson","index","to","APP_PREFIX_PATH","Object","values","some","val","description","src","userImage","alt","createUserid","teacher","name","CalendarIcon","moment","createdAt","format","pageCount","total","totalCount","onChange","pageSize","CheckPer","create_sub","view_student","indexOf","cover","primaryColor","secondaryColor","ref","React","AntdIcon","_objectSpread","icon","DeleteTwoToneSvg","displayName","EditTwoToneSvg","mutation","options","client","useApolloClient","verifyDocumentType","DocumentType","called","result","setResult","useRef","mutationId","isMounted","assign","current","execute","useCallback","executeOptions","baseOptions","ignoreResults","clientOptions","mergeOptions","mutate","then","response","errors","length","ApolloError","graphQLErrors","result_1","equal","catch","result_2","onError","reset","useEffect","ForwardRef","svgRef","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}