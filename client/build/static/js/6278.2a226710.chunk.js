"use strict";(self.webpackChunkemind=self.webpackChunkemind||[]).push([[6278],{68470:function(n,e,t){t(72791);var i=t(80184),s=function(n){var e=n.children,t=n.className,s=n.alignItems,r=n.justifyContent,a=n.mobileFlex,o=n.flexDirection;return(0,i.jsx)("div",{className:"".concat(a?"d-flex":"d-md-flex"," ").concat(t," ").concat(o?"flex-"+o:""," ").concat(s?"align-items-"+s:""," ").concat(r?"justify-content-"+r:""),children:e})};s.defaultProps={mobileFlex:!0,flexDirection:"row",className:""},e.Z=s},68694:function(n,e,t){t.d(e,{Cm:function(){return p},Cx:function(){return f},FQ:function(){return T},JX:function(){return m},Z2:function(){return j},dT:function(){return Z},gt:function(){return x},tL:function(){return g}});var i,s,r,a,o,l,u,d,c=t(30168),$=t(27570),m=(0,$.Ps)(i||(i=(0,c.Z)(["\n    query allStudents ($filter: String) {\n        allStudents (filter: $filter) {\n            id\n            familyName\n            name\n            studentCode\n        }\n\t}\n"]))),f=(0,$.Ps)(s||(s=(0,c.Z)(["\n    query allTeachers ($filter: String) {\n        allTeachers (filter: $filter) {\n            id\n            familyName\n            name\n            teacherCode\n        }\n    }\n"]))),T=(0,$.Ps)(r||(r=(0,c.Z)(["\n    query allClassess ($filter: String, $program: Int) {\n        allClassess (filter: $filter, program: $program) {\n            id\n            classes\n        }\n\t}\n"]))),p=(0,$.Ps)(a||(a=(0,c.Z)(['\n    query allSubjects ($offset: Int!, $limit: Int!, $filter: String) {\n        count (appName: "subject", modelName: "Subject", filter: $filter) {\n            count\n        }\n        allSubjects (offset: $offset, limit: $limit, filter: $filter) {\n            id\n            subject\n            content\n            createUserid {\n                firstName\n                lastName\n            }\n        }\n    }\n']))),Z=(0,$.Ps)(o||(o=(0,c.Z)(["\n    query selectProgram {\n        allPrograms {\n            id\n            program\n        }\n    }\n"]))),g=(0,$.Ps)(l||(l=(0,c.Z)(["\n    query sectionsByProgram ($program: Int!) {\n        sectionsByProgram (program: $program) {\n            id\n            section \n            classes {\n                classes\n            }\n        }\n    }\n"]))),x=(0,$.Ps)(u||(u=(0,c.Z)(["\n    query sectionsByClasses ($classes: Int!){\n        sectionsByClasses (classes: $classes) {\n            id \n            section\n        }\n    }\n"]))),j=(0,$.Ps)(d||(d=(0,c.Z)(['\n    query allStudentsPagination (\n        $page: Int\n        $perPage: Int\n        $filter: String = ""\n    ) {\n        allStudentsPagination (\n            page: $page\n            perPage: $perPage\n            filter: $filter\n        ) {\n            page\n            perPage\n            pageCount\n            totalCount\n            records {\n                id\n                name\n                familyName\n            }\n        }\n    }\n'])))},93721:function(n,e,t){t.d(e,{Eo:function(){return B},Gu:function(){return H},Ik:function(){return an},Iy:function(){return en},LL:function(){return un},NP:function(){return D},O2:function(){return W},OY:function(){return Y},Qg:function(){return N},TR:function(){return rn},Ve:function(){return R},Wp:function(){return X},_2:function(){return ln},cL:function(){return E},fW:function(){return K},gT:function(){return tn},jk:function(){return z},kQ:function(){return sn},nR:function(){return M},nx:function(){return U},qC:function(){return V},qQ:function(){return F},qz:function(){return on},rb:function(){return _},vA:function(){return dn},vQ:function(){return J},wT:function(){return G},xs:function(){return O},zd:function(){return nn}});var i,s,r,a,o,l,u,d,c,$,m,f,T,p,Z,g,x,j,v,k,h,q,y,b,P,I,S,C,w,L,Q=t(30168),A=t(27570),N=(0,A.Ps)(i||(i=(0,Q.Z)(["\n    query allOnlineTests {\n        allOnlineTests {\n            id\n            title\n            description\n            subject {\n                id\n                subject\n            }\n        }\n    }\n"]))),D=(0,A.Ps)(s||(s=(0,Q.Z)(["\n    mutation createOnlineTest ($description: String, $subject: Int, $title: String) {\n        createOnlineTest (description: $description, subject: $subject, title: $title) {\n            onlineTest {\n                id\n            }\n        }\n    }\n"]))),O=(0,A.Ps)(r||(r=(0,Q.Z)(["\n    mutation updateOnlineTest ($description: String, $id: ID, $subject: Int, $title: String) {\n        updateOnlineTest (description: $description, id: $id, subject: $subject, title: $title) {\n            OnlineTest {\n                id\n            }\n        }\n    }\n"]))),_=(0,A.Ps)(a||(a=(0,Q.Z)(["\n    mutation deleteOnlineTest ($id: ID) {\n        deleteOnlineTest (id: $id) {\n            onlineTest {\n                id\n            }\n        }\n    }\n"]))),F=(0,A.Ps)(o||(o=(0,Q.Z)(["\n    query allQuestionLevels {\n        allQuestionLevels {\n            level\n            id\n        }\n    }\n"]))),B=(0,A.Ps)(l||(l=(0,Q.Z)(["\n    mutation createQuestionLevel ($level: String) {\n        createQuestionLevel (level: $level) {\n            questionLevel {\n                id\n            }\n        }\n    }\n"]))),E=(0,A.Ps)(u||(u=(0,Q.Z)(["\n    mutation updateQuestionLevel ($level: String, $id: ID) {\n        updateQuestionLevel (level: $level, id: $id) {\n            questionLevel {\n                id\n            }\n        }\n    }\n"]))),z=(0,A.Ps)(d||(d=(0,Q.Z)(["\n    mutation deleteQuestionLevel ($id: ID) {\n        deleteQuestionLevel (id: $id) {\n            questionLevel {\n                level\n            }\n        }\n    }\n"]))),M=(0,A.Ps)(c||(c=(0,Q.Z)(["\n    query allQuestionsByTest ($id: Int!) {\n        allQuestionsByTest (id: $id) {\n            id\n            question\n            hint\n            image\n            answerType\n            questionLevel {\n                id\n                level\n            }\n            questionChoiceSet {\n                id\n                answer\n                score\n            }\n        }\n    }\n"]))),R=(0,A.Ps)($||($=(0,Q.Z)(["\n    mutation createQuestion ($answerType: String, $hint: String, $image: Upload, $onlineTest: Int, $questionL: String, $questionLevel: Int) {\n        createQuestion (answerType: $answerType, hint: $hint, image: $image, onlineTest: $onlineTest, questionL: $questionL, questionLevel: $questionLevel) {\n            question {\n                id\n                answerType\n            }\n        }\n    }\n"]))),U=(0,A.Ps)(m||(m=(0,Q.Z)(["\n    mutation updateQuestion ($answerType: String, $hint: String, $image: Upload, $onlineTest: Int, $questionL: String, $questionLevel: Int, $id: ID) {\n        updateQuestion (answerType: $answerType, hint: $hint, image: $image, onlineTest: $onlineTest, questionL: $questionL, questionLevel: $questionLevel, id: $id) {\n            question {\n                id\n                answerType\n            }\n        }\n    }\n"]))),V=(0,A.Ps)(f||(f=(0,Q.Z)(["\n    mutation deleteQuestion ($id: ID) {\n        deleteQuestion (id: $id) {\n            question {\n                question\n            }\n        }\n    }\n"]))),G=(0,A.Ps)(T||(T=(0,Q.Z)(["\n    mutation createQuestionChoice ($answer: String, $question: Int, $score: Decimal) {\n        createQuestionChoice (answer: $answer, question: $question, score: $score) {\n            questionChoice {\n                id\n            }\n        }\n    }\n"]))),W=(0,A.Ps)(p||(p=(0,Q.Z)(["\n    mutation updateQuestionChoice ($answer: String, $question: Int, $score: Decimal, $id: ID) {\n        updateQuestionChoice (answer: $answer, question: $question, score: $score, id: $id) {\n            questionChoice {\n                id\n            }\n        }\n    }\n"]))),H=(0,A.Ps)(Z||(Z=(0,Q.Z)(["\n    mutation deleteQuestionChoice ($id: ID) {\n        deleteQuestionChoice (id: $id) {\n            questionChoice {\n                score\n            }\n        }\n    }\n"]))),J=(0,A.Ps)(g||(g=(0,Q.Z)(["\n    query allTakeTests {\n        allTakeTests {\n            id\n            title\n            description\n            startAt\n            endAt\n            duration\n            status\n        }\n    }\n"]))),K=(0,A.Ps)(x||(x=(0,Q.Z)(["\n    mutation createTakeTest ($duration: Int, $endAt: String, $startAt: String, $status: String, $description: String, $title: String) {\n        createTakeTest (duration: $duration, endAt: $endAt, startAt: $startAt, status: $status, description: $description, title: $title) {\n            takeTest {\n                status\n            }\n        }\n    }\n"]))),X=(0,A.Ps)(j||(j=(0,Q.Z)(["\n    mutation updateTakeTest ($duration: Int, $endAt: String, $startAt: String, $status: String, $id: ID, $description: String, $title: String) {\n        updateTakeTest (duration: $duration, endAt: $endAt, startAt: $startAt, status: $status, id: $id, description: $description, title: $title) {\n            takeTest {\n                status\n            }\n        }\n    }\n"]))),Y=(0,A.Ps)(v||(v=(0,Q.Z)(["\n    mutation deleteTakeTest ($id: ID) {\n        deleteTakeTest (id: $id) {\n            takeTest {\n                status\n            }\n        }\n    }\n"]))),nn=(0,A.Ps)(k||(k=(0,Q.Z)(["\n    query allParticipantByTest ($takeTest: Int!) {\n        allParticipantByTest (takeTest: $takeTest) {\n            id\n            student {\n                studentCode\n                familyName\n                name\n            }\n            started\n            completed\n            answerSet {\n                answerType\n                questionText\n                choices\n                score\n                givenAnswer\n            }\n        }\n    }\n"]))),en=(0,A.Ps)(h||(h=(0,Q.Z)(["\n    mutation createParticipant ($section: Int, $studentCode: String, $takeTest: Int) {\n        createParticipant (section: $section, studentCode: $studentCode, takeTest: $takeTest) {\n            participant {\n                id\n            }\n        }\n    }\n"]))),tn=(0,A.Ps)(q||(q=(0,Q.Z)(["\n    mutation deleteParticipant ($id: ID, $takeTest: Int) {\n        deleteParticipant (id: $id, takeTest: $takeTest) {\n            participant {\n                started\n            }\n        }\n    }\n"]))),sn=(0,A.Ps)(y||(y=(0,Q.Z)(["\n    query allTakeLevelByTest ($takeTest: Int!) {\n        allTakeLevelByTest (takeTest: $takeTest) {\n            id\n            onlineTest {\n                id\n                title\n            }\n            questionLevel {\n                id\n                level\n            }\n            takeNumber\n        }\n    }\n"]))),rn=(0,A.Ps)(b||(b=(0,Q.Z)(["\n    mutation createTakeLevel ($onlineTest: Int, $questionLevel: Int, $takeNumber: Int, $takeTest: Int) {\n        createTakeLevel (onlineTest: $onlineTest, questionLevel: $questionLevel, takeNumber: $takeNumber, takeTest: $takeTest) {\n            takeLevel {\n                id\n            }\n        }\n    }\n"]))),an=(0,A.Ps)(P||(P=(0,Q.Z)(["\n    mutation deleteTakeLevel ($id: ID) {\n        deleteTakeLevel (id: $id) {\n            takeLevel {\n                takeNumber\n            }\n        }\n    }\n"]))),on=((0,A.Ps)(I||(I=(0,Q.Z)(["\n    query allSections {\n        allSections {\n            id\n            section\n            studentSet {\n                id\n                studentCode\n            }\n        }\n    }\n"]))),(0,A.Ps)(S||(S=(0,Q.Z)(["\n    query startTest ($takeTest: Int!) {\n        startTest (takeTest: $takeTest) {\n            id\n            questionText\n            choices\n            answerType\n            givenAnswer\n            question {\n                hint\n                image\n            }\n        }\n    }\n"])))),ln=(0,A.Ps)(C||(C=(0,Q.Z)(["\n    mutation updateAnswer ($givenAnswer: String, $id: ID) {\n        updateAnswer (givenAnswer: $givenAnswer, id: $id) {\n            answer {\n                id\n            }\n        }\n    }\n"]))),un=(0,A.Ps)(w||(w=(0,Q.Z)(["\n    query testTime ($takeTest: Int!) {\n        testTime (takeTest: $takeTest) {\n            duration\n            started\n            endAt\n        }\n    }\n"]))),dn=(0,A.Ps)(L||(L=(0,Q.Z)(["\n    query finishTest ($takeTest: Int!) {\n        finishTest (takeTest: $takeTest) {\n            score\n        }\n    }\n"])))},96278:function(n,e,t){t.r(e),t.d(e,{default:function(){return F}});var i=t(72791),s=t(29439),r=t(20003),a=t(50419),o=t(87309),l=t(66871),u=t(49389),d=t(59432),c=t(37083),$=t(69421),m=t(76407),f=t(36795),T=t(82464),p=t(53834),Z=t(11730),g=t(31549),x=t(96578),j=t(84376),v=t(64880),k=t(91523),h=t(68470),q=t(2703),y=t(22949),b=t(73332),P=t(86586),I=t(93721),S=t(82630),C=t(68694),w=t(38937),L=t(80184),Q=u.Z.TextArea,A=y.Z.Option;var N=function(n){var e=n.editData,t=n.formType,r=n.setIsModalVisible,o=b.Z.useForm(),l=(0,s.Z)(o,1)[0],d=(0,i.useState)([]),m=(0,s.Z)(d,2),f=m[0],T=m[1],p=(0,P.t)(C.Cm,{onCompleted:function(n){T(n.allSubjects)}}),Z=(0,s.Z)(p,2),g=Z[0],x=Z[1].loading,v=(0,j.D)(I.NP,{refetchQueries:[I.Qg],onCompleted:function(n){a.ZP.success("\u0410\u043c\u0436\u0438\u043b\u0442\u0442\u0430\u0439 \u0445\u0430\u0434\u0433\u0430\u043b\u043b\u0430\u0430"),r(!1)}}),k=(0,s.Z)(v,2),h=k[0],q=k[1].loading,N=(0,j.D)(I.xs,{refetchQueries:[I.Qg],onCompleted:function(n){a.ZP.success("\u0410\u043c\u0436\u0438\u043b\u0442\u0442\u0430\u0439 \u0445\u0430\u0434\u0433\u0430\u043b\u043b\u0430\u0430"),r(!1)}}),D=(0,s.Z)(N,2),O=D[0],_=D[1].loading;return(0,i.useEffect)((function(){if("edit"===t){var n={title:e.title,description:e.description,subject:e.subject.id};g({variables:{offset:0,limit:99999999,filter:e.subject.subject}}),l.setFieldsValue(n)}else"create"===t&&l.resetFields()}),[e,g,l,t]),(0,L.jsx)(c.Z,{spinning:q||_,tip:"\u0410\u0447\u0430\u0430\u043b\u043b\u0430\u0436 \u0431\u0430\u0439\u043d\u0430...",children:(0,L.jsxs)(b.Z,{id:"TestForm",layout:"vertical",form:l,name:"school",onFinish:function(n){"edit"===t?(n.id=e.id,O({variables:n})):h({variables:n})},children:[(0,L.jsx)(b.Z.Item,{name:"title",label:(0,L.jsx)(S.Z,{id:"name"}),rules:[{required:!0,message:(0,L.jsx)(S.Z,{id:"form.required"})}],children:(0,L.jsx)(u.Z,{})}),(0,L.jsx)(b.Z.Item,{name:"description",label:(0,L.jsx)(S.Z,{id:"description"}),rules:[{required:!0,message:(0,L.jsx)(S.Z,{id:"form.required"})}],children:(0,L.jsx)(Q,{rows:4})}),(0,L.jsx)(b.Z.Item,{name:"subject",label:(0,L.jsx)(S.Z,{id:"subject"}),rules:[{required:!0,message:(0,L.jsx)(S.Z,{id:"form.required"})}],children:(0,L.jsx)(y.Z,{showSearch:!0,filterOption:!1,notFoundContent:x?(0,L.jsx)(w.Z,{cover:"content"}):(0,L.jsx)($.Z,{image:$.Z.PRESENTED_IMAGE_SIMPLE}),onSearch:function(n){""===n?T([]):g({variables:{offset:0,limit:99999999,filter:n}})},children:f.map((function(n,e){return(0,L.jsxs)(A,{value:n.id,children:[" ",n.subject," / ",n.subjectCode," "]},e)}))})})]})})},D=t(59305);var O=function(n){var e=(0,i.useState)(!1),t=(0,s.Z)(e,2),y=t[0],b=t[1],P=(0,i.useState)([]),C=(0,s.Z)(P,2),w=C[0],Q=C[1],A=(0,i.useState)(""),O=(0,s.Z)(A,2),_=O[0],F=O[1],B=(0,i.useState)([]),E=(0,s.Z)(B,2),z=E[0],M=E[1],R=(0,v.k6)(),U=(0,x.a)(I.Qg,{}),V=U.loading,G=U.data,W=U.refetch;(0,i.useEffect)((function(){!1===V&&G&&M(G.allOnlineTests)}),[V,G]);var H=r.Z.confirm,J=(0,j.D)(I.rb,{onCompleted:function(n){W(),a.ZP.success("\u0410\u043c\u0436\u0438\u043b\u0442\u0442\u0430\u0439 \u0443\u0441\u0442\u043b\u0430\u0430")}}),K=(0,s.Z)(J,2),X=K[0],Y=K[1].loading,nn=[{key:"title",title:(0,L.jsx)(S.Z,{id:"name"}),dataIndex:"title",width:"20vw",sorter:function(n,e){return q.ZP.antdTableSorter(n,e,"title")}},{key:"subject",title:(0,L.jsx)(S.Z,{id:"subject"}),dataIndex:["subject","subject"],width:"10vw",sorter:function(n,e){return q.ZP.antdTableSorter(n,e,"subject")}},{key:"description",title:(0,L.jsx)(S.Z,{id:"description"}),dataIndex:"description",width:"35vw",sorter:function(n,e){return q.ZP.antdTableSorter(n,e,"description")}},{key:"actions",title:(0,L.jsx)(S.Z,{id:"main.action"}),width:"20vw",dataIndex:"actions",render:function(e,t){return(0,L.jsxs)("div",{className:"text-center",children:[!0===n.permissions.add_question&&(0,L.jsxs)(o.Z,{size:"small",onClick:function(){return n=t.id,void R.push("".concat(D.sH,"/online-test-library/").concat(n));var n},type:"text",icon:(0,L.jsx)(m.Z,{twoToneColor:"#acdf87"}),children:[" ",(0,L.jsx)(S.Z,{id:"add-question"})]}),!0===n.permissions.edit&&(0,L.jsxs)(o.Z,{size:"small",onClick:function(){return Q(t),F("edit"),void b(!0)},type:"text",icon:(0,L.jsx)(f.Z,{twoToneColor:"#ffdb00"}),children:[" ",(0,L.jsx)(S.Z,{id:"edit"})]}),!0===n.permissions.destroy&&(0,L.jsxs)(o.Z,{size:"small",onClick:function(){return n=t,void H({title:"\u0423\u0441\u0442\u0433\u0430\u0445 \u0443\u0443?",okText:"\u0423\u0441\u0442\u0433\u0430\u0445",okType:"danger",cancelText:"\u0411\u043e\u043b\u0438\u0445",onOk:function(){X({variables:{id:n.id}})}});var n},type:"text",icon:(0,L.jsx)(T.Z,{twoToneColor:"#f42f2f"}),children:[" ",(0,L.jsx)(S.Z,{id:"delete"})]})]})}}];return(0,L.jsxs)(L.Fragment,{children:[(0,L.jsx)(k.rU,{to:"take-test",children:(0,L.jsxs)(o.Z,{type:"default",icon:(0,L.jsx)(p.Z,{}),children:[" ",(0,L.jsx)(S.Z,{id:"back"})]})}),(0,L.jsx)(r.Z,{forceRender:!0,title:"edit"===_?(0,L.jsx)(S.Z,{id:"edit"}):(0,L.jsx)(S.Z,{id:"add_new"}),visible:y,okText:(0,L.jsx)(S.Z,{id:"main.okText"}),cancelText:(0,L.jsx)(S.Z,{id:"main.cancelText"}),onCancel:function(){b(!1)},okButtonProps:{form:"TestForm",key:"submit",htmlType:"submit"},children:(0,L.jsx)(N,{formType:_,setIsModalVisible:b,editData:w})}),(0,L.jsxs)(l.Z,{className:"mt-4",children:[(0,L.jsxs)(h.Z,{alignItems:"center",justifyContent:"between",mobileFlex:!1,children:[(0,L.jsx)(h.Z,{className:"mb-1",mobileFlex:!1,children:(0,L.jsx)("div",{className:"mr-md-3 mb-3",children:(0,L.jsx)(u.Z,{placeholder:"\u0425\u0430\u0439\u0445",prefix:(0,L.jsx)(Z.Z,{}),onChange:function(n){return function(n){var e=n.currentTarget.value,t=n.currentTarget.value?z:G.allOnlineTests,i=q.ZP.wildCardSearch(t,e);M(i)}(n)}})})}),!0===n.permissions.create&&(0,L.jsx)("div",{className:"mr-md-3 mb-3",children:(0,L.jsxs)(o.Z,{onClick:function(){F("create"),b(!0)},type:"primary",icon:(0,L.jsx)(g.Z,{}),block:!0,children:[" ",(0,L.jsx)(S.Z,{id:"add_new"})]})})]}),(0,L.jsx)("div",{className:"table-responsive",children:(0,L.jsx)(d.Z,{columns:nn,dataSource:z,rowKey:"id",bordered:!0,size:"small",locale:{emptyText:V||Y?(0,L.jsx)(c.Z,{}):(0,L.jsx)($.Z,{})}})})]})]})},_=t(59288),F=function(n){var e={create:(0,_.C)("add_online_test"),edit:(0,_.C)("change_online_test"),destroy:(0,_.C)("delete_online_test"),add_question:(0,_.C)("add_question")};return Object.values(e).indexOf("loading")>-1?(0,L.jsx)(w.Z,{cover:"content"}):(0,L.jsx)(O,{title:n.title,permissions:e})}}}]);
//# sourceMappingURL=6278.2a226710.chunk.js.map