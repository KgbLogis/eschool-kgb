{"version":3,"file":"static/js/5174.70fffa48.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","graphql/food.js","../node_modules/@ant-design/icons-svg/es/asn/FileImageTwoTone.js","../node_modules/@ant-design/icons/es/icons/FileImageTwoTone.js","views/app-views/web-configs/food-menu/foods/form.js","views/app-views/web-configs/food-menu/foods/image-form.js","views/app-views/web-configs/food-menu/foods/table.js","views/app-views/web-configs/food-menu/foods/index.js","../node_modules/@ant-design/icons-svg/es/asn/EditTwoTone.js","../node_modules/@ant-design/icons/es/icons/EditTwoTone.js","../node_modules/@ant-design/icons-svg/es/asn/UploadOutlined.js","../node_modules/@ant-design/icons/es/icons/UploadOutlined.js","../node_modules/@apollo/src/react/hooks/useMutation.ts"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ALL_FOOD_MENUS = gql`\r\n    query allFoodMenus ($filter: String) {\r\n        allFoodMenus (filter: $filter){\r\n            id\r\n            program {\r\n                id\r\n                program\r\n            }\r\n            name \r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_FOOD_MENU = gql`\r\n    mutation createFoodMenu ($name: String, $program: ID){\r\n        createFoodMenu(name: $name, program: $program){\r\n            foodMenu{\r\n                id\r\n            }\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nexport const UPDATE_FOOD_MENU = gql `\r\n    mutation updateFoodMenu ($id: ID, $name: String, $program: ID){\r\n        updateFoodMenu (id: $id, name: $name, program: $program){\r\n            foodMenu{\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_FOOD_MENU = gql `\r\n    mutation deleteFoodMenu ($id: ID){\r\n        deleteFoodMenu (id: $id){\r\n            foodMenu{\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_FOODS = gql `\r\n    query allFoods ($foodMenu: ID!) {\r\n        allFoods (foodMenu: $foodMenu){\r\n            id\r\n            name\r\n            ingredients\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_FOOD = gql `\r\n    mutation createFood ($foodMenu: ID, $ingredients: String, $name: String){\r\n        createFood (foodMenu: $foodMenu, ingredients: $ingredients, name: $name) {\r\n            food {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_FOOD = gql `\r\n    mutation updateFood ($foodMenu: ID, $id: ID, $ingredients: String, $name: String){\r\n        updateFood (foodMenu: $foodMenu, id: $id, ingredients: $ingredients, name: $name){\r\n            food {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_FOOD = gql `\r\n    mutation deleteFood ($id: ID){\r\n        deleteFood (id: $id){\r\n            food {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_DAILY_MENUS = gql`\r\n    query allDailyMenus {\r\n        allDailyMenus {\r\n            id\r\n            program {\r\n                program\r\n            }\r\n            name\r\n            createdAt\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_DAILY_MENU = gql`\r\n    mutation createDailyMenu ($name: String, $program: ID) {\r\n        createDailyMenu (name: $name, program: $program) {\r\n            dailyMenu {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_DAILY_MENU = gql `\r\n    mutation deleteDailyMenu ($id: ID){\r\n        deleteDailyMenu (id: $id){\r\n            dailyMenu {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const ALL_DAILY_MENU_FOODS = gql `\r\n    query allDailyMenuFoods ($dailyMenu: ID!){\r\n        allDailyMenuFoods (dailyMenu: $dailyMenu){\r\n            id\r\n            food {\r\n                name\r\n                ingredients\r\n                foodfileSet {\r\n                    image\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const FOOD_BYID = gql `\r\n    query foodById ($id: ID!){\r\n        foodById (id: $id){\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_FOOD_FILES_BYFOOD = gql `\r\n    query allFoodFilesByFood ($food: ID!){\r\n        allFoodFilesByFood (food: $food){\r\n            id\r\n            image\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_FOOD_FILE = gql `\r\n    mutation createFoodFile ($food: ID, $image: Upload!){\r\n        createFoodFile (food: $food, image: $image){\r\n            foodFile {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_FOOD_FILE = gql `\r\n    mutation deleteFoodFile ($id: ID){\r\n        deleteFoodFile (id: $id){\r\n            foodFile {\r\n                image\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_DAILY_MENU_FOOD = gql`\r\n    mutation createDailyMenuFood ($dailyMenu: ID, $food: ID) {\r\n        createDailyMenuFood (dailyMenu: $dailyMenu, food: $food) {\r\n            dailyMenuFood {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`","// This icon file is generated automatically.\nvar FileImageTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M534 352V136H232v752h560V394H576a42 42 0 01-42-42zm-134 50c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40zm296 294H328.1c-6.7 0-10.4-7.7-6.3-12.9l99.8-127.2a8 8 0 0112.6 0l41.1 52.4 77.8-99.2a8.1 8.1 0 0112.7 0l136.5 174c4.1 5.2.4 12.9-6.3 12.9z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM602 137.8L790.2 326H602V137.8zM792 888H232V136h302v216a42 42 0 0042 42h216v494z\", \"fill\": primaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M553.1 509.1l-77.8 99.2-41.1-52.4a8 8 0 00-12.6 0l-99.8 127.2a7.98 7.98 0 006.3 12.9H696c6.7 0 10.4-7.7 6.3-12.9l-136.5-174a8.1 8.1 0 00-12.7 0zM360 442a40 40 0 1080 0 40 40 0 10-80 0z\", \"fill\": primaryColor } }] }; }, \"name\": \"file-image\", \"theme\": \"twotone\" };\nexport default FileImageTwoTone;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FileImageTwoToneSvg from \"@ant-design/icons-svg/es/asn/FileImageTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\nvar FileImageTwoTone = function FileImageTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: FileImageTwoToneSvg\n  }));\n};\nFileImageTwoTone.displayName = 'FileImageTwoTone';\nexport default /*#__PURE__*/React.forwardRef(FileImageTwoTone);","import React, { useEffect } from 'react';\r\nimport { Form, Input, message, Spin } from 'antd';\r\nimport { useMutation } from '@apollo/client';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport { ALL_FOODS, CREATE_FOOD, UPDATE_FOOD } from 'graphql/food';\r\nimport BraftEditor from 'braft-editor';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction DegreeForm ({formType, editData, setIsModalVisible}) {\r\n\r\n    const { foodMenu } = useParams()\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const [create, { loading: createLoading }] = useMutation(CREATE_FOOD, {\r\n        refetchQueries: [{\r\n            query: ALL_FOODS,\r\n            variables: { foodMenu: foodMenu }\r\n        }],\r\n\t\tonCompleted: data => {\r\n            message.success('Амжилттай хадгаллаа');\r\n            setIsModalVisible(false);\r\n\t\t}\r\n\t});\r\n\r\n    const [update, { loading: updateLoading }] = useMutation(UPDATE_FOOD, {\r\n        refetchQueries: [{\r\n            query: ALL_FOODS,\r\n            variables: { foodMenu: foodMenu }\r\n        }],\r\n        onCompleted: data => {\r\n            message.success('Амжилттай хадгаллаа');\r\n            setIsModalVisible(false);\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(formType === \"edit\") {\r\n            const newData = {\r\n                ingredients: BraftEditor.createEditorState(editData.ingredients),\r\n                name: editData.name\r\n            }\r\n            form.setFieldsValue(newData);\r\n        } else {\r\n            form.resetFields();\r\n        }\r\n    }, [editData, form, formType]);\r\n\r\n    \r\n\r\n    const onFinish = values => {\r\n        values.ingredients = values.ingredients.toHTML();\r\n        values.foodMenu = foodMenu\r\n        if (formType === \"edit\") {\r\n            values.id = editData.id;\r\n            update({ variables: values });\r\n        } else {\r\n            create({ variables: values });\r\n        }\r\n    };\r\n        \r\n    return (\r\n        <Spin spinning={createLoading || updateLoading} tip=\"Ачааллаж байна...\">\r\n            <Form  \r\n                id=\"DegreeForm\"\r\n                layout={'vertical'}\r\n                form={form}\r\n                name=\"control-hooks\" \r\n                onFinish={onFinish}\r\n            >\r\n                <Form.Item name=\"name\" label={<IntlMessage id=\"name\" />} rules={[\r\n                    { \r\n                        required: true,\r\n                        message: \"Хоосон орхих боломжгүй\"\r\n                    }\r\n                ]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"ingredients\" label={<IntlMessage id=\"ingredients\" />} rules={[\r\n                    { \r\n                        required: true,\r\n                        message: \"Хоосон орхих боломжгүй\"\r\n                    }\r\n                ]}>\r\n                    <BraftEditor\r\n                        className='border rounded-2'\r\n                        language=\"en\"\r\n                    />\r\n                </Form.Item>\r\n            </Form>\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport default DegreeForm","import React from 'react'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { Button, Image, message, Upload } from 'antd'\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { ALL_FOOD_FILES_BYFOOD, CREATE_FOOD_FILE } from 'graphql/food'\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport { BASE_SERVER_URL } from 'configs/AppConfig';\r\n\r\nconst ImageForm = ({ editData }) => {\r\n\r\n    const { data, refetch } = useQuery(ALL_FOOD_FILES_BYFOOD, {\r\n        variables: { food: editData.id }\r\n    })\r\n\r\n    const [upload, { loading: uploadLoading }] = useMutation(CREATE_FOOD_FILE, {\r\n        onCompleted: data => {\r\n            refetch();\r\n            message.success(`Амжилттай хууллаа`);\r\n\t\t}\r\n    });\r\n    \r\n    async function fileUploading (value) {\r\n        await upload({ variables: { image: value.file, food: editData.id } });\r\n        value.onSuccess(\"Ok\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Upload \r\n                multiple={true}\r\n                accept=\".jpg, .png\"\r\n                orientation=\"right\"\r\n                customRequest={fileUploading}\r\n                showUploadList={false}\r\n            >\r\n                <Button \r\n                    style={{float: 'right'}} \r\n                    size='small' \r\n                    type=\"primary\" \r\n                    icon={<UploadOutlined />} \r\n                    loading={uploadLoading} \r\n                > <IntlMessage id=\"main.upload-file\" /> </Button>\r\n            </Upload>\r\n            <div className='mt-4 grid grid-cols-4 gap-4'>\r\n                { data?.allFoodFilesByFood.map((item, index) => (\r\n                    <div className='mx-auto' key={index}>\r\n                        <Image \r\n                            className=\"w-auto h-120\" \r\n                            src={`${BASE_SERVER_URL}${item.image}`}\r\n                            alt=\"image description\" \r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageForm","import React, { useState } from 'react'\r\nimport { Card, Table, Input, Spin, Empty, Modal, message, Button } from 'antd';\r\nimport { DeleteTwoTone, SearchOutlined, EditTwoTone, PlusCircleOutlined, FileImageTwoTone } from '@ant-design/icons';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport utils from 'utils'\r\nimport DegreeForm from './form'\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport { ALL_FOODS, DELETE_FOOD } from 'graphql/food';\r\nimport { useParams } from 'react-router-dom';\r\nimport ImageForm from './image-form';\r\n\r\nfunction FoodTable (props) {\r\n\r\n\tconst { foodMenu } = useParams()\r\n\r\n\tconst { loading, data: foodData } = useQuery(ALL_FOODS, {\r\n\t\tvariables: { foodMenu: foodMenu },\r\n\t\tonCompleted: data => {\r\n            setList(data.allFoods);\r\n\t\t}\r\n\t});\r\n    \r\n\tconst [list, setList] = useState(undefined)\r\n\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst [isImageModalVisible, seImagetIsModalVisible] = useState(false);\r\n\tconst [editData, setEditData] = useState([]);\r\n\tconst [formType, setFormType] = useState(\"\");\r\n\r\n    const showModal = () => {\r\n\t\tsetFormType(\"create\");\r\n      \tsetIsModalVisible(true);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n      \tsetIsModalVisible(false);\r\n    };\r\n\r\n\tconst editRow = row => {\r\n\t\tsetFormType(\"edit\");\r\n\t\tsetEditData(row);\r\n\t\tsetIsModalVisible(true);\r\n\t};\r\n\r\n\tconst onImageRowClick = (row) => {\r\n\t\tsetEditData(row);\r\n\t\tseImagetIsModalVisible(true)\r\n\t}\r\n\r\n\tconst handleImageCancel = () => {\r\n\t\tseImagetIsModalVisible(false)\r\n\t}\r\n\r\n\tconst { confirm } = Modal;\r\n\r\n\tconst [deleteDegree, { loading: loadingDelete }] = useMutation(DELETE_FOOD, {\r\n\t\trefetchQueries: [{\r\n            query: ALL_FOODS,\r\n            variables: { foodMenu: foodMenu }\r\n        }],\r\n\t\tonCompleted: data => {\r\n            message.success('Амжилттай устлаа');\r\n\t\t}\r\n\t});\r\n\t\r\n\tfunction deleteRow(row) {\r\n\t\tconfirm({\r\n\t\t  title: 'Устгах уу?',\r\n\t\t  okText: 'Устгах',\r\n\t\t  okType: 'danger',\r\n\t\t  cancelText: 'Болих',\r\n\t\t  onOk() {\r\n\t\t\tdeleteDegree({ variables: { id: row.id } }); \r\n\t\t  },\r\n\t\t});\r\n\t}\r\n\r\n\tconst tableColumns = [\r\n\t\t{\r\n\t\t\tkey: 'name',\r\n\t\t\ttitle: <IntlMessage id=\"name\" />,\r\n\t\t\tdataIndex: 'name',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'name')\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: 'actions',\r\n\t\t\ttitle: <IntlMessage id=\"main.action\" />,\r\n\t\t\twidth: `20vw`,\r\n\t\t\tdataIndex: 'actions',\r\n\t\t\trender: (_, elm) => (\r\n\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops.permissions.edit === true &&\r\n\t\t\t\t\t\t<Button size='small' type='text' key=\"1\" onClick={() => onImageRowClick(elm)}>\r\n\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t<span className=\"ml-2\"> <IntlMessage id=\"main.image\" /></span>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{ props.permissions.edit === true &&\r\n\t\t\t\t\t\t<Button size='small' type='text' key=\"2\" onClick={() => editRow(elm)}>\r\n\t\t\t\t\t\t\t<EditTwoTone twoToneColor=\"#ffdb00\"/>\r\n\t\t\t\t\t\t\t<span className=\"ml-2\"> <IntlMessage id=\"edit\" /></span>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{ props.permissions.destroy === true &&\r\n\t\t\t\t\t\t<Button size='small' type='text' key=\"3\" onClick={() => deleteRow(elm)}>\r\n\t\t\t\t\t\t\t<DeleteTwoTone twoToneColor=\"#f42f2f\"/>\r\n\t\t\t\t\t\t\t<span className=\"ml-2\"> <IntlMessage id=\"delete\" /></span>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t];\r\n\r\n\tconst onSearch = e => {\r\n\t\tconst value = e.currentTarget.value\r\n\t\tconst searchArray = e.currentTarget.value? list : foodData?.allFoods\r\n\t\tconst data = utils.wildCardSearch(searchArray, value)\r\n\t\tsetList(data)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\twidth={'80vw'}\r\n                visible={isModalVisible} \r\n\t\t\t\tokText={<IntlMessage id=\"main.okText\" />}\r\n\t\t\t\tcancelText={<IntlMessage id=\"main.cancelText\" />}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\tokButtonProps={{form:'DegreeForm', key: 'submit', htmlType: 'submit'}}\r\n            >\r\n                <DegreeForm editData={editData} formType={formType} setIsModalVisible={setIsModalVisible} />\r\n            </Modal>\r\n\t\t\t<Modal\r\n\t\t\t\twidth={'80vw'}\r\n                visible={isImageModalVisible} \r\n\t\t\t\tokText={<IntlMessage id=\"main.okText\" />}\r\n\t\t\t\tcancelText={<IntlMessage id=\"main.cancelText\" />}\r\n\t\t\t\tonCancel={handleImageCancel}\r\n\t\t\t\tokButtonProps={{form:'DegreeForm', key: 'submit', htmlType: 'submit'}}\r\n            >\r\n\t\t\t\t<ImageForm editData={editData} />\r\n            </Modal>\r\n\t\t\t<Card>\r\n\t\t\t\t<Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n\t\t\t\t\t<Flex className=\"mb-1\" mobileFlex={false}>\r\n\t\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\r\n\t\t\t\t\t\t\t<Input placeholder={'Хайх'} prefix={<SearchOutlined />} onChange={e => onSearch(e)}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t\t{ props.permissions.create === true && \r\n\t\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\r\n\t\t\t\t\t\t\t<Button onClick={showModal} type=\"primary\" icon={<PlusCircleOutlined />} block> <IntlMessage id=\"add_new\" /></Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t<Table \r\n\t\t\t\t\t\tcolumns={tableColumns} \r\n\t\t\t\t\t\tdataSource={foodData?.allFoods}\r\n\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\trowKey='id'  \r\n\t\t\t\t\t\tbordered\r\n\t\t\t\t\t\tlocale={{\r\n\t\t\t\t\t\t\temptyText: loading || loadingDelete ? <Spin /> : <Empty />\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t\t\r\n\t)\r\n}\r\n\r\nexport default FoodTable\r\n","import React from \"react\";\r\nimport DegreeTable from './table';\r\nimport { CheckPer } from 'hooks/checkPermission';\r\nimport Loading from \"components/shared-components/Loading\";\r\n\r\nconst Index = () => {\r\n\r\n    const create = CheckPer('add_degree');\r\n    const edit = CheckPer('change_degree');\r\n    const destroy = CheckPer('delete_degree');\r\n\r\n    const permissions = {\r\n        create: create,\r\n        edit: edit,\r\n        destroy: destroy\r\n    }\r\n\r\n    if (Object.values(permissions).indexOf('loading') > -1) {\r\n        return <Loading cover=\"content\" />\r\n    }\r\n\r\n    return (\r\n        <DegreeTable permissions={permissions} />\r\n    )\r\n}\r\n\r\nexport default Index;\r\n","// This icon file is generated automatically.\nvar EditTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M761.1 288.3L687.8 215 325.1 577.6l-15.6 89 88.9-15.7z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32zm-622.3-84c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89z\", \"fill\": primaryColor } }] }; }, \"name\": \"edit\", \"theme\": \"twotone\" };\nexport default EditTwoTone;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditTwoToneSvg from \"@ant-design/icons-svg/es/asn/EditTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\nvar EditTwoTone = function EditTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EditTwoToneSvg\n  }));\n};\nEditTwoTone.displayName = 'EditTwoTone';\nexport default /*#__PURE__*/React.forwardRef(EditTwoTone);","// This icon file is generated automatically.\nvar UploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M400 317.7h73.9V656c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V317.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 163a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"upload\", \"theme\": \"outlined\" };\nexport default UploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/UploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar UploadOutlined = function UploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UploadOutlinedSvg\n  }));\n};\nUploadOutlined.displayName = 'UploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(UploadOutlined);","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\nimport {\n  MutationFunctionOptions,\n  MutationHookOptions,\n  MutationResult,\n  MutationTuple,\n} from '../types/types';\n\nimport {\n  ApolloCache,\n  DefaultContext,\n  mergeOptions,\n  OperationVariables,\n} from '../../core';\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport { ApolloError } from '../../errors';\nimport { useApolloClient } from './useApolloClient';\n\nexport function useMutation<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n>(\n  mutation: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: MutationHookOptions<TData, TVariables, TContext, TCache>,\n): MutationTuple<TData, TVariables, TContext, TCache> {\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  const [result, setResult] = useState<Omit<MutationResult, 'reset'>>({\n    called: false,\n    loading: false,\n    client,\n  });\n\n  const ref = useRef({\n    result,\n    mutationId: 0,\n    isMounted: true,\n    client,\n    mutation,\n    options,\n  });\n\n  // TODO: Trying to assign these in a useEffect or useLayoutEffect breaks\n  // higher-order components.\n  {\n    Object.assign(ref.current, { client, options, mutation });\n  }\n\n  const execute = useCallback((\n    executeOptions: MutationFunctionOptions<\n      TData,\n      TVariables,\n      TContext,\n      TCache\n    > = {}\n  ) => {\n    const {client, options, mutation} = ref.current;\n    const baseOptions = { ...options, mutation };\n    if (!ref.current.result.loading && !baseOptions.ignoreResults && ref.current.isMounted) {\n      setResult(ref.current.result = {\n        loading: true,\n        error: void 0,\n        data: void 0,\n        called: true,\n        client,\n      });\n    }\n\n    const mutationId = ++ref.current.mutationId;\n    const clientOptions = mergeOptions(\n      baseOptions,\n      executeOptions as any,\n    );\n\n    return client.mutate(clientOptions).then((response) => {\n      const { data, errors } = response;\n      const error =\n        errors && errors.length > 0\n          ? new ApolloError({ graphQLErrors: errors })\n          : void 0;\n\n      if (\n        mutationId === ref.current.mutationId &&\n        !clientOptions.ignoreResults\n      ) {\n        const result = {\n          called: true,\n          loading: false,\n          data,\n          error,\n          client,\n        };\n\n        if (ref.current.isMounted && !equal(ref.current.result, result)) {\n          setResult(ref.current.result = result);\n        }\n      }\n      ref.current.options?.onCompleted?.(response.data!, clientOptions);\n      executeOptions.onCompleted?.(response.data!, clientOptions);\n      return response;\n    }).catch((error) => {\n      if (\n        mutationId === ref.current.mutationId &&\n        ref.current.isMounted\n      ) {\n        const result = {\n          loading: false,\n          error,\n          data: void 0,\n          called: true,\n          client,\n        };\n\n        if (!equal(ref.current.result, result)) {\n          setResult(ref.current.result = result);\n        }\n      }\n\n      if (ref.current.options?.onError || clientOptions.onError) {\n        ref.current.options?.onError?.(error, clientOptions);\n        executeOptions.onError?.(error, clientOptions);\n        // TODO(brian): why are we returning this here???\n        return { data: void 0, errors: error };\n      }\n\n      throw error;\n    });\n  }, []);\n\n  const reset = useCallback(() => {\n    if (ref.current.isMounted) {\n      setResult({ called: false, loading: false, client });\n    }\n  }, []);\n\n  useEffect(() => {\n    ref.current.isMounted = true;\n\n    return () => {\n      ref.current.isMounted = false;\n    };\n  }, []);\n\n  return [execute, { reset, ...result }];\n}\n"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","ALL_FOOD_MENUS","gql","CREATE_FOOD_MENU","UPDATE_FOOD_MENU","DELETE_FOOD_MENU","ALL_FOODS","CREATE_FOOD","UPDATE_FOOD","DELETE_FOOD","ALL_DAILY_MENUS","CREATE_DAILY_MENU","DELETE_DAILY_MENU","ALL_DAILY_MENU_FOODS","ALL_FOOD_FILES_BYFOOD","CREATE_FOOD_FILE","CREATE_DAILY_MENU_FOOD","primaryColor","secondaryColor","FileImageTwoTone","ref","React","AntdIcon","_objectSpread","icon","FileImageTwoToneSvg","displayName","formType","editData","setIsModalVisible","foodMenu","useParams","Form","form","useMutation","refetchQueries","query","variables","onCompleted","data","message","create","createLoading","loading","update","updateLoading","useEffect","newData","ingredients","BraftEditor","name","setFieldsValue","resetFields","spinning","tip","id","layout","onFinish","values","toHTML","label","IntlMessage","rules","required","language","useQuery","food","refetch","upload","uploadLoading","value","image","file","onSuccess","multiple","accept","orientation","customRequest","showUploadList","style","float","size","type","UploadOutlined","allFoodFilesByFood","map","item","index","src","BASE_SERVER_URL","alt","setList","allFoods","foodData","useState","undefined","list","isModalVisible","isImageModalVisible","seImagetIsModalVisible","setEditData","setFormType","confirm","Modal","deleteDegree","loadingDelete","tableColumns","key","title","dataIndex","sorter","a","b","utils","width","render","_","elm","permissions","edit","onClick","row","EditTwoTone","twoToneColor","destroy","okText","okType","cancelText","onOk","DeleteTwoTone","visible","onCancel","okButtonProps","htmlType","placeholder","prefix","SearchOutlined","onChange","e","currentTarget","searchArray","onSearch","PlusCircleOutlined","block","columns","dataSource","rowKey","bordered","locale","emptyText","CheckPer","Object","indexOf","Loading","cover","EditTwoToneSvg","UploadOutlinedSvg","mutation","options","client","useApolloClient","verifyDocumentType","DocumentType","called","result","setResult","useRef","mutationId","isMounted","assign","current","execute","useCallback","executeOptions","baseOptions","ignoreResults","error","clientOptions","mergeOptions","mutate","then","response","errors","length","ApolloError","graphQLErrors","result_1","equal","catch","result_2","onError","reset"],"sourceRoot":""}