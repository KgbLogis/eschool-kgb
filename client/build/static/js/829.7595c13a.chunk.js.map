{"version":3,"file":"static/js/829.7595c13a.chunk.js","mappings":"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","sources":["constants/Url.js","graphql/report.js","views/report-views/student-report/index.js","../node_modules/rc-util/es/pickAttrs.js"],"sourcesContent":["// mkp\r\nexport const REPORT_IMAGE_URL = 'http://66.181.175.235:8001';\r\n\r\n// Dhis\r\n// export const REPORT_IMAGE_URL = 'http://103.10.20.132:8001';\r\n\r\n// Dev\r\n// export const REPORT_IMAGE_URL = 'http://192.168.1.6:8000';","import { gql } from \"@apollo/client\";\r\n\r\nexport const STUDENT_REPORT = gql `\r\n    query studentReport ($studentCode: String) {\r\n        studentReport (studentCode: $studentCode) {\r\n            school\r\n            textTop\r\n            textMid\r\n            textBottom\r\n            studentPhoto\r\n            studentCode\r\n        }\r\n    }\r\n`;\r\n\r\nexport const STUDENT_REPORT_SECTION = gql `\r\n    query studentReportSection ($section: Int) {\r\n        studentReportSection (section: $section) {\r\n            school\r\n            textTop\r\n            textMid\r\n            textBottom\r\n            studentPhoto\r\n            studentCode\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_SECTIONS = gql `\r\n    query allSections {\r\n        allSections {\r\n            id\r\n            section\r\n        }\r\n    }\r\n`;\r\n\r\nexport const STUDENT_MARK_REPORT = gql `\r\n    query studentMarkReport ($studentCode: String) {\r\n        studentMarkReport (studentCode: $studentCode) {\r\n            school\r\n            textTop\r\n            textMid0\r\n            textMid1\r\n            textMid2\r\n            textMid3\r\n            textMid4\r\n            textMid5\r\n            textMid6\r\n            textMid7\r\n            textBottom\r\n            studentPhoto\r\n            studentCode\r\n        }\r\n    }\r\n`;\r\n\r\nexport const STUDENT_MARK_REPORT_SECTION = gql `\r\n    query studentMarkReportSection ($section: Int) {\r\n        studentMarkReportSection (section: $section) {\r\n            school\r\n            textTop\r\n            textMid0\r\n            textMid1\r\n            textMid2\r\n            textMid3\r\n            textMid4\r\n            textMid5\r\n            textMid6\r\n            textMid7\r\n            textBottom\r\n            studentPhoto\r\n            studentCode\r\n        }\r\n    }\r\n`;\r\n\r\nexport const STUDENT_SCHOOL_YEAR = gql `\r\n    query studentSchoolyear ($student: Int) {\r\n        studentSchoolyear (student: $student) {\r\n            id\r\n            schoolyear\r\n            season\r\n            semesterCode\r\n            startDate\r\n            endDate\r\n        }\r\n    }\r\n`;\r\n\r\nexport const STUDENT_MARK_REL = gql `\r\n    query studentMarkRel ($student: Int, $schoolyear: Int) {\r\n        studentMarkRel (student: $student, schoolyear: $schoolyear) {\r\n            id\r\n            mark {\r\n                student {\r\n                    studentCode \r\n                }\r\n                markBoard {\r\n                    subject {\r\n                        id\r\n                        subject\r\n                        subjectCode\r\n                        credit\r\n                    }\r\n                    schoolyear {\r\n                        schoolyear \r\n                        season\r\n                    }\r\n                }\r\n            }\r\n            markSetting {\r\n                name\r\n                percentage\r\n            }\r\n            markVal\r\n        }\r\n    }\r\n`;\r\n\r\nexport const MARK_PERCENTAGE = gql `\r\n    query markPercentage ($percentage: Int) {\r\n        markPercentage (percentage: $percentage) {\r\n            type\r\n            percentage\r\n            diam\r\n        }\r\n    }\r\n`;\r\n\r\nexport const MARK_CON = gql `\r\n    query markCon ($subject: Int!, $schoolyear: Int!, $student: Int!) {\r\n        markCon (subject: $subject, schoolyear: $schoolyear, student: $student) {\r\n            percentage\r\n            type\r\n            diam\r\n        }\r\n    }\r\n`;\r\n\r\nexport const MARK_CON_SUBJECT = gql `\r\n    query markconSubject ($schoolyear: Int!, $section: Int!) {\r\n        markconSubject (schoolyear: $schoolyear, section: $section) {\r\n            subjectId\r\n            subject\r\n            subjectCode\r\n            subjectCredit\r\n        }\r\n    }\r\n`;\r\n\r\nexport const MARK_CON_STUDENT = gql `\r\n    query markconStudent ($section: Int!) {\r\n        markconStudent (section: $section) {\r\n            studentId\r\n            familyName\r\n            name\r\n            studentCode\r\n            registerNo\r\n        }\r\n    }\r\n`;\r\n\r\nexport const MARK_CON_QUERY = gql`\r\n    query markConQuery ($section: Int!, $schoolyear: Int!) {\r\n        markconSubject (schoolyear: $schoolyear, section: $section) {\r\n            subjectId \r\n            subject\r\n            subjectCode\r\n            subjectCredit\r\n        }\r\n        markconStudent (section: $section) {\r\n            studentId\r\n            familyName\r\n            name\r\n            studentCode\r\n            registerNo\r\n        }\r\n    },\r\n`;\r\n\r\nexport const MARK_CON_TEST = gql `\r\n    query markCon ($sdf: Array) {\r\n        D1934081_3: markCon(subject: 3, schoolyear: 1, student: 98150) {    \r\n            percentage    \r\n            type    \r\n            diam  \r\n        }  \r\n        D1934087_3: markCon(subject: 3, schoolyear: 1, student: 98489) { percentage    type    diam  }  \r\n        D1934076_3: markCon(subject: 3, schoolyear: 1, student: 103324) {    percentage    type    diam  }  \r\n        D1834046_3: markCon(subject: 3, schoolyear: 1, student: 98894) {    percentage    type    diam  }  \r\n        D1934077_3: markCon(subject: 3, schoolyear: 1, student: 100276) {    percentage    type    diam  }  \r\n        D1934073_3: markCon(subject: 3, schoolyear: 1, student: 104950) {    percentage    type    diam  }  \r\n        D1934089_3: markCon(subject: 3, schoolyear: 1, student: 100633) {    percentage    type    diam  }  \r\n        D1934086_3: markCon(subject: 3, schoolyear: 1, student: 100787) {    percentage    type    diam  }  \r\n        D1934098_3: markCon(subject: 3, schoolyear: 1, student: 105890) {    percentage    type    diam  }  \r\n        D1934075_3: markCon(subject: 3, schoolyear: 1, student: 101336) {    percentage    type    diam  }  \r\n        D1934071_3: markCon(subject: 3, schoolyear: 1, student: 101355) {    percentage    type    diam  }  \r\n        D1934084_3: markCon(subject: 3, schoolyear: 1, student: 101452) {    percentage    type    diam  }  \r\n        D1934090_3: markCon(subject: 3, schoolyear: 1, student: 101491) {    percentage    type    diam  }  \r\n        D1934088_3: markCon(subject: 3, schoolyear: 1, student: 102593) {    percentage    type    diam  }  \r\n        D1724120_3: markCon(subject: 3, schoolyear: 1, student: 103392) {    percentage    type    diam  }  \r\n        D1934080_3: markCon(subject: 3, schoolyear: 1, student: 104140) {    percentage    type    diam  }  \r\n        D1934079_3: markCon(subject: 3, schoolyear: 1, student: 105052) {    percentage    type    diam  }  \r\n        D1934097_3: markCon(subject: 3, schoolyear: 1, student: 105101) {    percentage    type    diam  }  \r\n        D1934103_3: markCon(subject: 3, schoolyear: 1, student: 105110) {    percentage    type    diam  }  \r\n        D1934096_3: markCon(subject: 3, schoolyear: 1, student: 105112) {    percentage    type    diam  }  \r\n        D1934074_3: markCon(subject: 3, schoolyear: 1, student: 105596) {    percentage    type    diam  }  \r\n        D1934078_3: markCon(subject: 3, schoolyear: 1, student: 105697) {    percentage    type    diam  }  \r\n        D1934094_3: markCon(subject: 3, schoolyear: 1, student: 107882) {    percentage    type    diam  }  \r\n        D1934104_3: markCon(subject: 3, schoolyear: 1, student: 107918) {    percentage    type    diam  }  \r\n        D1934101_3: markCon(subject: 3, schoolyear: 1, student: 107971) {    percentage    type    diam  }  \r\n        D1934100_3: markCon(subject: 3, schoolyear: 1, student: 108400) {    percentage    type    diam  }  \r\n        D1934093_3: markCon(subject: 3, schoolyear: 1, student: 109395) {    percentage    type    diam  } \r\n        D1934085_3: markCon(subject: 3, schoolyear: 1, student: 109445) {    percentage    type    diam  }  \r\n        D1744080_3: markCon(subject: 3, schoolyear: 1, student: 109448) {    percentage    type    diam  }  \r\n        D1934095_3: markCon(subject: 3, schoolyear: 1, student: 109996) {    percentage    type    diam  }  \r\n        D1934102_3: markCon(subject: 3, schoolyear: 1, student: 110102) {    percentage    type    diam  }  \r\n        D1934072_3: markCon(subject: 3, schoolyear: 1, student: 111723) {    percentage    type    diam  }  \r\n        D1834021_3: markCon(subject: 3, schoolyear: 1, student: 95960) {    percentage    type    diam  } \r\n        D1934091_3: markCon(subject: 3, schoolyear: 1, student: 105549) {    percentage    type    diam  }  \r\n        D1934092_3: markCon(subject: 3, schoolyear: 1, student: 111134) {    percentage    type    diam  }  \r\n        D1934083_3: markCon(subject: 3, schoolyear: 1, student: 111971) {    percentage    type    diam  }\r\n    }\r\n`;\r\nexport const ALL_STUDENTS_REPORT = gql`\r\n    query allStudentsReport {\r\n        allStudentsReport {\r\n            id\r\n            user {\r\n                id\r\n                username\r\n                email\r\n            }\r\n            studentCode\r\n            surname\r\n            familyName\r\n            name\r\n            religion\r\n            registerNo\r\n            nationality\r\n            state\r\n            photo\r\n            phone\r\n            address\r\n            activity {\r\n                id\r\n                name\r\n            }\r\n            joinDate\r\n            sex\r\n            birthdate\r\n            classtime {\r\n                id\r\n                name\r\n            }\r\n            birthCity {\r\n                id\r\n                name\r\n            }\r\n            birthDistrict {\r\n                id\r\n                name\r\n            }\r\n            status {\r\n                id\r\n                name\r\n            }\r\n            statusExtra {\r\n                id\r\n                name\r\n            }\r\n            school {\r\n                id\r\n                name\r\n            }\r\n            classes {\r\n                id\r\n                classes\r\n            }\r\n            section {\r\n                id\r\n                section\r\n            }\r\n            program {\r\n                id\r\n                program\r\n            }\r\n            joinSchoolyear {\r\n                id\r\n                schoolyear\r\n            }\r\n        }\r\n    }\r\n`;","import { useQuery } from '@apollo/client';\r\nimport { Card, Col, Divider, Image, Result, Row } from 'antd';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { REPORT_IMAGE_URL } from 'constants/Url';\r\nimport { STUDENT_REPORT } from 'graphql/report';\r\nimport React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst StudentReport = () => {\r\n\r\n    const { slug } = useParams();\r\n    const [data, setData] = useState({});\r\n\r\n    const { loading, error } = useQuery(STUDENT_REPORT, {\r\n        variables: { studentCode: slug },\r\n        onCompleted: data => {\r\n            setData(data.studentReport);\r\n        }\r\n    });\r\n\r\n    if (error && error.message === 'Student matching query does not exist.') {\r\n        return(\r\n            <Result \r\n                status=\"404\"\r\n                title=\"Илэрц олдсонгүй\"\r\n                subTitle=\"Уг суралцагч олдсонгүй\"\r\n            />\r\n        )\r\n    }\r\n\r\n    if (loading) {\r\n        return <Loading cover='content' />\r\n    }\r\n\r\n\treturn (\r\n        <Card \r\n            style={{ fontFamily: 'Times New Roman', lineHeight: `17px`, color: 'black' }} \r\n            className=\"aaa\" \r\n            bordered={false}\r\n        >\r\n            <Row gutter={[16, 16]}>\r\n                <Col span={8} className='text-right' >\r\n                    <Image\r\n                        style={{ maxHeight: '100px' }}\r\n                        src='/img/logo-white.png' \r\n                        preview={false}\r\n                    />\r\n                </Col>\r\n                <Col span={8} >\r\n                    <div className='text-center' >\r\n                        <b style={{ fontSize: '32px' }} >{data.school}</b>\r\n                        <div className='text-center mt-3' style={{ fontSize: '11px', lineHeight: `10px` }} dangerouslySetInnerHTML={{ __html: data.textTop }} />\r\n                    </div>\r\n                </Col>\r\n                <Col span={8} className='text-left'>\r\n                    <Image\r\n                        style={{ maxHeight: '100px'}}\r\n                        src={REPORT_IMAGE_URL+data.studentPhoto} \r\n                        preview={false}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={24} className='text-center' >\r\n                    <b >Суралцагчийн тодорхойлолт</b>\r\n                    <div style={{ fontSize: '15px' }} dangerouslySetInnerHTML={{ __html: data.textMid }} />\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <Row gutter={[16, 16]}>\r\n                <Col span={24}>\r\n                    <div className='text-center' dangerouslySetInnerHTML={{ __html: data.textBottom }} />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={24} className='text-center'>\r\n                    <Image \r\n                        src={`https://chart.googleapis.com/chart?chs=177x177&cht=qr&chl=http%3A%2F%2F${window.location.hostname}%2Fstudent-report%2F${data.studentCode}&chld=H&choe=UTF-8`} \r\n                        preview={false}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n\t)\r\n}\r\n\r\nexport default StudentReport\r\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nvar attributes = \"accept acceptCharset accessKey action allowFullScreen allowTransparency\\n    alt async autoComplete autoFocus autoPlay capture cellPadding cellSpacing challenge\\n    charSet checked classID className colSpan cols content contentEditable contextMenu\\n    controls coords crossOrigin data dateTime default defer dir disabled download draggable\\n    encType form formAction formEncType formMethod formNoValidate formTarget frameBorder\\n    headers height hidden high href hrefLang htmlFor httpEquiv icon id inputMode integrity\\n    is keyParams keyType kind label lang list loop low manifest marginHeight marginWidth max maxLength media\\n    mediaGroup method min minLength multiple muted name noValidate nonce open\\n    optimum pattern placeholder poster preload radioGroup readOnly rel required\\n    reversed role rowSpan rows sandbox scope scoped scrolling seamless selected\\n    shape size sizes span spellCheck src srcDoc srcLang srcSet start step style\\n    summary tabIndex target title type useMap value width wmode wrap\";\nvar eventsName = \"onCopy onCut onPaste onCompositionEnd onCompositionStart onCompositionUpdate onKeyDown\\n    onKeyPress onKeyUp onFocus onBlur onChange onInput onSubmit onClick onContextMenu onDoubleClick\\n    onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown\\n    onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp onSelect onTouchCancel\\n    onTouchEnd onTouchMove onTouchStart onScroll onWheel onAbort onCanPlay onCanPlayThrough\\n    onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata\\n    onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting onLoad onError\";\nvar propList = \"\".concat(attributes, \" \").concat(eventsName).split(/[\\s\\n]+/);\n/* eslint-enable max-len */\nvar ariaPrefix = 'aria-';\nvar dataPrefix = 'data-';\nfunction match(key, prefix) {\n  return key.indexOf(prefix) === 0;\n}\n/**\n * Picker props from exist props with filter\n * @param props Passed props\n * @param ariaOnly boolean | { aria?: boolean; data?: boolean; attr?: boolean; } filter config\n */\nexport default function pickAttrs(props) {\n  var ariaOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var mergedConfig;\n  if (ariaOnly === false) {\n    mergedConfig = {\n      aria: true,\n      data: true,\n      attr: true\n    };\n  } else if (ariaOnly === true) {\n    mergedConfig = {\n      aria: true\n    };\n  } else {\n    mergedConfig = _objectSpread({}, ariaOnly);\n  }\n  var attrs = {};\n  Object.keys(props).forEach(function (key) {\n    if (\n    // Aria\n    mergedConfig.aria && (key === 'role' || match(key, ariaPrefix)) ||\n    // Data\n    mergedConfig.data && match(key, dataPrefix) ||\n    // Attr\n    mergedConfig.attr && propList.includes(key)) {\n      attrs[key] = props[key];\n    }\n  });\n  return attrs;\n}"],"names":["REPORT_IMAGE_URL","STUDENT_REPORT","gql","STUDENT_REPORT_SECTION","MARK_CON","MARK_CON_SUBJECT","MARK_CON_STUDENT","ALL_STUDENTS_REPORT","slug","useParams","useState","data","setData","useQuery","variables","studentCode","onCompleted","studentReport","loading","error","message","status","title","subTitle","cover","style","fontFamily","lineHeight","color","className","bordered","gutter","span","maxHeight","src","preview","fontSize","school","dangerouslySetInnerHTML","__html","textTop","studentPhoto","textMid","textBottom","window","location","hostname","propList","concat","split","ariaPrefix","dataPrefix","match","key","prefix","indexOf","pickAttrs","props","mergedConfig","ariaOnly","arguments","length","undefined","aria","attr","_objectSpread","attrs","Object","keys","forEach","includes"],"sourceRoot":""}