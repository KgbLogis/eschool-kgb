{"version":3,"file":"static/js/8977.613fd6cc.chunk.js","mappings":"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","sources":["components/shared-components/FormModal/index.js","graphql/plan.js","views/app-views/plan/sub-plan/sub-plan-action-form.js","views/app-views/plan/sub-plan/index.js","views/app-views/plan/daily-plan/form.js","views/app-views/plan/daily-plan/index.js","views/app-views/plan/sub-plan/form.js","views/app-views/plan/show.js"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useState } from 'react'\r\nimport { Modal } from 'antd';\r\n\r\nconst FormModal = forwardRef(({ children, title, footer, formName = 'form', forceRender = false }, ref) => {\r\n    \r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        handleOpen() {\r\n            setIsModalVisible(true);\r\n        },\r\n        handleCancel () {\r\n            setIsModalVisible(false);\r\n        }\r\n    }));\r\n    \r\n    return (\r\n        <Modal \r\n            width={1000}\r\n            title={title} \r\n            visible={isModalVisible}\r\n            onCancel={ref.current?.handleCancel}\r\n            okText=\"Хадгалах\"\r\n            footer={footer}\r\n            cancelText=\"Болих\"\r\n            forceRender={forceRender}\r\n            okButtonProps={{form:formName, key: 'submit', htmlType: 'submit'}}\r\n        >\r\n            {children}\r\n        </Modal>\r\n    )\r\n});\r\n\r\nexport default FormModal;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ALL_PLANS = gql`\r\n    query allPlans {\r\n        allPlans {\r\n            id\r\n            section {\r\n                id\r\n                section\r\n                program {\r\n                    id\r\n                }\r\n                classes {\r\n                    classes\r\n                }\r\n            }\r\n            approvedBy {\r\n                familyName\r\n                name\r\n            }\r\n            teacher {\r\n                familyName\r\n                name\r\n            }\r\n            startDate\r\n            endDate\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_PLAN = gql`\r\n    mutation createPlan ($endDate: Date, $section: ID, $startDate: Date) {\r\n        createPlan (endDate: $endDate, section: $section, startDate: $startDate) {\r\n            plan {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const PLAN_BY_ID = gql`\r\n    query planById ($id: ID!) {\r\n        planById (id: $id) {\r\n            id\r\n            section {\r\n                section\r\n                school {\r\n                    name\r\n                }\r\n                classes {\r\n                    classes\r\n                    program {\r\n                        program\r\n                    }\r\n                }\r\n            }\r\n            approvedBy {\r\n                familyName\r\n                name\r\n            }\r\n            teacher {\r\n                familyName\r\n                name\r\n            }\r\n            startDate\r\n            endDate\r\n        }\r\n    }\r\n`\r\n\r\nexport const UPDATE_PLAN = gql`\r\n    mutation updatePlan ($id: ID, $endDate: Date, $section: ID, $startDate: Date) {\r\n        updatePlan (id: $id, endDate: $endDate, section: $section, startDate: $startDate) {\r\n            plan {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_PLAN = gql`\r\n    mutation deletePlan ($id: ID) {\r\n        deletePlan (id: $id) {\r\n            plan {\r\n                startDate\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const ALL_DAILY_PLANS = gql`\r\n    query allDailyPlans ($plan: ID!) {\r\n        allDailyPlans (plan: $plan) {\r\n            id\r\n            action\r\n            monday\r\n            tuesday\r\n            wednesday\r\n            thursday\r\n            friday\r\n            isAllDay\r\n            allDay\r\n            approvedBy {\r\n                familyName\r\n                name\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_DAILY_PLAN = gql`\r\n    mutation createDailyPlan (\r\n        $action: String\r\n        $allDay: String = \".\"\r\n        $friday: String = \".\"\r\n        $isAllDay: Boolean\r\n        $monday: String = \".\"\r\n        $plan: ID\r\n        $thursday: String = \".\"\r\n        $tuesday: String = \".\"\r\n        $wednesday: String = \".\"\r\n    ) {\r\n        createDailyPlan (\r\n            action: $action\r\n            allDay: $allDay\r\n            friday: $friday\r\n            isAllDay: $isAllDay\r\n            monday: $monday\r\n            plan: $plan\r\n            thursday: $thursday\r\n            tuesday: $tuesday\r\n            wednesday: $wednesday\r\n        ) {\r\n            dailyPlan {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const UPDATE_DAILY_PLAN = gql`\r\n    mutation updateDailyPlan (\r\n        $action: String\r\n        $allDay: String = \"\"\r\n        $friday: String = \"\"\r\n        $isAllDay: Boolean\r\n        $monday: String = \"\"\r\n        $id: ID\r\n        $thursday: String = \"\"\r\n        $tuesday: String = \"\"\r\n        $wednesday: String = \"\"\r\n    ) {\r\n        updateDailyPlan (\r\n            action: $action\r\n            allDay: $allDay\r\n            friday: $friday\r\n            isAllDay: $isAllDay\r\n            monday: $monday\r\n            id: $id\r\n            thursday: $thursday\r\n            tuesday: $tuesday\r\n            wednesday: $wednesday\r\n        ) {\r\n            dailyPlan {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_DAILY_PLAN = gql`\r\n    mutation deleteDailyPlan ($id: ID) {\r\n        deleteDailyPlan (id: $id) {\r\n            dailyPlan {\r\n                monday\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const ALL_SUB_PLANS = gql`\r\n    query allSubPlans ($plan: ID!) {\r\n        allSubPlans (plan: $plan) {\r\n            id\r\n            subjectName\r\n            content\r\n            goal\r\n            teachingMethods\r\n            consumables\r\n            walk\r\n            running\r\n            jumping\r\n            shoot\r\n            game\r\n            hand\r\n            body\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_SUB_PLAN = gql`\r\n    mutation createSubPlan(\r\n        $plan: ID\r\n        $subjectName: String\r\n        $consumables: String\r\n        $content: String\r\n        $goal: String\r\n        $teachingMethods: String\r\n        $hand: String = \"\"\r\n        $jumping: String = \"\"\r\n        $running: String = \"\"\r\n        $shoot: String = \"\"\r\n        $body: String = \"\"\r\n        $walk: String = \"\"\r\n        $game: String = \"\"\r\n    ) {\r\n        createSubPlan (\r\n            body: $body\r\n            consumables: $consumables\r\n            content: $content\r\n            goal: $goal\r\n            hand: $hand\r\n            jumping: $jumping\r\n            plan: $plan\r\n            running: $running\r\n            shoot: $shoot\r\n            subjectName: $subjectName\r\n            teachingMethods: $teachingMethods\r\n            walk: $walk\r\n            game: $game\r\n        ) {\r\n            subPlan {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const UPDATE_SUB_PLAN = gql`\r\n    mutation updateSubPlan(\r\n        $id: ID\r\n        $subjectName: String\r\n        $consumables: String\r\n        $teachingMethods: String\r\n        $content: String\r\n        $goal: String = \"\"\r\n        $hand: String = \"\"\r\n        $jumping: String = \"\"\r\n        $running: String = \"\"\r\n        $shoot: String = \"\"\r\n        $body: String = \"\"\r\n        $walk: String = \"\"\r\n        $game: String = \"\"\r\n    ) {\r\n        updateSubPlan (\r\n            body: $body\r\n            consumables: $consumables\r\n            content: $content\r\n            goal: $goal\r\n            hand: $hand\r\n            jumping: $jumping\r\n            id: $id\r\n            running: $running\r\n            shoot: $shoot\r\n            subjectName: $subjectName\r\n            teachingMethods: $teachingMethods\r\n            walk: $walk\r\n            game: $game\r\n        ) {\r\n            subPlan {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_SUB_PLAN = gql`\r\n    mutation deleteSubPlan ($id: ID) {\r\n        deleteSubPlan (id: $id) {\r\n            subPlan {\r\n                walk\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const ALL_SUB_PLAN_ACTIONS = gql`\r\n    query allSubPlanActions ($subPlan: ID!) {\r\n        allSubPlanActions (subPlan: $subPlan) {\r\n            id\r\n            action\r\n            teacherActivity\r\n            studentActivity\r\n            subPlan {\r\n                id\r\n            }\r\n            approvedBy {\r\n                familyName\r\n                name\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_SUB_PLAN_ACTION = gql`\r\n    mutation createSubPlanAction (\r\n        $action: String\r\n        $studentActivity: String\r\n        $subPlan: ID\r\n        $teacherActivity: String\r\n    ) {\r\n        createSubPlanAction (\r\n            action: $action\r\n            studentActivity: $studentActivity\r\n            subPlan: $subPlan\r\n            teacherActivity: $teacherActivity\r\n        ) {\r\n            subPlanAction {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const UPDATE_SUB_PLAN_ACTION = gql`\r\n    mutation updateSubPlanAction (\r\n        $action: String\r\n        $studentActivity: String\r\n        $id: ID\r\n        $teacherActivity: String\r\n    ) {\r\n        updateSubPlanAction (\r\n            action: $action\r\n            studentActivity: $studentActivity\r\n            id: $id\r\n            teacherActivity: $teacherActivity\r\n        ) {\r\n            subPlanAction {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_SUB_PLAN_ACTION = gql`\r\n    mutation deleteSubPlanAction ($id: ID) {\r\n        deleteSubPlanAction (id: $id) {\r\n            subPlanAction {\r\n                action\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const APPROVE_PLAN = gql`\r\n    mutation approvePlan ($plan: ID) {\r\n        approvePlan (plan: $plan) {\r\n            plan {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const APPROVE_DAILY_PLAN = gql`\r\n    mutation approveDailyPlan ($dailyPlan: ID, $isApproved: Boolean) {\r\n        approveDailyPlan (dailyPlan: $dailyPlan, isApproved: $isApproved) {\r\n            dailyPlan {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const APPROVE_SUB_PLAN_ACTION = gql`\r\n    mutation approveSubPlanAction ($subPlanAction: ID, $isApproved: Boolean) {\r\n        approveSubPlanAction (subPlanAction: $subPlanAction, isApproved: $isApproved) {\r\n            subPlanAction {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`","import React, { useEffect } from 'react';\r\nimport { Form, Input, message, Spin } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ALL_SUB_PLAN_ACTIONS, CREATE_SUB_PLAN_ACTION, UPDATE_SUB_PLAN_ACTION } from 'graphql/plan';\r\nimport BraftEditor from 'braft-editor';\r\n\r\nfunction SubPlanActionForm ({ closeModal, selectedData, subPlan }) {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const [create, { loading: createLoading }] = useMutation(CREATE_SUB_PLAN_ACTION, {\r\n        refetchQueries: [{\r\n            query: ALL_SUB_PLAN_ACTIONS,\r\n            variables: { subPlan: subPlan }\r\n        }],\r\n        onCompleted: data => {\r\n            closeModal();\r\n            message.success(\"Амжилттай хадгаллаа\")\r\n        }\r\n    })\r\n\r\n    const [update, { loading: updateLoading }] = useMutation(UPDATE_SUB_PLAN_ACTION, {\r\n        refetchQueries: [{\r\n            query: ALL_SUB_PLAN_ACTIONS,\r\n            variables: { subPlan: subPlan }\r\n        }],\r\n        onCompleted: data => {\r\n            closeModal();\r\n            message.success(\"Амжилттай хадгаллаа\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (selectedData.id) {\r\n            const formData ={\r\n                action: selectedData.action,\r\n                teacherActivity: BraftEditor.createEditorState(selectedData.teacherActivity),\r\n                studentActivity: BraftEditor.createEditorState(selectedData.studentActivity)\r\n\t\t\t}\r\n            form.setFieldsValue(formData);\r\n        } else {\r\n            form.resetFields()\r\n        }\r\n    }, [selectedData, form])\r\n    \r\n\r\n    const onFinish = values => {\r\n        values.subPlan= subPlan\r\n        values.teacherActivity = values.teacherActivity.toHTML();\r\n        values.studentActivity = values.studentActivity.toHTML();\r\n        if (selectedData.id) {\r\n            values.id = selectedData.id\r\n            update({ variables: values })\r\n        } else {\r\n            create({ variables: values })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Spin spinning={createLoading || updateLoading} tip=\"Ачааллаж байна...\">\r\n            <Form  \r\n                id=\"subPlanActionForm\"\r\n                layout={'vertical'}\r\n                form={form}\r\n                name=\"subPlanActionForm\" \r\n                onFinish={onFinish}\r\n            >\r\n                <Form.Item name=\"action\" label={`Үйл ажиллагаа`} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: <IntlMessage id=\"form.required\" />\r\n                    },\r\n                    {\r\n                        max: 100,\r\n                        message: <IntlMessage id=\"form.max\" />\r\n                    }\r\n                ]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"teacherActivity\" label={`Багшийн дэмжлэг, чиглүүлэг`} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: <IntlMessage id=\"form.required\" />\r\n                    }\r\n                ]}>\r\n                    <BraftEditor\r\n                        className='border rounded-2'\r\n                        language=\"en\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item name=\"studentActivity\" label={`Хүүхдийн үйл ажиллагаа`} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: <IntlMessage id=\"form.required\" />\r\n                    }\r\n                ]}>\r\n                    <BraftEditor\r\n                        className='border rounded-2'\r\n                        language=\"en\"\r\n                    />\r\n                </Form.Item>\r\n            </Form>\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport default SubPlanActionForm","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { Checkbox, message, Modal } from 'antd';\r\nimport { DeleteTwoTone } from '@ant-design/icons';\r\nimport { PlusCircleIcon } from '@heroicons/react/outline'\r\nimport { ALL_SUB_PLAN_ACTIONS, DELETE_SUB_PLAN_ACTION, DELETE_SUB_PLAN, ALL_SUB_PLANS, APPROVE_SUB_PLAN_ACTION } from 'graphql/plan';\r\nimport FormModal from 'components/shared-components/FormModal';\r\nimport SubPlanActionForm from './sub-plan-action-form';\r\nimport { classNames, getSubjectNameByValue } from 'utils';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst { confirm } = Modal\r\n\r\nconst SubPlanActionsRow = ({ onActionRowClick, item, onDelete, permissions }) => {\r\n\r\n    const [points, setPoints] = useState({ x: 0, y: 0 });\r\n    const [show, setShow] = useState(false);\r\n\r\n    const contextMenuRef = useRef()\r\n\r\n    const [approveSubPlanAction, { loading: approveSubPlanActionLoading }] = useMutation(APPROVE_SUB_PLAN_ACTION, {\r\n        refetchQueries: [{\r\n            query: ALL_SUB_PLAN_ACTIONS,\r\n            variables: { subPlan: item.subPlan.id }\r\n        }]\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        function onClickOutside() {\r\n            setShow(false)\r\n        }\r\n\r\n        const handleClickOutside = (event) => {\r\n            if (contextMenuRef.current && !contextMenuRef.current.contains(event.target)) {\r\n                onClickOutside && onClickOutside();\r\n            }\r\n        };\r\n        document.addEventListener('contextmenu', handleClickOutside, true);\r\n        document.addEventListener('click', handleClickOutside, true);\r\n        return () => {\r\n            document.removeEventListener('contextmenu', handleClickOutside, true);\r\n            document.addEventListener('click', handleClickOutside, true);\r\n        };\r\n    }, []);\r\n\r\n    function onCheckBoxChange(e) {\r\n        approveSubPlanAction({ variables: { subPlanAction: item.id, isApproved: e.target.checked } });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr\r\n                className=\"border-b hover:cursor-pointer break-after-auto break-inside-avoid\"\r\n                onContextMenuCapture={(e) => {\r\n                    e.preventDefault();\r\n                    if (permissions.delete) {\r\n                        setShow(true);\r\n                        setPoints({ x: e.pageX, y: e.pageY });\r\n                    }\r\n                }}\r\n                onClick={() => onActionRowClick(item)}\r\n            >\r\n                <td className=\"text-sm text-gray-900 border-r print:break-before-auto\">{item.action}</td>\r\n                <td className=\"text-sm text-gray-900 border-r print:break-before-auto\" dangerouslySetInnerHTML={{ __html: item.teacherActivity }} />\r\n                <td className=\"text-sm text-gray-900 border-r print:break-before-auto\" dangerouslySetInnerHTML={{ __html: item.studentActivity }} />\r\n                <td\r\n                    className=\"text-sm text-gray-900 border-r print:hidden\"\r\n                    onClick={e => permissions.approve_plan && (e && e.stopPropagation) && e.stopPropagation()}\r\n                >\r\n                    {permissions.approve_plan ?\r\n                        <Checkbox\r\n                            onChange={e => onCheckBoxChange(e)}\r\n                            disabled={approveSubPlanActionLoading}\r\n                            checked={item.approvedBy ? true : false}\r\n                        >\r\n                            {item.approvedBy ? 'Баталсан' : 'Батлагдаагүй'}\r\n                        </Checkbox>\r\n                        :\r\n                        <span>{item.approvedBy ? 'Баталсан' : 'Батлагдаагүй'}</span>\r\n                    }\r\n                </td>\r\n            </tr>\r\n            {show &&\r\n                <tr\r\n                    ref={contextMenuRef}\r\n                    className={classNames(show ? 'absolute' : 'hidden', ' z-10')}\r\n                    style={{\r\n                        top: points.y,\r\n                        left: points.x\r\n                    }}\r\n                >\r\n                    <td className=\"bg-white w-60 border border-gray-300 rounded-lg flex flex-col text-sm py-4 px-2 text-gray-500\">\r\n                        <div className=\"flex py-1 px-2 rounded hover:bg-background hover:cursor-pointer\" onClick={() => onDelete(item.id)}>\r\n                            <div className=\"w-8\">\r\n                                <DeleteTwoTone twoToneColor=\"#eb2f96\" key=\"delete\" />\r\n                            </div>\r\n                            <div>Устгах</div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst Index = ({ data, permissions, teacher, onClick }) => {\r\n\r\n    const { id } = useParams()\r\n\r\n    const [selectedData, setSelectedData] = useState({})\r\n    const [points, setPoints] = useState({ x: 0, y: 0 });\r\n    const [show, setShow] = useState(false);\r\n\r\n    const subPlanActionModalRef = useRef()\r\n    const contextMenuRef = useRef()\r\n\r\n    const { data: actions, refetch } = useQuery(ALL_SUB_PLAN_ACTIONS, {\r\n        variables: { subPlan: data.id }\r\n    })\r\n\r\n    const [deleteSubPlan] = useMutation(DELETE_SUB_PLAN, {\r\n        refetchQueries: [{\r\n            query: ALL_SUB_PLANS,\r\n            variables: { plan: id }\r\n        }],\r\n        onCompleted: data => {\r\n            message.success(\"Амжилттай устлаа\")\r\n        }\r\n    })\r\n\r\n    const [deletePlanAction] = useMutation(DELETE_SUB_PLAN_ACTION, {\r\n        onCompleted: data => {\r\n            message.success(\"Амжилттай устлаа\")\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    function onDelete(id) {\r\n        confirm({\r\n            title: 'Устгах уу?',\r\n            okText: 'Устгах',\r\n            okType: 'danger',\r\n            cancelText: 'Болих',\r\n            onOk() {\r\n                deletePlanAction({ variables: { id: id } })\r\n            },\r\n        });\r\n    }\r\n\r\n    function onDeleteSubPlan(id) {\r\n        confirm({\r\n            title: 'Устгах уу?',\r\n            okText: 'Устгах',\r\n            okType: 'danger',\r\n            cancelText: 'Болих',\r\n            onOk() {\r\n                deleteSubPlan({ variables: { id: id } })\r\n            },\r\n        });\r\n    }\r\n\r\n    function handleCancel() {\r\n        subPlanActionModalRef.current.handleCancel()\r\n    }\r\n\r\n    function handleOpen() {\r\n        if (permissions.create) {\r\n            setSelectedData({})\r\n            subPlanActionModalRef.current.handleOpen()\r\n        }\r\n    }\r\n\r\n    function onActionRowClick(params) {\r\n        if (permissions.edit) {\r\n            setSelectedData(params)\r\n            subPlanActionModalRef.current.handleOpen()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        function onClickOutside() {\r\n            setShow(false)\r\n        }\r\n\r\n        const handleClickOutside = (event) => {\r\n            if (contextMenuRef.current && !contextMenuRef.current.contains(event.target)) {\r\n                onClickOutside && onClickOutside();\r\n            }\r\n        };\r\n        document.addEventListener('contextmenu', handleClickOutside, true);\r\n        document.addEventListener('click', handleClickOutside, true);\r\n        return () => {\r\n            document.removeEventListener('contextmenu', handleClickOutside, true);\r\n            document.addEventListener('click', handleClickOutside, true);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <FormModal ref={subPlanActionModalRef} formName=\"subPlanActionForm\">\r\n                <SubPlanActionForm\r\n                    subPlan={data.id}\r\n                    selectedData={selectedData}\r\n                    closeModal={handleCancel}\r\n                />\r\n            </FormModal>\r\n            <div\r\n                className='hover:cursor-pointer page-break'\r\n                onContextMenuCapture={(e) => {\r\n                    e.preventDefault();\r\n                    if (permissions.delete) {\r\n                        setShow(true);\r\n                        setPoints({ x: e.pageX, y: e.pageY });\r\n                    }\r\n                }}\r\n            >\r\n                <div onClick={() => onClick(data)}>\r\n                    {data.subjectName &&\r\n                        <div className='font-bold text-black whitespace-pre-line'>\r\n                            Суралцахуйн чиглэл: {getSubjectNameByValue(data.subjectName)}\r\n                        </div>\r\n                    }\r\n                    {data.content &&\r\n                        <div className='flex flex-row justify-'>\r\n                            <div className='font-bold text-black pr-1'>Агуулга:</div>\r\n                            <div dangerouslySetInnerHTML={{ __html: data.content }} />\r\n                        </div>\r\n                    }\r\n                    {data.walk &&\r\n                        <div className='font-bold text-black whitespace-pre-line'>\r\n                            Алхалт: {data.walk}\r\n                        </div>\r\n                    }\r\n                    {data.running &&\r\n                        <div className='font-bold text-black whitespace-pre-line'>\r\n                            Гүйлт: {data.running}\r\n                        </div>\r\n                    }\r\n                    {data.jumping &&\r\n                        <div className='font-bold text-black whitespace-pre-line'>\r\n                            Үсрэлт: {data.jumping}\r\n                        </div>\r\n                    }\r\n                    {data.shoot &&\r\n                        <div className='font-bold text-black whitespace-pre-line'>\r\n                            Шидэлт: {data.shoot}\r\n                        </div>\r\n                    }\r\n                    {data.game &&\r\n                        <div className='font-bold text-black whitespace-pre-line'>\r\n                            Гар хурууны хөдөлгөөнөө зохицуулна: {data.hand}\r\n                        </div>\r\n                    }\r\n                    {data.body &&\r\n                        <div className='font-bold text-black whitespace-pre-line'>\r\n                            Бие хөгжүүлэх дасгал: {data.body}\r\n                        </div>\r\n                    }\r\n                    {data.game &&\r\n                        <div className='font-bold text-black whitespace-pre-line'>\r\n                            Тоглоом: {data.game}\r\n                        </div>\r\n                    }\r\n                    {data.goal &&\r\n                        <div className='flex flex-row'>\r\n                            <div className='font-bold text-black pr-1'>Зорилго:</div>\r\n                            <div dangerouslySetInnerHTML={{ __html: data.goal }} />\r\n                        </div>\r\n                    }\r\n                    {data.teachingMethods &&\r\n                        <div className='flex flex-row'>\r\n                            <div className='font-bold text-black pr-1'>Заах арга:</div>\r\n                            <div dangerouslySetInnerHTML={{ __html: data.teachingMethods }} />\r\n                        </div>\r\n                    }\r\n                    {data.consumables &&\r\n                        <div className='flex flex-row'>\r\n                            <div className='font-bold text-black pr-1'>Хэрэглэгдэхүүн:</div>\r\n                            <div dangerouslySetInnerHTML={{ __html: data.consumables }} />\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n                <div\r\n                    ref={contextMenuRef}\r\n                    className={classNames(show ? 'absolute' : 'hidden', ' z-10')}\r\n                    style={{\r\n                        top: points.y,\r\n                        left: points.x\r\n                    }}\r\n                >\r\n                    <div className=\"bg-white w-60 border border-gray-300 rounded-lg flex flex-col text-sm py-4 px-2 text-gray-500\">\r\n                        <div className=\"flex py-1 px-2 rounded hover:bg-background hover:cursor-pointer\" onClick={() => onDeleteSubPlan(data.id)}>\r\n                            <div className=\"w-8\">\r\n                                <DeleteTwoTone twoToneColor=\"#eb2f96\" key=\"delete\" />\r\n                            </div>\r\n                            <div>Устгах</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-col\">\r\n                <div className=\"sm:-mx-6 lg:-mx-8\">\r\n                    <div className=\"py-2 inline-block min-w-full print:block sm:px-6 lg:px-8\">\r\n                        <div className=\"\">\r\n                            <table className=\"w-full table-fixed border text-center print:break-before-all\">\r\n                                <thead>\r\n                                    <tr className=\"border-b\">\r\n                                        <td className=\"px-6 py-4  text-sm font-bold text-gray-900 border-r\">Үйл ажиллагаа</td>\r\n                                        <td className=\"text-sm text-gray-900 font-bold px-6 py-4 border-r\">Багшийн дэмжлэг, чиглүүлэг</td>\r\n                                        <td className=\"text-sm text-gray-900 font-bold px-6 py-4 border-r\">Хүүхдийн үйл ажиллагаа</td>\r\n                                        <td className=\"text-sm text-gray-900 font-bold px-6 py-4 border-r print:hidden\">Төлөв</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {actions?.allSubPlanActions.map((item, index) => (\r\n                                        <SubPlanActionsRow\r\n                                            key={index}\r\n                                            item={item}\r\n                                            permissions={permissions}\r\n                                            onDelete={onDelete}\r\n                                            onActionRowClick={onActionRowClick}\r\n                                        />\r\n                                    ))}\r\n                                    {permissions.create &&\r\n                                        <tr className=\"bg-white border-b print:hidden\">\r\n                                            <td className=\"px-6 py-4  font-bold text-gray-900 border-r\" colSpan={4}>\r\n                                                <PlusCircleIcon className='h-6 m-auto hover:cursor-pointer' onClick={() => handleOpen()} />\r\n                                            </td>\r\n                                        </tr>\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='flex justify-center'>\r\n                <p className='mr-40 text-black'>Төлөвлөгөө боловсруулсан багш:</p>\r\n                <p className='text-black'>{teacher}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index","import React, { useEffect } from 'react';\r\nimport { Form, Input, message, Select, Spin } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ALL_DAILY_PLANS, CREATE_DAILY_PLAN, UPDATE_DAILY_PLAN } from 'graphql/plan';\r\nimport BraftEditor from 'braft-editor';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst { Option } = Select\r\n\r\nfunction DailyPlanForm ({ closeModal, selectedData }) {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const { id } = useParams()\r\n\r\n    const [create, { loading: createLoading }] = useMutation(CREATE_DAILY_PLAN, {\r\n        refetchQueries: [{\r\n            query: ALL_DAILY_PLANS,\r\n            variables: { plan: id }\r\n        }],\r\n        onCompleted: data => {\r\n            closeModal();\r\n            message.success(\"Амжилттай хадгаллаа\")\r\n        }\r\n    })\r\n\r\n    const [update, { loading: updateLoading }] = useMutation(UPDATE_DAILY_PLAN, {\r\n        refetchQueries: [{\r\n            query: ALL_DAILY_PLANS,\r\n            variables: { plan: id }\r\n        }],\r\n        onCompleted: data => {\r\n            closeModal();\r\n            message.success(\"Амжилттай хадгаллаа\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (selectedData.id) {\r\n            const formData = {\r\n                action: selectedData.action,\r\n                isAllDay: selectedData.isAllDay,\r\n                ...( selectedData.allDay ?\r\n                        {\r\n                            allDay: BraftEditor.createEditorState(selectedData.allDay)\r\n                        }\r\n                    :\r\n                        {\r\n                            monday: BraftEditor.createEditorState(selectedData.monday),\r\n                            tuesday: BraftEditor.createEditorState(selectedData.tuesday),\r\n                            wednesday: BraftEditor.createEditorState(selectedData.wednesday),\r\n                            thursday: BraftEditor.createEditorState(selectedData.thursday),\r\n                            friday: BraftEditor.createEditorState(selectedData.friday)\r\n                        }\r\n                )\r\n\t\t\t}\r\n            form.setFieldsValue(formData);\r\n        } else {\r\n            form.resetFields()\r\n        }\r\n    }, [selectedData, form])\r\n    \r\n\r\n    const onFinish = values => {\r\n        values.plan = id\r\n        if (values.isAllDay) {\r\n            values.allDay = values.allDay.toHTML();\r\n        } else{\r\n            values.monday = values.monday.toHTML();\r\n            values.tuesday = values.tuesday.toHTML();\r\n            values.wednesday = values.wednesday.toHTML();\r\n            values.thursday = values.thursday.toHTML();\r\n            values.friday = values.friday.toHTML();\r\n        }\r\n        if (selectedData.id) {\r\n            values.id = selectedData.id\r\n            update({ variables: values })\r\n        } else {\r\n            create({ variables: values })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Spin spinning={createLoading || updateLoading} tip=\"Ачааллаж байна...\">\r\n            <Form  \r\n                id=\"dailyPlanForm\"\r\n                layout={'vertical'}\r\n                form={form}\r\n                name=\"dailyPlanForm\" \r\n                onFinish={onFinish}\r\n            >\r\n                <Form.Item name=\"action\" label={'Үйл ажиллагаа'} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: <IntlMessage id=\"form.required\" />\r\n                    },\r\n                    {\r\n                        max: 50,\r\n                        message: <IntlMessage id=\"form.max\" />\r\n                    }\r\n                ]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"isAllDay\" label={<IntlMessage id=\"isAllDay\" />} rules={[\r\n                    {\r\n                        required: true,\r\n                        message: <IntlMessage id=\"form.required\" />\r\n                    }\r\n                ]}>\r\n                    <Select>\r\n                        <Option value={true}>Бүх өдөр</Option>\r\n                        <Option value={false}>Өдөр өдрөөр</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    noStyle\r\n                    shouldUpdate={(prevValues, currentValues) => prevValues.isAllDay !== currentValues.isAllDay}\r\n                >\r\n                {({ getFieldValue }) =>\r\n                    getFieldValue('isAllDay') === true ? (\r\n                        <Form.Item name=\"allDay\" label={<IntlMessage id=\"allDay\" />} rules={[\r\n                            {\r\n                                required: true,\r\n                                message: <IntlMessage id=\"form.required\" />\r\n                            },\r\n                        ]}>\r\n                            <BraftEditor\r\n                                className='border rounded-2'\r\n                                language=\"en\"\r\n                            />\r\n                        </Form.Item>\r\n                    ) : \r\n                    <>\r\n                        <Form.Item name=\"monday\" label={<IntlMessage id=\"monday\" />} rules={[\r\n                            {\r\n                                required: true,\r\n                                message: <IntlMessage id=\"form.required\" />\r\n                            },\r\n                        ]}>\r\n                            <BraftEditor\r\n                                className='border rounded-2'\r\n                                language=\"en\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"tuesday\" label={<IntlMessage id=\"tuesday\" />} rules={[\r\n                            {\r\n                                required: true,\r\n                                message: <IntlMessage id=\"form.required\" />\r\n                            },\r\n                        ]}>\r\n                            <BraftEditor\r\n                                className='border rounded-2'\r\n                                language=\"en\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"wednesday\" label={<IntlMessage id=\"wednesday\" />} rules={[\r\n                            {\r\n                                required: true,\r\n                                message: <IntlMessage id=\"form.required\" />\r\n                            },\r\n                        ]}>\r\n                            <BraftEditor\r\n                                className='border rounded-2'\r\n                                language=\"en\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"thursday\" label={<IntlMessage id=\"thursday\" />} rules={[\r\n                            {\r\n                                required: true,\r\n                                message: <IntlMessage id=\"form.required\" />\r\n                            },\r\n                        ]}>\r\n                            <BraftEditor\r\n                                className='border rounded-2'\r\n                                language=\"en\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"friday\" label={<IntlMessage id=\"friday\" />} rules={[\r\n                            {\r\n                                required: true,\r\n                                message: <IntlMessage id=\"form.required\" />\r\n                            },\r\n                        ]}>\r\n                            <BraftEditor\r\n                                className='border rounded-2'\r\n                                language=\"en\"\r\n                            />\r\n                        </Form.Item>\r\n                    </>\r\n                }\r\n                </Form.Item>\r\n            </Form>\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport default DailyPlanForm","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useMutation } from '@apollo/client';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ALL_DAILY_PLANS, APPROVE_DAILY_PLAN, DELETE_DAILY_PLAN } from 'graphql/plan';\r\nimport { DeleteTwoTone } from '@ant-design/icons';\r\nimport { Checkbox, message, Modal } from 'antd';\r\nimport { PlusCircleIcon } from '@heroicons/react/outline';\r\nimport FormModal from 'components/shared-components/FormModal';\r\nimport DailyPlanForm from './form';\r\n\r\nconst { confirm } = Modal\r\n\r\nconst DailyPlanRow = ({ onRowClick, item, permissions }) => {\r\n\r\n    const [points, setPoints] = useState({ x: 0, y: 0 });\r\n    const [show, setShow] = useState(false);\r\n\r\n    const contextMenuRef = useRef()\r\n\r\n    const { id } = useParams()\r\n\r\n    const [deleteDailyPlan] = useMutation(DELETE_DAILY_PLAN, {\r\n        refetchQueries: [{\r\n            query: ALL_DAILY_PLANS,\r\n            variables: { plan: id }\r\n        }],\r\n        onCompleted: data => {\r\n            message.success(\"Амжилттай устлаа\")\r\n        }\r\n    })\r\n\r\n    const [approveDailyPlan, { loading: approveDailyPlanLoading }] = useMutation(APPROVE_DAILY_PLAN, {\r\n        refetchQueries: [{\r\n            query: ALL_DAILY_PLANS,\r\n            variables: { plan: id }\r\n        }]\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        function onClickOutside() {\r\n            setShow(false)\r\n        }\r\n\r\n        const handleClickOutside = (event) => {\r\n            if (contextMenuRef.current && !contextMenuRef.current.contains(event.target)) {\r\n                onClickOutside && onClickOutside();\r\n            }\r\n        };\r\n        document.addEventListener('contextmenu', handleClickOutside, true);\r\n        document.addEventListener('click', handleClickOutside, true);\r\n        return () => {\r\n            document.removeEventListener('contextmenu', handleClickOutside, true);\r\n            document.addEventListener('click', handleClickOutside, true);\r\n        };\r\n    }, []);\r\n\r\n    function onDeleteDailyPlan(id) {\r\n        confirm({\r\n            title: 'Устгах уу?',\r\n            okText: 'Устгах',\r\n            okType: 'danger',\r\n            cancelText: 'Болих',\r\n            onOk() {\r\n                deleteDailyPlan({ variables: { id: id } })\r\n            },\r\n        });\r\n    }\r\n\r\n    function onCheckBoxChange(e) {\r\n        approveDailyPlan({ variables: { dailyPlan: item.id, isApproved: e.target.checked } });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr\r\n                className=\"border-b hover:cursor-pointer break-after-auto break-inside-avoid\"\r\n                onContextMenuCapture={(e) => {\r\n                    e.preventDefault();\r\n                    if (permissions.delete) {\r\n                        setShow(true);\r\n                        setPoints({ x: e.pageX, y: e.pageY });\r\n                    }\r\n                }}\r\n                onClick={() => onRowClick(item)}\r\n            >\r\n                <td className=\"text-sm text-gray-900 border-r print:break-before-auto\">{item.action}</td>\r\n                {item.isAllDay ?\r\n                    <>\r\n                        <td\r\n                            className=\"text-sm text-gray-900 border-r print:break-before-auto\"\r\n                            dangerouslySetInnerHTML={{ __html: item.allDay }}\r\n                            colSpan={5}\r\n                        />\r\n                        <td\r\n                            className=\"text-sm text-gray-900 border-r print:hidden\"\r\n                            onClick={e => permissions.approve_plan && (e && e.stopPropagation) && e.stopPropagation()}\r\n                        >\r\n                            {permissions.approve_plan ?\r\n                                <Checkbox\r\n                                    onChange={e => onCheckBoxChange(e)}\r\n                                    disabled={approveDailyPlanLoading}\r\n                                    checked={item.approvedBy ? true : false}\r\n                                >\r\n                                    {item.approvedBy ? 'Баталсан' : 'Батлагдаагүй'}\r\n                                </Checkbox>\r\n                                :\r\n                                <span>{item.approvedBy ? 'Баталсан' : 'Батлагдаагүй'}</span>\r\n                            }\r\n                        </td>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <td\r\n                            className=\"text-sm text-gray-900 border-r print:break-before-auto\"\r\n                            dangerouslySetInnerHTML={{ __html: item.monday }}\r\n                        />\r\n                        <td\r\n                            className=\"text-sm text-gray-900 border-r print:break-before-auto\"\r\n                            dangerouslySetInnerHTML={{ __html: item.tuesday }}\r\n                        />\r\n                        <td\r\n                            className=\"text-sm text-gray-900 border-r print:break-before-auto\"\r\n                            dangerouslySetInnerHTML={{ __html: item.wednesday }}\r\n                        />\r\n                        <td\r\n                            className=\"text-sm text-gray-900 border-r print:break-before-auto\"\r\n                            dangerouslySetInnerHTML={{ __html: item.thursday }}\r\n                        />\r\n                        <td\r\n                            className=\"text-sm text-gray-900 border-r print:break-before-auto\"\r\n                            dangerouslySetInnerHTML={{ __html: item.friday }}\r\n                        />\r\n                        <td\r\n                            className=\"text-sm text-gray-900 border-r print:hidden\"\r\n                            onClick={e => permissions.approve_plan && (e && e.stopPropagation) && e.stopPropagation()}\r\n                        >\r\n                            {permissions.approve_plan ?\r\n                                <Checkbox\r\n                                    onChange={e => onCheckBoxChange(e)}\r\n                                    disabled={approveDailyPlanLoading}\r\n                                    checked={item.approvedBy ? true : false}\r\n                                >\r\n                                    {item.approvedBy ? 'Баталсан' : 'Батлагдаагүй'}\r\n                                </Checkbox>\r\n                                :\r\n                                <span>{item.approvedBy ? 'Баталсан' : 'Батлагдаагүй'}</span>\r\n                            }\r\n                        </td>\r\n                    </>\r\n                }\r\n            </tr>\r\n            {show &&\r\n                <tr ref={contextMenuRef} className=\"absolute z-10\" style={{\r\n                    top: points.y,\r\n                    left: points.x\r\n                }}>\r\n                    <td className=\"bg-white w-60 border border-gray-300 rounded-lg flex flex-col text-sm py-4 px-2 text-gray-500\">\r\n                        <div className=\"flex py-1 px-2 rounded hover:bg-background hover:cursor-pointer\" onClick={() => onDeleteDailyPlan(item.id)}>\r\n                            <div className=\"w-8\">\r\n                                <DeleteTwoTone twoToneColor=\"#eb2f96\" key=\"delete\" />\r\n                            </div>\r\n                            <div>Устгах</div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst DailyPlan = ({ data = [], permissions }) => {\r\n\r\n    const [selectedData, setSelectedData] = useState({})\r\n\r\n    const dailyPlanModalRef = useRef()\r\n\r\n    function handleCancel() {\r\n        dailyPlanModalRef.current.handleCancel()\r\n    }\r\n\r\n    function handleOpen() {\r\n        if (permissions.create) {\r\n            setSelectedData({})\r\n            dailyPlanModalRef.current.handleOpen()\r\n        }\r\n    }\r\n\r\n    function onRowClick(params) {\r\n        if (permissions.edit) {\r\n            setSelectedData(params)\r\n            dailyPlanModalRef.current.handleOpen()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FormModal ref={dailyPlanModalRef} formName=\"dailyPlanForm\">\r\n                <DailyPlanForm\r\n                    subPlan={data.id}\r\n                    selectedData={selectedData}\r\n                    closeModal={handleCancel}\r\n                />\r\n            </FormModal>\r\n            <div className=\"flex flex-col\">\r\n                <div className=\"sm:-mx-6 lg:-mx-8\">\r\n                    <div className=\"py-2 inline-block min-w-full print:block sm:px-6 lg:px-8\">\r\n                        <div className=\"\">\r\n                            <table className=\"w-full table-fixed border text-center print:break-before-all\">\r\n                                <thead>\r\n                                    <tr className=\"border-b\">\r\n                                        <td className=\"px-6 py-4  text-sm font-bold text-gray-900 border-r\">Үйл ажиллагаа</td>\r\n                                        <td className=\"text-sm text-gray-900 font-bold px-6 py-4 border-r\">Даваа</td>\r\n                                        <td className=\"text-sm text-gray-900 font-bold px-6 py-4 border-r\">Мягмар</td>\r\n                                        <td className=\"text-sm text-gray-900 font-bold px-6 py-4 border-r\">Лхагва</td>\r\n                                        <td className=\"text-sm text-gray-900 font-bold px-6 py-4 border-r\">Пүрэв</td>\r\n                                        <td className=\"text-sm text-gray-900 font-bold px-6 py-4 border-r\">Баасан</td>\r\n                                        <td className=\"text-sm text-gray-900 font-bold px-6 py-4 border-r print:hidden\">Төлөв</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {data.map((item, index) => (\r\n                                        <DailyPlanRow\r\n                                            onRowClick={onRowClick}\r\n                                            key={index}\r\n                                            item={item}\r\n                                            permissions={permissions}\r\n                                        />\r\n                                    ))}\r\n                                    {permissions.create &&\r\n                                        <tr className=\"bg-white border-b print:hidden\">\r\n                                            <td className=\"px-6 py-4  font-bold text-gray-900 border-r\" colSpan={7}>\r\n                                                <PlusCircleIcon className='h-6 m-auto hover:cursor-pointer' onClick={() => handleOpen()} />\r\n                                            </td>\r\n                                        </tr>\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DailyPlan","import React, { useEffect } from 'react';\r\nimport { Col, Form, Input, message, Row, Select, Spin } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ALL_SUB_PLANS, CREATE_SUB_PLAN, UPDATE_SUB_PLAN } from 'graphql/plan';\r\nimport BraftEditor from 'braft-editor';\r\nimport { subjectNames } from 'utils';\r\n\r\nconst { Option } = Select\r\n\r\nfunction SubPlanForm({ closeModal, selectedData, plan }) {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const [create, { loading: createLoading }] = useMutation(CREATE_SUB_PLAN, {\r\n        refetchQueries: [{\r\n            query: ALL_SUB_PLANS,\r\n            variables: { plan: plan }\r\n        }],\r\n        onCompleted: data => {\r\n            closeModal();\r\n            message.success(\"Амжилттай хадгаллаа\")\r\n        }\r\n    })\r\n\r\n    const [update, { loading: updateLoading }] = useMutation(UPDATE_SUB_PLAN, {\r\n        refetchQueries: [{\r\n            query: ALL_SUB_PLANS,\r\n            variables: { plan: plan }\r\n        }],\r\n        onCompleted: data => {\r\n            closeModal();\r\n            message.success(\"Амжилттай хадгаллаа\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (selectedData.id) {\r\n            const formData = {\r\n                subjectName: selectedData.subjectName,\r\n                hand: selectedData.hand,\r\n                jumping: selectedData.jumping,\r\n                running: selectedData.running,\r\n                shoot: selectedData.shoot,\r\n                body: selectedData.body,\r\n                walk: selectedData.walk,\r\n                game: selectedData.game,\r\n                consumables: BraftEditor.createEditorState(selectedData.consumables),\r\n                teachingMethods: BraftEditor.createEditorState(selectedData.teachingMethods),\r\n                goal: BraftEditor.createEditorState(selectedData.goal),\r\n                content: BraftEditor.createEditorState(selectedData.content)\r\n            }\r\n            form.setFieldsValue(formData);\r\n        } else {\r\n            form.resetFields()\r\n        }\r\n    }, [selectedData, form])\r\n\r\n    const onFinish = values => {\r\n        values.plan = plan\r\n        values.consumables = values.consumables.toHTML();\r\n        values.content = values.content.toHTML();\r\n        values.goal = values.goal.toHTML();\r\n        values.teachingMethods = values.teachingMethods.toHTML();\r\n        if (selectedData.id) {\r\n            values.id = selectedData.id\r\n            update({ variables: values })\r\n        } else {\r\n            create({ variables: values })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Spin spinning={createLoading || updateLoading} tip=\"Ачааллаж байна...\">\r\n            <Form\r\n                id=\"subPlanForm\"\r\n                layout={'vertical'}\r\n                form={form}\r\n                name=\"subPlanForm\"\r\n                onFinish={onFinish}\r\n            >\r\n                <Row gutter={[24, 24]}>\r\n                    <Col xs={24} xl={12}>\r\n                        <Form.Item name=\"subjectName\" label={<IntlMessage id=\"subject\" />} rules={[\r\n                            {\r\n                                required: true,\r\n                                message: <IntlMessage id=\"form.required\" />\r\n                            }\r\n                        ]}>\r\n                            <Select>\r\n                                {subjectNames.map((subject, index) => (\r\n                                    <Option\r\n                                        value={subject.value}\r\n                                        key={index}\r\n                                    >\r\n                                        {subject.label}\r\n                                    </Option>\r\n                                ))}\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} xl={12}>\r\n                        <Form.Item name=\"hand\" label={<IntlMessage id=\"hand\" />} rules={[\r\n                            {\r\n                                max: 150,\r\n                                message: <IntlMessage id=\"form.max\" />\r\n                            }\r\n                        ]}>\r\n                            <Input.TextArea rows={1} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} xl={12}>\r\n                        <Form.Item name=\"jumping\" label={<IntlMessage id=\"jumping\" />} rules={[\r\n                            {\r\n                                max: 150,\r\n                                message: <IntlMessage id=\"form.max\" />\r\n                            }\r\n                        ]}>\r\n                            <Input.TextArea rows={1} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} xl={12}>\r\n                        <Form.Item name=\"running\" label={<IntlMessage id=\"running\" />} rules={[\r\n                            {\r\n                                max: 150,\r\n                                message: <IntlMessage id=\"form.max\" />\r\n                            }\r\n                        ]}>\r\n                            <Input.TextArea rows={1} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} xl={12}>\r\n                        <Form.Item name=\"shoot\" label={<IntlMessage id=\"shoot\" />} rules={[\r\n                            {\r\n                                max: 150,\r\n                                message: <IntlMessage id=\"form.max\" />\r\n                            }\r\n                        ]}>\r\n                            <Input.TextArea rows={1} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} xl={12}>\r\n                        <Form.Item name=\"body\" label={<IntlMessage id=\"body\" />} rules={[\r\n                            {\r\n                                max: 150,\r\n                                message: <IntlMessage id=\"form.max\" />\r\n                            }\r\n                        ]}>\r\n                            <Input.TextArea rows={1} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} xl={12}>\r\n                        <Form.Item name=\"walk\" label={<IntlMessage id=\"walk\" />} rules={[\r\n                            {\r\n                                max: 150,\r\n                                message: <IntlMessage id=\"form.max\" />\r\n                            }\r\n                        ]}>\r\n                            <Input.TextArea rows={1} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} xl={12}>\r\n                        <Form.Item name=\"game\" label={<IntlMessage id=\"game\" />} rules={[\r\n                            {\r\n                                max: 150,\r\n                                message: <IntlMessage id=\"form.max\" />\r\n                            }\r\n                        ]}>\r\n                            <Input.TextArea rows={1} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} xl={12}>\r\n                        <Form.Item name=\"consumables\" label={<IntlMessage id=\"consumables\" />} rules={[\r\n                            {\r\n                                required: true,\r\n                                message: <IntlMessage id=\"form.required\" />\r\n                            }\r\n                        ]}>\r\n                            <BraftEditor\r\n                                className='border rounded-2'\r\n                                language=\"en\"\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} xl={12}>\r\n                        <Form.Item name=\"content\" label={<IntlMessage id=\"content\" />} rules={[\r\n                            {\r\n                                required: true,\r\n                                message: <IntlMessage id=\"form.required\" />\r\n                            }\r\n                        ]}>\r\n                            <BraftEditor\r\n                                className='border rounded-2'\r\n                                language=\"en\"\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} xl={12}>\r\n                        <Form.Item name=\"goal\" label={<IntlMessage id=\"goal\" />} rules={[\r\n                            {\r\n                                required: true,\r\n                                message: <IntlMessage id=\"form.required\" />\r\n                            }\r\n                        ]}>\r\n                            <BraftEditor\r\n                                className='border rounded-2'\r\n                                language=\"en\"\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} xl={12}>\r\n                        <Form.Item name=\"teachingMethods\" label={<IntlMessage id=\"teachingMethods\" />} rules={[\r\n                            {\r\n                                required: true,\r\n                                message: <IntlMessage id=\"form.required\" />\r\n                            }\r\n                        ]}>\r\n                            <BraftEditor\r\n                                className='border rounded-2'\r\n                                language=\"en\"\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport default SubPlanForm","import React, { forwardRef, useRef, useState } from 'react'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { Button } from 'antd'\r\nimport { PrinterOutlined, RollbackOutlined , CheckOutlined, PlusCircleOutlined } from '@ant-design/icons';\r\nimport FormModal from 'components/shared-components/FormModal'\r\nimport Loading from 'components/shared-components/Loading'\r\nimport IntlMessage from 'components/util-components/IntlMessage'\r\nimport { ALL_SUB_PLANS, APPROVE_PLAN, PLAN_BY_ID, ALL_DAILY_PLANS } from 'graphql/plan'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useReactToPrint } from 'react-to-print'\r\nimport SubPlan from './sub-plan'\r\nimport { CheckPer } from 'hooks/checkPermission';\r\nimport moment from 'moment';\r\nimport DailyPlan from './daily-plan';\r\nimport SubPlanForm from './sub-plan/form';\r\n\r\nconst PrintCard = forwardRef (({ data, permissions, subPlans, dailyPlans, handleSubEdit }, ref) => {\r\n\r\n    return (\r\n        <div className='bg-white rounded-4 p-2' ref={ref} >\r\n            <div className='flex flex-row justify-end'>\r\n                <h4 className='text-black font-bold mr-40'>БАТЛАВ: </h4>\r\n                <h4 className=' text-black font-bold'>{data.planById.approvedBy?.familyName} {data.planById.approvedBy?.name}</h4>\r\n            </div>\r\n            <div>\r\n                <h4 className='text-center text-black uppercase'>\r\n                    {data.planById.section.school.name} {data.planById.section.classes.program.program}-{data.planById.section.section} бүлгийн <br/>\r\n                    {moment(data.planById.startDate).format(\"YYYY.MM.DD\")}-{moment(data.planById.endDate).format(\"YYYY.MM.DD\")} ХҮРТЭЛХ ҮЙЛ АЖИЛЛАГААНЫ ТӨЛӨВЛӨЛТ\r\n                </h4>\r\n            </div>\r\n            <DailyPlan \r\n                data={dailyPlans?.allDailyPlans}\r\n                permissions={permissions}\r\n            />\r\n            <div className='flex justify-center'>\r\n                <p className='mr-40 text-black'>Төлөвлөгөө боловсруулсан багш:</p>\r\n                <p className='text-black'>{`${data.planById.teacher.familyName} ${data.planById.teacher.name}`}</p>\r\n            </div>\r\n            { subPlans?.allSubPlans.map((item, index) => (\r\n                <SubPlan \r\n                    onClick={handleSubEdit}\r\n                    key={index} \r\n                    data={item} \r\n                    permissions={permissions}\r\n                    teacher={`${data.planById.teacher.familyName} ${data.planById.teacher.name}`}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n});\r\n\r\nconst Show = () => {\r\n\r\n    const { id } = useParams()\r\n    \r\n    const componentRef = useRef();\r\n    const subPlanModalRef = useRef()\r\n    \r\n    const [selectedSubPlan, setSelectedSubPlan] = useState({})\r\n\r\n    const { data, loading, error } = useQuery(PLAN_BY_ID, {\r\n        variables: { id: id }\r\n    })\r\n\r\n    const { data: dailyPlans } = useQuery(ALL_DAILY_PLANS, {\r\n        variables: { plan: id }\r\n    })\r\n\r\n    const { data: subPlans } = useQuery(ALL_SUB_PLANS, {\r\n        variables: { plan: id }\r\n    })\r\n    \r\n    const [approvePlan] = useMutation(APPROVE_PLAN, {\r\n        refetchQueries: [\r\n            { \r\n                query: PLAN_BY_ID, \r\n                variables: { id: id } \r\n            }, \r\n            { \r\n                query: ALL_DAILY_PLANS,\r\n                variables: { plan: id } \r\n            }, \r\n            { \r\n                query: ALL_SUB_PLANS,\r\n                variables: { plan: id } \r\n            },\r\n            // ... subPlans?.allSubPlans.map(item => {\r\n            //     return {\r\n            //         query: ALL_SUB_PLAN_ACTIONS,\r\n            //         variables: { subPlan: item.id }\r\n            //     }\r\n            // })\r\n        ]\r\n    })\r\n\r\n    const permissions = {\r\n        create: CheckPer('add_plan'), \r\n        edit: CheckPer('change_plan'),\r\n        delete: CheckPer('delete_plan'),\r\n        approve_plan: CheckPer('approve_plan')\r\n    }\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n\r\n    function handleApporve() {\r\n        approvePlan({ variables: { plan: id } });\r\n    }\r\n    \r\n    function handleCancel() {\r\n        subPlanModalRef.current.handleCancel()\r\n    }\r\n\r\n    function handleSubCreate() {\r\n        if (permissions.create) {\r\n            setSelectedSubPlan({})\r\n            subPlanModalRef.current.handleOpen()\r\n        }\r\n    }\r\n\r\n    function handleSubEdit(params) {\r\n        if (permissions.edit) {\r\n            setSelectedSubPlan(params)\r\n            subPlanModalRef.current.handleOpen()\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return <Loading cover='content' />\r\n    }\r\n    \r\n    if (error) {\r\n        return (\r\n            <section className=\"bg-white \">\r\n                <div className=\"py-8 px-4 mx-auto max-w-screen-xl lg:py-16 lg:px-6\">\r\n                    <div className=\"mx-auto max-w-screen-sm text-center\">\r\n                        <h1 className=\"mb-4 text-7xl tracking-tight font-extrabold lg:text-9xl text-mkp-600 \">404</h1>\r\n                        <p className=\"mb-4 text-3xl tracking-tight font-bold text-mkp-600 md:text-4xl \">Хуудас олдсонгүй.</p>\r\n                        <p className=\"mb-4 text-lg font-light text-gray-500 \">Уучлаарай, бид энэ хуудсыг олж чадсангүй. </p>\r\n                        <Link to={'/app/plan'} className=\"inline-flex bg-mkp text-white hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center my-4\">Буцах</Link>\r\n                    </div>   \r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FormModal ref={subPlanModalRef} formName=\"subPlanForm\">\r\n                <SubPlanForm \r\n                    plan={id}\r\n                    selectedData={selectedSubPlan} \r\n                    closeModal={handleCancel} \r\n                />\r\n            </FormModal>\r\n            <div className='flex justify-between mb-4'>\r\n                <div>\r\n                    <Link to={'/app/plan'}>\r\n                        <Button type=\"default\" icon={<RollbackOutlined />} > <IntlMessage id=\"back\" /> </Button>\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    { !data.planById.approvedBy && permissions.approve_plan &&\r\n                        <Button className='mr-4 bg-green-400 border-green-200' onClick={handleApporve} type=\"primary\" icon={<CheckOutlined />} > Батлах </Button>\r\n                    }\r\n                    {\r\n                        permissions.create && <Button  className='mr-4 bg-slate-400 border-slate-200' onClick={handleSubCreate} type=\"primary\" icon={<PlusCircleOutlined />} > Төлөвлөгөө нэмэх </Button>\r\n                    }\r\n                    <Button onClick={handlePrint} type=\"primary\" icon={<PrinterOutlined />} > <IntlMessage id=\"print\" /> </Button>\r\n                </div>\r\n            </div>\r\n            <div ref={componentRef}>\r\n                <PrintCard \r\n                    data={data} \r\n                    subPlans={subPlans} \r\n                    dailyPlans={dailyPlans}\r\n                    permissions={permissions} \r\n                    handleSubEdit={handleSubEdit}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Show"],"names":["FormModal","forwardRef","ref","children","title","footer","formName","forceRender","useState","isModalVisible","setIsModalVisible","useImperativeHandle","handleOpen","handleCancel","width","visible","onCancel","current","okText","cancelText","okButtonProps","form","key","htmlType","ALL_PLANS","gql","CREATE_PLAN","PLAN_BY_ID","UPDATE_PLAN","DELETE_PLAN","ALL_DAILY_PLANS","CREATE_DAILY_PLAN","UPDATE_DAILY_PLAN","DELETE_DAILY_PLAN","ALL_SUB_PLANS","CREATE_SUB_PLAN","UPDATE_SUB_PLAN","DELETE_SUB_PLAN","ALL_SUB_PLAN_ACTIONS","CREATE_SUB_PLAN_ACTION","UPDATE_SUB_PLAN_ACTION","DELETE_SUB_PLAN_ACTION","APPROVE_PLAN","APPROVE_DAILY_PLAN","APPROVE_SUB_PLAN_ACTION","closeModal","selectedData","subPlan","Form","useMutation","refetchQueries","query","variables","onCompleted","data","message","create","createLoading","loading","update","updateLoading","useEffect","id","formData","action","teacherActivity","BraftEditor","studentActivity","setFieldsValue","resetFields","spinning","tip","layout","name","onFinish","values","toHTML","label","rules","required","IntlMessage","max","className","language","confirm","Modal","SubPlanActionsRow","onActionRowClick","item","onDelete","permissions","x","y","points","setPoints","show","setShow","contextMenuRef","useRef","approveSubPlanAction","approveSubPlanActionLoading","onClickOutside","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","onContextMenuCapture","e","preventDefault","delete","pageX","pageY","onClick","dangerouslySetInnerHTML","__html","approve_plan","stopPropagation","onChange","subPlanAction","isApproved","checked","onCheckBoxChange","disabled","approvedBy","classNames","style","top","left","DeleteTwoTone","twoToneColor","teacher","useParams","setSelectedData","subPlanActionModalRef","useQuery","actions","refetch","plan","deleteSubPlan","deletePlanAction","okType","onOk","params","edit","subjectName","getSubjectNameByValue","content","walk","running","jumping","shoot","game","hand","body","goal","teachingMethods","consumables","onDeleteSubPlan","allSubPlanActions","map","index","colSpan","PlusCircleIcon","Option","Select","isAllDay","allDay","monday","tuesday","wednesday","thursday","friday","value","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","DailyPlanRow","onRowClick","deleteDailyPlan","approveDailyPlan","approveDailyPlanLoading","dailyPlan","onDeleteDailyPlan","dailyPlanModalRef","gutter","xs","xl","subjectNames","subject","rows","PrintCard","subPlans","dailyPlans","handleSubEdit","planById","familyName","section","school","classes","program","moment","startDate","format","endDate","allDailyPlans","allSubPlans","componentRef","subPlanModalRef","selectedSubPlan","setSelectedSubPlan","error","approvePlan","CheckPer","handlePrint","useReactToPrint","Loading","cover","to","type","icon","RollbackOutlined","CheckOutlined","PlusCircleOutlined","PrinterOutlined"],"sourceRoot":""}