{"version":3,"file":"static/js/3697.4fcbd263.chunk.js","mappings":"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","sources":["components/shared-components/ChangePassword/form.js","components/shared-components/ChangePassword/index.js","components/shared-components/FormModal/index.js","graphql/core.js","graphql/create.js","graphql/delete.js"],"sourcesContent":["import { useMutation } from '@apollo/client'\r\nimport { Form, Input, message, Spin } from 'antd'\r\nimport IntlMessage from 'components/util-components/IntlMessage'\r\nimport { CHANGE_USER_PASSWORD } from 'graphql/user'\r\nimport React from 'react'\r\n\r\nconst PasswordForm = ({ user, closeModal }) => {\r\n\r\n    const [updatePassword, { loading }] = useMutation(CHANGE_USER_PASSWORD, {\r\n        onCompleted: data => {\r\n            message.success('Амжилттай хадгаллаа');\r\n            closeModal()\r\n        }\r\n    })\r\n\r\n    function onFinish(values) {\r\n        values.id = user\r\n        updatePassword({ variables: values })\r\n    }\r\n\r\n    return (\r\n        <Spin\r\n            spinning={loading}\r\n        >\r\n            <Form\r\n                layout='vertical'\r\n                name=\"form\"\r\n                onFinish={onFinish}\r\n            >\r\n                <Form.Item name=\"password\" label={<IntlMessage id=\"password\" />} rules={[{ required: true, message: 'Хоосон орхих боломжгүй' }]}>\r\n                    <Input.Password />\r\n                </Form.Item>\r\n            </Form>\r\n        </Spin>\r\n    )\r\n}\r\n\r\nexport default PasswordForm","import { Button } from 'antd'\r\nimport IntlMessage from 'components/util-components/IntlMessage'\r\nimport { LockTwoTone } from '@ant-design/icons';\r\nimport React, { useRef } from 'react'\r\nimport FormModal from '../FormModal';\r\nimport PasswordForm from './form';\r\n\r\nconst ChangePassword = ({ user }) => {\r\n\r\n    const modalRef = useRef();\r\n    \r\n    function handleCancel() {\r\n        modalRef.current.handleCancel()\r\n    }\r\n\r\n    function handleOpen() {\r\n        modalRef.current.handleOpen()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FormModal ref={modalRef}>\r\n                <PasswordForm closeModal={handleCancel} user={user} />\r\n            </FormModal>\r\n            <Button\r\n                onClick={() => handleOpen()}\r\n                size='small'\r\n                type='text'\r\n                icon={<LockTwoTone />} \r\n            > <IntlMessage id=\"change_password\" />\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChangePassword","import React, { forwardRef, useImperativeHandle, useState } from 'react'\r\nimport { Modal } from 'antd';\r\n\r\nconst FormModal = forwardRef(({ children, title, footer, formName = 'form', forceRender = false }, ref) => {\r\n    \r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        handleOpen() {\r\n            setIsModalVisible(true);\r\n        },\r\n        handleCancel () {\r\n            setIsModalVisible(false);\r\n        }\r\n    }));\r\n    \r\n    return (\r\n        <Modal \r\n            width={1000}\r\n            title={title} \r\n            visible={isModalVisible}\r\n            onCancel={ref.current?.handleCancel}\r\n            okText=\"Хадгалах\"\r\n            footer={footer}\r\n            cancelText=\"Болих\"\r\n            forceRender={forceRender}\r\n            okButtonProps={{form:formName, key: 'submit', htmlType: 'submit'}}\r\n        >\r\n            {children}\r\n        </Modal>\r\n    )\r\n});\r\n\r\nexport default FormModal;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ALL_DEGREES = gql`\r\n  \tquery allDegrees {\r\n        allDegrees {\r\n            id\r\n            name\r\n        }\r\n\t}\r\n`;\r\n\r\nexport const CREATE_DEGREE = gql `\r\n    mutation createDegree($name: String) {\r\n      createDegree(name: $name) {\r\n        degree {\r\n          id\r\n          name\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_DEGREE  = gql `\r\n    mutation updateDegree ($id: ID, $name: String) {\r\n        updateDegree (id: $id, name: $name) {\r\n            degree {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_DEGREE = gql `\r\n    mutation deleteDegree($id: ID!){\r\n        deleteDegree(id: $id){\r\n            degree{\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_ACTIVITY = gql`\r\n  \tquery allActivitys {\r\n        allActivitys {\r\n            id\r\n            name\r\n        }\r\n\t}\r\n`;\r\n\r\nexport const CREATE_ACTIVITY = gql `\r\n    mutation createActivity($name: String) {\r\n      createActivity(name: $name) {\r\n        activity {\r\n          id\r\n          name\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_ACTIVITY  = gql `\r\n    mutation updateActivity ($id: ID, $name: String) {\r\n        updateActivity (id: $id, name: $name) {\r\n            activity {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_ACTIVITY = gql `\r\n    mutation deleteActivity($id: ID!){\r\n        deleteActivity(id: $id){\r\n            activity{\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_STUDENT_STATUS = gql `\r\n    query allStudentStatuss {\r\n        allStudentStatuss {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_STUDENT_STATUS = gql `\r\n    mutation createStudentStatus($name: String) {\r\n        createStudentStatus(name: $name) {\r\n            studentStatus {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_STUDENT_STATUS = gql `\r\n    mutation updateStudentStatus ($id: ID, $name: String) {\r\n        updateStudentStatus (id: $id, name: $name) {\r\n            studentStatus {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_STUDENET_STATUS = gql `\r\n    mutation deleteStudentStatus ($id: ID) {\r\n        deleteStudentStatus (id: $id) {\r\n            studentStatus {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_STUDENT_STATUS_EXTRA = gql `\r\n    query allStudentStatusExtras {\r\n        allStudentStatusExtras {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_STUDENT_STATUS_EXTRA = gql `\r\n    mutation createStudentStatusExtra($name: String) {\r\n        createStudentStatusExtra(name: $name) {\r\n            studentStatusExtra {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_STUDENT_STATUS_EXTRA = gql `\r\n    mutation updateStudentStatusExtra ($id: ID, $name: String) {\r\n        updateStudentStatusExtra (id: $id, name: $name) {\r\n            studentStatusExtra {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_STUDENET_STATUS_EXTRA = gql `\r\n    mutation deleteStudentStatusExtra ($id: ID) {\r\n        deleteStudentStatusExtra (id: $id) {\r\n            studentStatusExtra {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const ALL_TEACHER_STATUS = gql `\r\n    query allTeacherStatuss {\r\n        allTeacherStatuss {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_TEACHER_STATUS = gql `\r\n    mutation createTeacherStatus($name: String) {\r\n        createTeacherStatus(name: $name) {\r\n            teacherStatus {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_TEACHER_STATUS = gql `\r\n    mutation updateTeacherStatus ($id: ID, $name: String) {\r\n        updateTeacherStatus (id: $id, name: $name) {\r\n            teacherStatus {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_STEACHER_STATUS = gql `\r\n    mutation deleteTeacherStatus ($id: ID) {\r\n        deleteTeacherStatus (id: $id) {\r\n            teacherStatus {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_CLASSTIME = gql `\r\n    query allClasstimes {\r\n        allClasstimes {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_CLASSTIME = gql `\r\n    mutation createClasstime($name: String) {\r\n        createClasstime(name: $name) {\r\n            classtime {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_CLASSTIME = gql `\r\n    mutation updateClasstime ($id: ID, $name: String) {\r\n        updateClasstime (id: $id, name: $name) {\r\n            classtime {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_SCLASSTIME = gql `\r\n    mutation deleteClasstime ($id: ID) {\r\n        deleteClasstime (id: $id) {\r\n            classtime {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_ROUTINE = gql `\r\n    mutation createRoutine ($classes: Int, $endDate: Date, $program: Int, $room: String, $schoolyear: Int, $section: Int, $startDate: Date, \r\n                            $subject: Int, $teacher: Int, $time: String, $type: String, $weekly: Int) {\r\n        createRoutine (classes: $classes, endDate: $endDate, program: $program, room: $room, schoolyear: $schoolyear, section: $section, \r\n                        startDate: $startDate, subject: $subject, teacher: $teacher, time: $time, type: $type, weekly: $weekly) {\r\n            routine {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_MENUS = gql `\r\n    query allMenus{\r\n        allMenus {\r\n            priority\r\n            key\r\n            path\r\n            title\r\n            icon\r\n            breadcrumb\r\n            subMenu\r\n            menuSet {\r\n                priority\r\n                key\r\n                path\r\n                title\r\n                icon\r\n                breadcrumb\r\n                subMenu\r\n            }\r\n        }\r\n    }\r\n`; \r\n\r\nexport const UPDATE_MENU = gql `\r\n    mutation updateMenu($breadcrumb: Boolean, $icon: String, $id: ID, $priority: Int, $status: String, $submenu: Int) {\r\n        updateMenu (breadcrumb: $breadcrumb, icon: $icon, id: $id, priority: $priority, status: $status, submenu: $submenu) {\r\n            menu {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_SCHOOLYEAR = gql `\r\n    query allSchoolyears {\r\n        allSchoolyears {\r\n            id\r\n            schoolyear\r\n            startDate\r\n            endDate\r\n            isCurrent\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_SCHOOLYEAR = gql `\r\n    mutation createSchoolyear ($endDate: String, $schoolyear: String, $startDate: String, $isCurrent: Boolean) {\r\n        createSchoolyear (endDate: $endDate, schoolyear: $schoolyear, startDate: $startDate, isCurrent: $isCurrent) {\r\n            schoolyear {\r\n                schoolyear\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_SCHOOLYEAR = gql `\r\n    mutation updateSchoolyear ($endDate: String, $id: ID, $schoolyear: String, $startDate: String, $isCurrent: Boolean) {\r\n        updateSchoolyear (endDate: $endDate, id: $id, schoolyear: $schoolyear, startDate: $startDate, isCurrent: $isCurrent) {\r\n            schoolyear {\r\n                schoolyear\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_SCHOOLYEAR = gql `\r\n    mutation deleteSchoolyear ($id: ID) {\r\n        deleteSchoolyear (id: $id) {\r\n            schoolyear {\r\n                schoolyear\r\n            }\r\n        }\r\n    }\r\n`;","import { gql } from '@apollo/client';\r\n\r\nexport const CREATE_SCHOOL = gql `\r\n    mutation createSchool($name: String, $nameMgl: String) {\r\n      createSchool(name: $name, nameMgl: $nameMgl) {\r\n        school {\r\n          id\r\n          name\r\n          nameMgl\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nexport const CREATE_SUB_SCHOOL = gql `\r\n    mutation createSubSchool($name: String, $nameMgl: String, $school: Int!){\r\n      createSubSchool(name: $name, nameMgl: $nameMgl, school: $school) {\r\n        subSchool {\r\n          id\r\n          name\r\n          nameMgl \r\n          school {\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nexport const REGISTER = gql `\r\n    mutation register($email: String!, $username: String!, $isTeacher: Boolean!, $isStudent: Boolean!, $password1: String!, $password2: String!){\r\n      register(email: $email, username: $username, isTeacher: $isTeacher, isStudent: $isStudent, password1: $password1, password2: $password2) {\r\n          success\r\n          errors\r\n          token\r\n      } \r\n    }\r\n\r\n`;\r\n\r\nexport const CREATE_TEACHER = gql `\r\n    mutation createTeacher($address: String, $birthCity: Int, $birthDistrict: Int, $birthdate: String, $degree: Int,\r\n                            $familyName: String, $joinBefore: String, $joinDate: String, $name: String, $phone: String, $phone2: String,\r\n                            $registerNo: String, $school: Int, $sex: String, $status: Int, $subSchool: Int, $teacherCode: String!,\r\n                            $username: String!, $password: String!, $email: String!, $access: String!\r\n                            # $user: Int\r\n                            ) {\r\n      createTeacher(address: $address, birthCity: $birthCity, birthDistrict: $birthDistrict, birthdate: $birthdate, degree: $degree,\r\n                             familyName: $familyName, joinBefore: $joinBefore, joinDate: $joinDate, name: $name, phone: $phone, phone2: $phone2, \r\n                            registerNo: $registerNo, school: $school, sex: $sex, status: $status, subSchool: $subSchool, \r\n                            teacherCode: $teacherCode, access: $access,\r\n                            username: $username, password: $password, email: $email\r\n                            # user: $user \r\n                            ) {\r\n        teacher {\r\n          id\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nexport const CREATE_EMPLOYEE = gql `\r\n    mutation createEmployee(\r\n                $address: String\r\n                $birthCity: Int\r\n                $birthDistrict: Int\r\n                $birthdate: String\r\n                $email: String!\r\n                $employeeCode: String!\r\n                $familyName: String\r\n                $group: Int\r\n                $name: String\r\n                $password: String!\r\n                $phone: String\r\n                $phone2: String\r\n                $photo: Upload\r\n                $registerNo: String\r\n                $sex: String\r\n                $status: Int\r\n                $compartment: Int\r\n                $username: String!\r\n              ) {\r\n      createEmployee(\r\n                address: $address\r\n                birthCity: $birthCity\r\n                birthDistrict: $birthDistrict\r\n                birthdate: $birthdate\r\n                email: $email\r\n                employeeCode: $employeeCode\r\n                familyName: $familyName\r\n                group: $group\r\n                name: $name\r\n                password: $password\r\n                phone: $phone\r\n                phone2: $phone2\r\n                photo: $photo\r\n                compartment: $compartment\r\n                registerNo: $registerNo\r\n                sex: $sex\r\n                status: $status\r\n                username: $username\r\n          ) {\r\n          employee {\r\n          id\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nexport const CREATE_STUDENT = gql `\r\n    mutation createStudent($activity: Int, $address: String, $birthCity: Int, $birthDistrict: Int, $birthdate: String,\r\n                            $classes: Int, $classtime: Int, $familyName: String, $joinDate: String,\r\n                            $joinSchoolyear: String, $name: String, $nationality: String, $phone: String, $program: Int, \r\n                            $registerNo: String, $religion: String, $school: Int, $section: Int, $sex: String, $state: String, $status: Int, \r\n                            $statusExtra: Int, $surname: String, $studentCode: String,\r\n                            $username: String!, $password: String!) {\r\n      createStudent(activity: $activity, address: $address, birthCity: $birthCity, birthDistrict: $birthDistrict, birthdate: $birthdate, \r\n                    classes: $classes, familyName: $familyName, joinDate: $joinDate, name: $name, phone: $phone, \r\n                    registerNo: $registerNo, religion: $religion, school: $school, sex: $sex, status: $status,\r\n                    surname: $surname, studentCode: $studentCode, classtime: $classtime, joinSchoolyear: $joinSchoolyear, \r\n                    nationality: $nationality, program: $program, section: $section, state: $state, statusExtra: $statusExtra,\r\n                    username: $username, password: $password, email: \"test@test.mn\") {\r\n        student {\r\n          id\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nexport const CREATE_SECTION = gql `\r\n  mutation createSection($classes: Int, $maxStudentNum: Int, $program: Int, $teacher: Int,  $school: Int, $section: String) {\r\n    createSection(classes: $classes, program: $program, school: $school, section: $section, maxStudentNum: $maxStudentNum, teacher: $teacher) {\r\n      section {\r\n        section\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const CREATE_CLASSES = gql `\r\n  mutation createClasses($activity: Int, $classes: String,\r\n                          $program: Int, $school: Int, $status: String) {\r\n    createClasses(activity: $activity, classes: $classes,\r\n                  program: $program, school: $school, status: $status) {\r\n      classes {\r\n        classes\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const CREATE_PROGRAM = gql `\r\n    mutation createProgram($program: String, $programMgl: String,  \r\n                           $status: String, $maxStudentNum: Int, $school: Int, $subSchool: Int) {\r\n      createProgram(program: $program, programMgl: $programMgl,  \r\n                    status: $status, maxStudentNum: $maxStudentNum, school: $school, subSchool: $subSchool) {\r\n        program {\r\n          id\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nexport const CREATE_SUBJECT = gql `\r\n  mutation createSubject($credit: String, $subject: String, $content: String, $school: Int, $subSchool: Int) {\r\n    createSubject(credit: $credit, subject: $subject, school: $school, content: $content, subSchool: $subSchool) {\r\n      subject {\r\n        credit\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const CREATE_PROGRAM_SUBJECT = gql `\r\n  mutation createProgramSubject($program: Int, $subject: Int) {\r\n    createProgramSubject(program: $program, subject: $subject) {\r\n      programSubjectType {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_ROUTINE_STUDENT = gql `\r\n  mutation createRoutineStudent ($routine: Int, $studentCode: String, $section: Int) {\r\n    createRoutineStudent (routine: $routine, studentCode: $studentCode, section: $section) {\r\n      routineStudent {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const CREATE_PARENT = gql `\r\n    mutation createParent ($address: String, $familyName: String, $name: String, $phone: String, $profession: String, $student: Int) {\r\n        createParent (address: $address, familyName: $familyName, name: $name, phone: $phone, profession: $profession, student: $student) {\r\n            parent {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_EVENT_TYPE = gql `\r\n    mutation createEventType ($color: String, $name: String) {\r\n        createEventType (color: $color, name: $name) {\r\n            eventType {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_EVENT = gql`\r\n    mutation createEvent ($content: String, $description: String, $endAt: String, $eventType: Int, $startAt: String, $title: String) {\r\n        createEvent (content: $content, description: $description, endAt: $endAt, eventType: $eventType, startAt: $startAt, title: $title) {\r\n            event {\r\n                title\r\n            }\r\n        }\r\n    }\r\n`;","import { gql } from '@apollo/client'\r\n\r\nexport const DELETE_CITY = gql `\r\n    mutation deleteCity($id: ID!){\r\n        deleteCity(id: $id){\r\n            city{\r\n              name\r\n              code\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_USER = gql `\r\n    mutation deleteAccount($username: String) {\r\n        deleteAccount(username: $username) {\r\n            account {\r\n                username\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_TEACHER = gql `\r\n    mutation deleteTeacher($id: ID!){\r\n      deleteTeacher(id: $id){\r\n            teacher{\r\n              name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_EMPLOYEES = gql `\r\n  mutation deleteEmployee($id: ID){\r\n    deleteEmployee(id: $id){\r\n      employee{\r\n        name\r\n      }\r\n    }\r\n  }\r\n  `;\r\n\r\nexport const DELETE_SUBJECT = gql `\r\n  mutation deleteSubject ($id: ID) {\r\n    deleteSubject (id: $id) {\r\n      subject {\r\n        credit\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_STUDENT = gql `\r\n    mutation deleteStudent($id: ID!){\r\n      deleteStudent(id: $id){\r\n            student{\r\n              surname\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_SUB_SCHOOL = gql `\r\n  mutation deleteSubSchool($id: ID){\r\n    deleteSubSchool(id: $id){\r\n      subSchool{\r\n        name\r\n      }\r\n    }\r\n}\r\n`\r\n\r\nexport const DELETE_SCHOOL = gql `\r\n  mutation deleteSchool($id: ID!){\r\n    deleteSchool(id: $id){\r\n      school{\r\n        name\r\n      }\r\n    }\r\n}\r\n`\r\n\r\nexport const DELETE_SECTION = gql `\r\n  mutation deleteSection($id: ID){\r\n    deleteSection(id: $id){\r\n      section{\r\n        section\r\n      }\r\n    }\r\n}\r\n`\r\n\r\nexport const DELETE_CLASS = gql `\r\n  mutation deleteClasses($id: ID!){\r\n    deleteClasses(id: $id){\r\n      classes{\r\n        classes\r\n      }\r\n    }\r\n}\r\n`\r\n\r\nexport const DELETE_PROGRAM = gql `\r\n    mutation deleteProgram($id: ID!){\r\n        deleteProgram(id: $id){\r\n            program{\r\n                program\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_ROUTINE = gql `\r\n    mutation deleteRoutine ($id: ID) {\r\n        deleteRoutine (id: $id) {\r\n            routine {\r\n                createdAt\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_PARENT = gql `\r\n    mutation deleteParent ($id: ID) {\r\n        deleteParent (id: $id) {\r\n            parent {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_EVENT_TYPE = gql `\r\n    mutation deleteEventType ($id: ID) {\r\n        deleteEventType (id: $id) {\r\n            eventType {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_EVENT = gql`\r\n    mutation deleteEvent ($id: ID) {\r\n        deleteEvent (id: $id) {\r\n            event {\r\n                title\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"names":["user","closeModal","useMutation","CHANGE_USER_PASSWORD","onCompleted","data","message","updatePassword","loading","spinning","layout","name","onFinish","values","id","variables","label","IntlMessage","rules","required","modalRef","useRef","FormModal","ref","current","handleCancel","onClick","handleOpen","size","type","icon","LockTwoTone","forwardRef","children","title","footer","formName","forceRender","useState","isModalVisible","setIsModalVisible","useImperativeHandle","width","visible","onCancel","okText","cancelText","okButtonProps","form","key","htmlType","ALL_DEGREES","gql","CREATE_DEGREE","UPDATE_DEGREE","DELETE_DEGREE","ALL_ACTIVITY","CREATE_ACTIVITY","UPDATE_ACTIVITY","DELETE_ACTIVITY","ALL_STUDENT_STATUS","CREATE_STUDENT_STATUS","UPDATE_STUDENT_STATUS","DELETE_STUDENET_STATUS","ALL_STUDENT_STATUS_EXTRA","CREATE_STUDENT_STATUS_EXTRA","UPDATE_STUDENT_STATUS_EXTRA","DELETE_STUDENET_STATUS_EXTRA","ALL_TEACHER_STATUS","CREATE_TEACHER_STATUS","UPDATE_TEACHER_STATUS","DELETE_STEACHER_STATUS","ALL_CLASSTIME","CREATE_CLASSTIME","UPDATE_CLASSTIME","DELETE_SCLASSTIME","CREATE_ROUTINE","ALL_SCHOOLYEAR","CREATE_SCHOOLYEAR","UPDATE_SCHOOLYEAR","DELETE_SCHOOLYEAR","CREATE_SCHOOL","CREATE_SUB_SCHOOL","CREATE_TEACHER","CREATE_EMPLOYEE","CREATE_STUDENT","CREATE_SECTION","CREATE_CLASSES","CREATE_PROGRAM","CREATE_SUBJECT","CREATE_PARENT","CREATE_EVENT_TYPE","CREATE_EVENT","DELETE_TEACHER","DELETE_EMPLOYEES","DELETE_SUBJECT","DELETE_STUDENT","DELETE_SUB_SCHOOL","DELETE_SCHOOL","DELETE_SECTION","DELETE_CLASS","DELETE_PROGRAM","DELETE_ROUTINE","DELETE_PARENT","DELETE_EVENT_TYPE","DELETE_EVENT"],"sourceRoot":""}