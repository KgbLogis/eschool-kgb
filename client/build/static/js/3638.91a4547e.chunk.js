"use strict";(self.webpackChunkemind=self.webpackChunkemind||[]).push([[3638],{93721:function(e,n,t){t.d(n,{Eo:function(){return F},Gu:function(){return W},Ik:function(){return re},Iy:function(){return ne},LL:function(){return le},NP:function(){return O},O2:function(){return R},OY:function(){return K},Qg:function(){return N},TR:function(){return se},Ve:function(){return H},Wp:function(){return J},_2:function(){return ue},cL:function(){return U},fW:function(){return Y},gT:function(){return te},jk:function(){return B},kQ:function(){return ie},nR:function(){return M},nx:function(){return V},qC:function(){return G},qQ:function(){return E},qz:function(){return ae},rb:function(){return z},vA:function(){return oe},vQ:function(){return X},wT:function(){return _},xs:function(){return D},zd:function(){return ee}});var i,s,r,a,u,l,o,d,c,m,T,p,$,v,f,h,x,Z,g,j,w,k,q,y,L,I,P,A,b,S,C=t(30168),Q=t(27570),N=(0,Q.Ps)(i||(i=(0,C.Z)(["\n    query allOnlineTests {\n        allOnlineTests {\n            id\n            title\n            description\n            subject {\n                id\n                subject\n            }\n        }\n    }\n"]))),O=(0,Q.Ps)(s||(s=(0,C.Z)(["\n    mutation createOnlineTest ($description: String, $subject: Int, $title: String) {\n        createOnlineTest (description: $description, subject: $subject, title: $title) {\n            onlineTest {\n                id\n            }\n        }\n    }\n"]))),D=(0,Q.Ps)(r||(r=(0,C.Z)(["\n    mutation updateOnlineTest ($description: String, $id: ID, $subject: Int, $title: String) {\n        updateOnlineTest (description: $description, id: $id, subject: $subject, title: $title) {\n            OnlineTest {\n                id\n            }\n        }\n    }\n"]))),z=(0,Q.Ps)(a||(a=(0,C.Z)(["\n    mutation deleteOnlineTest ($id: ID) {\n        deleteOnlineTest (id: $id) {\n            onlineTest {\n                id\n            }\n        }\n    }\n"]))),E=(0,Q.Ps)(u||(u=(0,C.Z)(["\n    query allQuestionLevels {\n        allQuestionLevels {\n            level\n            id\n        }\n    }\n"]))),F=(0,Q.Ps)(l||(l=(0,C.Z)(["\n    mutation createQuestionLevel ($level: String) {\n        createQuestionLevel (level: $level) {\n            questionLevel {\n                id\n            }\n        }\n    }\n"]))),U=(0,Q.Ps)(o||(o=(0,C.Z)(["\n    mutation updateQuestionLevel ($level: String, $id: ID) {\n        updateQuestionLevel (level: $level, id: $id) {\n            questionLevel {\n                id\n            }\n        }\n    }\n"]))),B=(0,Q.Ps)(d||(d=(0,C.Z)(["\n    mutation deleteQuestionLevel ($id: ID) {\n        deleteQuestionLevel (id: $id) {\n            questionLevel {\n                level\n            }\n        }\n    }\n"]))),M=(0,Q.Ps)(c||(c=(0,C.Z)(["\n    query allQuestionsByTest ($id: Int!) {\n        allQuestionsByTest (id: $id) {\n            id\n            question\n            hint\n            image\n            answerType\n            questionLevel {\n                id\n                level\n            }\n            questionChoiceSet {\n                id\n                answer\n                score\n            }\n        }\n    }\n"]))),H=(0,Q.Ps)(m||(m=(0,C.Z)(["\n    mutation createQuestion ($answerType: String, $hint: String, $image: Upload, $onlineTest: Int, $questionL: String, $questionLevel: Int) {\n        createQuestion (answerType: $answerType, hint: $hint, image: $image, onlineTest: $onlineTest, questionL: $questionL, questionLevel: $questionLevel) {\n            question {\n                id\n                answerType\n            }\n        }\n    }\n"]))),V=(0,Q.Ps)(T||(T=(0,C.Z)(["\n    mutation updateQuestion ($answerType: String, $hint: String, $image: Upload, $onlineTest: Int, $questionL: String, $questionLevel: Int, $id: ID) {\n        updateQuestion (answerType: $answerType, hint: $hint, image: $image, onlineTest: $onlineTest, questionL: $questionL, questionLevel: $questionLevel, id: $id) {\n            question {\n                id\n                answerType\n            }\n        }\n    }\n"]))),G=(0,Q.Ps)(p||(p=(0,C.Z)(["\n    mutation deleteQuestion ($id: ID) {\n        deleteQuestion (id: $id) {\n            question {\n                question\n            }\n        }\n    }\n"]))),_=(0,Q.Ps)($||($=(0,C.Z)(["\n    mutation createQuestionChoice ($answer: String, $question: Int, $score: Decimal) {\n        createQuestionChoice (answer: $answer, question: $question, score: $score) {\n            questionChoice {\n                id\n            }\n        }\n    }\n"]))),R=(0,Q.Ps)(v||(v=(0,C.Z)(["\n    mutation updateQuestionChoice ($answer: String, $question: Int, $score: Decimal, $id: ID) {\n        updateQuestionChoice (answer: $answer, question: $question, score: $score, id: $id) {\n            questionChoice {\n                id\n            }\n        }\n    }\n"]))),W=(0,Q.Ps)(f||(f=(0,C.Z)(["\n    mutation deleteQuestionChoice ($id: ID) {\n        deleteQuestionChoice (id: $id) {\n            questionChoice {\n                score\n            }\n        }\n    }\n"]))),X=(0,Q.Ps)(h||(h=(0,C.Z)(["\n    query allTakeTests {\n        allTakeTests {\n            id\n            title\n            description\n            startAt\n            endAt\n            duration\n            status\n        }\n    }\n"]))),Y=(0,Q.Ps)(x||(x=(0,C.Z)(["\n    mutation createTakeTest ($duration: Int, $endAt: String, $startAt: String, $status: String, $description: String, $title: String) {\n        createTakeTest (duration: $duration, endAt: $endAt, startAt: $startAt, status: $status, description: $description, title: $title) {\n            takeTest {\n                status\n            }\n        }\n    }\n"]))),J=(0,Q.Ps)(Z||(Z=(0,C.Z)(["\n    mutation updateTakeTest ($duration: Int, $endAt: String, $startAt: String, $status: String, $id: ID, $description: String, $title: String) {\n        updateTakeTest (duration: $duration, endAt: $endAt, startAt: $startAt, status: $status, id: $id, description: $description, title: $title) {\n            takeTest {\n                status\n            }\n        }\n    }\n"]))),K=(0,Q.Ps)(g||(g=(0,C.Z)(["\n    mutation deleteTakeTest ($id: ID) {\n        deleteTakeTest (id: $id) {\n            takeTest {\n                status\n            }\n        }\n    }\n"]))),ee=(0,Q.Ps)(j||(j=(0,C.Z)(["\n    query allParticipantByTest ($takeTest: Int!) {\n        allParticipantByTest (takeTest: $takeTest) {\n            id\n            student {\n                studentCode\n                familyName\n                name\n            }\n            started\n            completed\n            answerSet {\n                answerType\n                questionText\n                choices\n                score\n                givenAnswer\n            }\n        }\n    }\n"]))),ne=(0,Q.Ps)(w||(w=(0,C.Z)(["\n    mutation createParticipant ($section: Int, $studentCode: String, $takeTest: Int) {\n        createParticipant (section: $section, studentCode: $studentCode, takeTest: $takeTest) {\n            participant {\n                id\n            }\n        }\n    }\n"]))),te=(0,Q.Ps)(k||(k=(0,C.Z)(["\n    mutation deleteParticipant ($id: ID, $takeTest: Int) {\n        deleteParticipant (id: $id, takeTest: $takeTest) {\n            participant {\n                started\n            }\n        }\n    }\n"]))),ie=(0,Q.Ps)(q||(q=(0,C.Z)(["\n    query allTakeLevelByTest ($takeTest: Int!) {\n        allTakeLevelByTest (takeTest: $takeTest) {\n            id\n            onlineTest {\n                id\n                title\n            }\n            questionLevel {\n                id\n                level\n            }\n            takeNumber\n        }\n    }\n"]))),se=(0,Q.Ps)(y||(y=(0,C.Z)(["\n    mutation createTakeLevel ($onlineTest: Int, $questionLevel: Int, $takeNumber: Int, $takeTest: Int) {\n        createTakeLevel (onlineTest: $onlineTest, questionLevel: $questionLevel, takeNumber: $takeNumber, takeTest: $takeTest) {\n            takeLevel {\n                id\n            }\n        }\n    }\n"]))),re=(0,Q.Ps)(L||(L=(0,C.Z)(["\n    mutation deleteTakeLevel ($id: ID) {\n        deleteTakeLevel (id: $id) {\n            takeLevel {\n                takeNumber\n            }\n        }\n    }\n"]))),ae=((0,Q.Ps)(I||(I=(0,C.Z)(["\n    query allSections {\n        allSections {\n            id\n            section\n            studentSet {\n                id\n                studentCode\n            }\n        }\n    }\n"]))),(0,Q.Ps)(P||(P=(0,C.Z)(["\n    query startTest ($takeTest: Int!) {\n        startTest (takeTest: $takeTest) {\n            id\n            questionText\n            choices\n            answerType\n            givenAnswer\n            question {\n                hint\n                image\n            }\n        }\n    }\n"])))),ue=(0,Q.Ps)(A||(A=(0,C.Z)(["\n    mutation updateAnswer ($givenAnswer: String, $id: ID) {\n        updateAnswer (givenAnswer: $givenAnswer, id: $id) {\n            answer {\n                id\n            }\n        }\n    }\n"]))),le=(0,Q.Ps)(b||(b=(0,C.Z)(["\n    query testTime ($takeTest: Int!) {\n        testTime (takeTest: $takeTest) {\n            duration\n            started\n            endAt\n        }\n    }\n"]))),oe=(0,Q.Ps)(S||(S=(0,C.Z)(["\n    query finishTest ($takeTest: Int!) {\n        finishTest (takeTest: $takeTest) {\n            score\n        }\n    }\n"])))},43638:function(e,n,t){t.r(n),t.d(n,{default:function(){return H}});var i=t(29439),s=t(72791),r=t(86586),a=t(96578),u=t(64880),l=t(83373),o=t(50419),d=t(87309),c=t(66106),m=t(30914),T=t(66871),p=t(93721),$=t(72426),v=t.n($),f=t(1413),h=t(30941),x=t(49389),Z=t(20003),g=t(73332),j=t(77063),w=t(36755),k=t(50881),q=t(32014),y=t(76864),L=t(35542),I=t(41938),P=t(67575),A=t(84376),b=t(59305),S=t(82630),C=t(80184),Q=h.Z.Title,N=h.Z.Paragraph,O=h.Z.Text,D=x.Z.TextArea,z=Z.Z.confirm,E={labelCol:{span:3},wrapperCol:{span:24}},F={wrapperCol:{span:32}},U=function(e){var n=e.answer,t=e.refetch,r=e.next,a=e.prev,u=e.setIsFinished,l=e.page,o=e.answers,c=g.Z.useForm(),m=(0,i.Z)(c,1)[0],$=(0,s.useState)(n),v=(0,i.Z)($,2),h=v[0],x=v[1];(0,s.useEffect)((function(){if(n){var e=[],t="";if(x(n),n!==n.givenAnswer){if("TEXT"===n.answerType&&m.setFieldsValue({givenAnswer:n.givenAnswer}),"MULTIPLE"===n.answerType){var i=null===n||void 0===n?void 0:n.givenAnswer.split(",|");i.pop(),i.map((function(t){return n.choices.filter((function(e){return e.text===t})).map((function(n){return e.push(n.value)}))})),m.setFieldsValue({givenAnswer:e})}"CHOOSE"===n.answerType&&(n.choices.filter((function(e){return e.text===n.givenAnswer})).map((function(e){return t=e.value})),m.setFieldsValue({givenAnswer:t}))}}}),[n,m,h]);var Z=(0,A.D)(p._2,{onCompleted:function(e){t(),r()}}),U=(0,i.Z)(Z,2),B=U[0],M=U[1].loading;return void 0===h?(0,C.jsx)(j.ZP,{title:"\u0410\u0441\u0443\u0443\u043b\u0442 \u0430\u043b\u0433\u0430 \u0431\u0430\u0439\u043d\u0430!"}):(0,C.jsxs)(T.Z,{children:[(0,C.jsxs)(Q,{level:3,children:[(0,C.jsx)(S.Z,{id:"question"})," ",l+1]}),(0,C.jsx)(N,{children:h.questionText}),n.hint&&(0,C.jsxs)("div",{children:[(0,C.jsx)(Q,{type:"secondary",level:4,children:(0,C.jsx)(S.Z,{id:"question.hint"})}),(0,C.jsx)(O,{type:"secondary",children:n.hint})]}),n.image&&(0,C.jsx)("div",{className:"p-2",children:(0,C.jsx)(w.Z,{preview:!1,style:{maxHeight:"400px"},className:"img-fluid",alt:"Preview",src:b._O+n.image})}),(0,C.jsxs)(g.Z,(0,f.Z)((0,f.Z)({},E),{},{layout:"vertical",form:m,name:"control-hooks",onFinish:function(e){e.id=h.id,"MULTIPLE"===h.answerType&&(e.givenAnswer=e.givenAnswer.map((function(e){return"".concat(e)})).join(",")),B({variables:e})},initialvaluess:{givenAnswer:h.givenAnswer},children:["TEXT"===h.answerType?(0,C.jsx)(g.Z.Item,{name:"givenAnswer",label:(0,C.jsx)(S.Z,{id:"question.answer"}),rules:[{required:!0,message:(0,C.jsx)(S.Z,{id:"form.required"})}],children:(0,C.jsx)(D,{rows:4})}):null,"CHOOSE"===h.answerType?(0,C.jsx)(g.Z.Item,{name:"givenAnswer",label:(0,C.jsx)(S.Z,{id:"question.answer"}),rules:[{required:!0,message:(0,C.jsx)(S.Z,{id:"form.required"})}],children:(0,C.jsx)(k.ZP.Group,{children:h.choices.map((function(e,n){return(0,C.jsx)(k.ZP,{value:e.value,children:e.text},n)}))})}):null,"MULTIPLE"===h.answerType?(0,C.jsx)(g.Z.Item,{name:"givenAnswer",label:(0,C.jsx)(S.Z,{id:"question.answer"}),rules:[{required:!0}],children:(0,C.jsx)(q.Z.Group,{children:h.choices.map((function(e,n){return(0,C.jsx)(q.Z,{value:e.value,children:e.text},n)}))})}):null,(0,C.jsxs)(g.Z.Item,(0,f.Z)((0,f.Z)({},F),{},{children:[(0,C.jsxs)(d.Z,{size:"small",disabled:l<1&&!0,className:"mr-2",type:"primary",htmlType:"button",loading:M,onClick:function(){return a()},children:[(0,C.jsx)(y.Z,{}),(0,C.jsx)(S.Z,{id:"main.previous"})]}),(0,C.jsxs)(d.Z,{size:"small",disabled:l+1===o.length,type:"danger",className:"mr-2",htmlType:"button",loading:M,onClick:function(){return r()},children:[(0,C.jsx)(L.Z,{}),(0,C.jsx)(S.Z,{id:"main.skip"})]}),(0,C.jsxs)(d.Z,{size:"small",disabled:l+1===o.length,className:"mr-2",type:"primary",htmlType:"submit",loading:M,children:[(0,C.jsx)(S.Z,{id:"main.next"}),(0,C.jsx)(I.Z,{})]}),l+1===o.length&&(0,C.jsxs)(d.Z,{style:{float:"right",background:"#5aac44",borderColor:"#5aac44",color:"#fff"},size:"small",className:"mr-2",type:"danger",htmlType:"submit",onClick:function(){z({title:"\u0428\u0430\u043b\u0433\u0430\u043b\u0442 \u0434\u0443\u0443\u0441\u0433\u0430\u0445 \u0443\u0443?",okText:"\u0414\u0443\u0443\u0441\u0433\u0430\u0445",cancelText:"\u0411\u043e\u043b\u0438\u0445",onOk:function(){u(!0)}})},children:[(0,C.jsx)(P.Z,{}),(0,C.jsx)(S.Z,{id:"main.finish-exam"})]})]}))]}))]})},B=t(38937),M=l.Z.Countdown,H=function(){var e=(0,u.UO)(),n=(0,u.k6)(),t=(0,s.useState)(null),l=(0,i.Z)(t,2),$=l[0],f=l[1],h=(0,s.useState)(!1),x=(0,i.Z)(h,2),Z=x[0],g=x[1],j=(0,s.useState)(!0),w=(0,i.Z)(j,2),k=w[0],q=w[1],y=(0,s.useState)(0),L=(0,i.Z)(y,2),I=L[0],P=L[1],A=(0,s.useState)([]),b=(0,i.Z)(A,2),Q=b[0],N=b[1],O=(0,r.t)(p.LL,{onCompleted:function(e){var n=v()(e.testTime.endAt),t=v()(e.testTime.started),i=v()();if(v().duration(n.diff(i)).asMilliseconds()<0)return o.ZP.error("\u0425\u0443\u0433\u0430\u0446\u0430\u0430 \u0434\u0443\u0443\u0441\u0441\u0430\u043d \u0431\u0430\u0439\u043d\u0430!");v()(t).add(e.testTime.duration,"m").valueOf()<=v()(n).valueOf()?v().duration(v()(t).add(e.testTime.duration,"m").diff(i)).asMilliseconds()<0||f(v()(t).add(e.testTime.duration,"m")):f(n)}}),D=(0,i.Z)(O,1)[0],z=(0,r.t)(p.vA,{onCompleted:function(e){o.ZP.warning("\u0428\u0430\u043b\u0433\u0430\u043b\u0442 \u0434\u0443\u0443\u0441\u0441\u0430\u043d!"),n.push({pathname:"/app/my-score",state:{message:e}})}}),E=(0,i.Z)(z,1)[0],F=(0,a.a)(p.qz,{variables:{takeTest:e.test},onCompleted:function(n){D({variables:{takeTest:e.test}});var t=[];null===n.startTest?g(!0):(n.startTest.map((function(e){var n=[];if("CHOOSE"===e.answerType||"MULTIPLE"===e.answerType){var i=e.choices.split(",|");i.pop(),i.map((function(e){var t=e.split(":|");return n.push({value:t[0],text:t[1]})}))}return t.push({hint:e.question.hint,image:e.question.image,answerType:e.answerType,givenAnswer:e.givenAnswer,id:e.id,questionText:e.questionText,choices:n})})),N(t),q(!1))}}).refetch;(0,s.useEffect)((function(){Z&&E({variables:{takeTest:e.test}})}),[E,Z,e]);var H=function(e){P(e)},V=function(e){var n=e.answer,t=e.index;return t===I?(0,C.jsx)(d.Z,{shape:"circle",type:"dashed",style:{background:"#dde3df",borderColor:"#3c8dbc"},className:"mx-1",size:"small",onClick:function(){return H(t)},children:t+1},t):""===n.givenAnswer?(0,C.jsx)(d.Z,{shape:"circle",className:"mx-1",size:"small",onClick:function(){return H(t)},children:t+1},t):(0,C.jsx)(d.Z,{shape:"circle",type:"primary",className:"mx-1",size:"small",onClick:function(){return H(t)},children:t+1},t)};return k?(0,C.jsx)(B.Z,{cover:"content"}):(0,C.jsx)("div",{children:(0,C.jsxs)(c.Z,{gutter:[8,16],children:[(0,C.jsx)(m.Z,{xs:24,xl:18,children:(0,C.jsx)(U,{answer:Q[I],answers:Q,page:I,next:function(){Q.length>I+1&&P((function(e){return e+1}))},prev:function(){P((function(e){return e-1}))},refetch:F,setIsFinished:g})}),(0,C.jsxs)(m.Z,{xs:24,xl:6,children:[(0,C.jsx)(T.Z,{children:(0,C.jsx)(M,{title:(0,C.jsx)("span",{className:"mb-4",children:(0,C.jsx)(S.Z,{id:"exam.time-left"})}),value:$,onFinish:function(){return g(!0)}})}),(0,C.jsx)(T.Z,{title:(0,C.jsx)(S.Z,{id:"question"}),children:Q.map((function(e,n){return 1,(0,C.jsx)(V,{answer:e,index:n},n)}))}),(0,C.jsxs)(T.Z,{title:(0,C.jsx)(S.Z,{id:"exam.recommendations"}),children:[(0,C.jsxs)("div",{className:"mt-2",children:[(0,C.jsx)(d.Z,{shape:"circle",type:"dashed",style:{background:"#dde3df",borderColor:"#3c8dbc"},className:"mx-1",size:"small",children:"1"}),(0,C.jsx)(S.Z,{id:"exam.current"})]}),(0,C.jsxs)("div",{className:"mt-2",children:[(0,C.jsx)(d.Z,{shape:"circle",type:"primary",className:"mx-1",size:"small",children:"2"}),(0,C.jsx)(S.Z,{id:"exam.completed"})]}),(0,C.jsxs)("div",{className:"mt-2",children:[(0,C.jsx)(d.Z,{shape:"circle",className:"mx-1",size:"small",children:"3"}),(0,C.jsx)(S.Z,{id:"exam.uncompleted"})]})]})]})]})})}}}]);
//# sourceMappingURL=3638.91a4547e.chunk.js.map